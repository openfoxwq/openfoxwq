syntax = "proto2";
package openfoxwq;

import "proto/common.proto";
import "proto/fox.proto";
import "proto/nav.proto";
import "proto/broadcast.proto";
import "proto/play.proto";

option go_package = "github.com/openfoxwq/openfoxwq/proto";

message WsLoginRequest {
    required bytes username = 1;
    required string password = 2;
}

message WsGetInitDataRequest {
}

message WsEnterRoomRequest {
    oneof room {
        int64 broadcast_id = 1;
        RoomId room_id = 2;
    }
}

message WsLeaveRoomRequest {
    oneof room {
        int64 broadcast_id = 1;
        RoomId room_id = 2;
    }
}

message WsGetPlayerInfoRequest {
    oneof info {
        bytes name = 1;
        int64 id = 2;
    }
}

message WsStartAutomatchRequest {
    required int64 preset_id = 1;
}

message WsStopAutomatchRequest {
}

message WsSyncMatchTime {
    required int64 room_id_2 = 1;
    required int64 ts = 2;
}

message WsMoveRequest {
    required int64 room_id_2 = 1;
    required MoveRequest move = 2;
}

message WsPassRequest {
    required int64 room_id_2 = 1;
    required PassRequest pass = 2;
}

message WsResignRequest {
    required int64 room_id_2 = 1;
}

message WsRequestCountingRequest {
    required int64 room_id_2 = 1;
}

message WsSendCountingDecisionRequest {
    required int64 room_id_2 = 1;
    required CountingDecision decision = 2;
}

message WsRequest {
    oneof req {
        WsLoginRequest login = 1;
        WsGetInitDataRequest getInitData = 2;
        WsEnterRoomRequest enterRoom = 3;
        WsLeaveRoomRequest leaveRoom = 4;
        WsGetPlayerInfoRequest getPlayerInfo = 5;
        WsStartAutomatchRequest startAutomatch = 6;
        WsStopAutomatchRequest stopAutomatch = 7;
        WsSyncMatchTime syncMatchTime = 8;
        WsMoveRequest move = 9;
        WsPassRequest pass = 10;
        WsResignRequest resign = 11;
        WsRequestCountingRequest requestCounting = 12;
        WsSendCountingDecisionRequest countingDecision = 13;
        ListRoomParticipantsRequest listRoomParticipants = 14;
    }
}

message WsSyncMatchTimeResponse {
    required int64 room_id_2 = 1;
    required SyncMatchTimeResponse sync_info = 2;
}

message WsNextMoveEvent {
    required int64 room_id_2 = 1;
    required NextMoveEvent event = 2;
}

message WsPassEvent {
    required int64 room_id_2 = 1;
    required PassEvent event = 2;
}

message WsCountdownEvent {
    required int64 room_id_2 = 1;
    required CountdownEvent event = 2;
}

message WsResumeCountdownEvent {
    required int64 room_id_2 = 1;
    required ResumeCountdownEvent event = 2;
}

message WsCountingDecision {
    required int64 room_id_2 = 1;
    required CountingDecision decision = 2;
}

message WsCountingEvent {
    required int64 room_id_2 = 1;
    required CountingEvent event = 2;
}

message WsGameResultEvent {
    required int64 room_id_2 = 1;
    required GameResultEvent event = 2;
}

message WsResponse {
    oneof resp {
        // Server and navigation info
        GetNavInfoResponse navInfo = 1;
        LobbySvrInfo serverInfo = 2;
        LoginResponse login = 3;
        // List responses
        ListPlayersResponse listPlayers = 4; 
        ListBroadcastsResponse listBroadcasts = 5;
        ListRoomParticipantsResponse listRoomParticipants = 6;
        // Broadcast events
        BroadcastSettingEvent broadcastSettingEvent = 7;
        BroadcastStateEvent broadcastStateEvent = 8;
        BroadcastMoveEvent broadcastMoveEvent = 9;
        BroadcastGameResultEvent broadcastGameResultEvent = 10;
        BroadcastTimeControlEvent broadcastTimeControlEvent = 11;
        // Player events
        PlayerOnlineCountEvent playerOnlineCountEvent = 12;
        PlayerOnlineEvent playerOnlineEvent = 13;
        PlayerOfflineEvent playerOfflineEvent = 14;
        PlayerStateEvent playerStateEvent = 15;
        // Player and automatch preset info
        GetPlayerInfoResponse getPlayerInfo = 16;
        GetAutomatchStatsResponse getAutomatchStats = 17;
        // Match setup
        EnterRoomResponse enterRoom = 18;
        WsSyncMatchTimeResponse syncMatchTime = 19;
        // Match events
        MatchStartEvent matchStartEvent = 20;
        WsNextMoveEvent nextMoveEvent = 21;
        WsPassEvent passEvent = 22;
        WsCountdownEvent countdownEvent = 23;
        WsResumeCountdownEvent resumeCountdownEvent = 24;
        WsCountingDecision countingDecision = 25;
        WsCountingEvent countingEvent = 26;
        WsGameResultEvent gameResultEvent = 27;
    }
}

