// Auto-generated by protoc-gen-go-foxwqrpc plugin. DO NOT EDIT.

package proto

import (
	"encoding/binary"
	"encoding/hex"
	"fmt"
	"hash/adler32"

	"github.com/protocolbuffers/protoscope"
	"google.golang.org/protobuf/encoding/prototext"
	"google.golang.org/protobuf/proto"
)

func MsgDbg(data []byte, isReq bool) (string, error) {
	if len(data) < 6 {
		return "", fmt.Errorf("frame is too short")
	}
	checksum := binary.BigEndian.Uint32(data[len(data)-4:])
	if want := adler32.Checksum(data[:len(data)-4]); checksum != want {
		return "", fmt.Errorf("checksum doesn't match: got=%08X, want=%08X", checksum, want)
	}

	tag := binary.BigEndian.Uint16(data[0:2])

	hdrReady := false
	var hdrLen uint16
	var hdrPayload []byte
	var hdr *MessageHeader

	if tag == 1000 {
		payload := data[3 : len(data)-4]
		msg := &GetNavInfoRequest{}
		if err := proto.Unmarshal(payload, msg); err != nil {
			return "", fmt.Errorf("unmarshalling: %v\n\tframe: %04X%s", err, len(data), hex.EncodeToString(data))
		}
		return fmt.Sprintf("%s{ %s }", msg.ProtoReflect().Descriptor().Name(), prototext.Format(msg)), nil
	}
	if tag == 1001 {
		payload := data[3 : len(data)-4]
		msg := &GetNavInfoResponse{}
		if err := proto.Unmarshal(payload, msg); err != nil {
			return "", fmt.Errorf("unmarshalling: %v\n\tframe: %04X%s", err, len(data), hex.EncodeToString(data))
		}
		return fmt.Sprintf("%s{ %s }", msg.ProtoReflect().Descriptor().Name(), prototext.Format(msg)), nil
	}
	if tag == 3000 {
		payload := data[3 : len(data)-4]
		msg := &ListServersRequest{}
		if err := proto.Unmarshal(payload, msg); err != nil {
			return "", fmt.Errorf("unmarshalling: %v\n\tframe: %04X%s", err, len(data), hex.EncodeToString(data))
		}
		return fmt.Sprintf("%s{ %s }", msg.ProtoReflect().Descriptor().Name(), prototext.Format(msg)), nil
	}
	if tag == 3005 {
		payload := data[3 : len(data)-4]
		msg := &ListServersResponse{}
		if err := proto.Unmarshal(payload, msg); err != nil {
			return "", fmt.Errorf("unmarshalling: %v\n\tframe: %04X%s", err, len(data), hex.EncodeToString(data))
		}
		return fmt.Sprintf("%s{ %s }", msg.ProtoReflect().Descriptor().Name(), prototext.Format(msg)), nil
	}
	if tag == 2000 {
		payload := data[3 : len(data)-4]
		msg := &LoginRequest{}
		if err := proto.Unmarshal(payload, msg); err != nil {
			return "", fmt.Errorf("unmarshalling: %v\n\tframe: %04X%s", err, len(data), hex.EncodeToString(data))
		}
		return fmt.Sprintf("%s{ %s }", msg.ProtoReflect().Descriptor().Name(), prototext.Format(msg)), nil
	}
	if tag == 2005 {
		payload := data[3 : len(data)-4]
		msg := &LoginResponse{}
		if err := proto.Unmarshal(payload, msg); err != nil {
			return "", fmt.Errorf("unmarshalling: %v\n\tframe: %04X%s", err, len(data), hex.EncodeToString(data))
		}
		return fmt.Sprintf("%s{ %s }", msg.ProtoReflect().Descriptor().Name(), prototext.Format(msg)), nil
	}
	if tag == 4000 {
		payload := data[3 : len(data)-4]
		msg := &LoginBroadcastServerRequest{}
		if err := proto.Unmarshal(payload, msg); err != nil {
			return "", fmt.Errorf("unmarshalling: %v\n\tframe: %04X%s", err, len(data), hex.EncodeToString(data))
		}
		return fmt.Sprintf("%s{ %s }", msg.ProtoReflect().Descriptor().Name(), prototext.Format(msg)), nil
	}
	if tag == 4005 {
		payload := data[3 : len(data)-4]
		msg := &LoginBroadcastServerResponse{}
		if err := proto.Unmarshal(payload, msg); err != nil {
			return "", fmt.Errorf("unmarshalling: %v\n\tframe: %04X%s", err, len(data), hex.EncodeToString(data))
		}
		return fmt.Sprintf("%s{ %s }", msg.ProtoReflect().Descriptor().Name(), prototext.Format(msg)), nil
	}
	if tag == 18100 {
		payload := data[3 : len(data)-4]
		msg := &ListBroadcastsRequest{}
		if err := proto.Unmarshal(payload, msg); err != nil {
			return "", fmt.Errorf("unmarshalling: %v\n\tframe: %04X%s", err, len(data), hex.EncodeToString(data))
		}
		return fmt.Sprintf("%s{ %s }", msg.ProtoReflect().Descriptor().Name(), prototext.Format(msg)), nil
	}
	if tag == 4044 {
		payload := data[3 : len(data)-4]
		msg := &ListBroadcastsResponse{}
		if err := proto.Unmarshal(payload, msg); err != nil {
			return "", fmt.Errorf("unmarshalling: %v\n\tframe: %04X%s", err, len(data), hex.EncodeToString(data))
		}
		return fmt.Sprintf("%s{ %s }", msg.ProtoReflect().Descriptor().Name(), prototext.Format(msg)), nil
	}
	if tag == 5060 {
		payload := data[3 : len(data)-4]
		msg := &EnterBroadcastRequest{}
		if err := proto.Unmarshal(payload, msg); err != nil {
			return "", fmt.Errorf("unmarshalling: %v\n\tframe: %04X%s", err, len(data), hex.EncodeToString(data))
		}
		return fmt.Sprintf("%s{ %s }", msg.ProtoReflect().Descriptor().Name(), prototext.Format(msg)), nil
	}
	if tag == 5065 {
		payload := data[3 : len(data)-4]
		msg := &EnterBroadcastResponse{}
		if err := proto.Unmarshal(payload, msg); err != nil {
			return "", fmt.Errorf("unmarshalling: %v\n\tframe: %04X%s", err, len(data), hex.EncodeToString(data))
		}
		return fmt.Sprintf("%s{ %s }", msg.ProtoReflect().Descriptor().Name(), prototext.Format(msg)), nil
	}
	if tag == 5145 {
		payload := data[3 : len(data)-4]
		msg := &BroadcastSettingEvent{}
		if err := proto.Unmarshal(payload, msg); err != nil {
			return "", fmt.Errorf("unmarshalling: %v\n\tframe: %04X%s", err, len(data), hex.EncodeToString(data))
		}
		return fmt.Sprintf("%s{ %s }", msg.ProtoReflect().Descriptor().Name(), prototext.Format(msg)), nil
	}
	if tag == 5147 {
		payload := data[3 : len(data)-4]
		msg := &BroadcastStateEvent{}
		if err := proto.Unmarshal(payload, msg); err != nil {
			return "", fmt.Errorf("unmarshalling: %v\n\tframe: %04X%s", err, len(data), hex.EncodeToString(data))
		}
		return fmt.Sprintf("%s{ %s }", msg.ProtoReflect().Descriptor().Name(), prototext.Format(msg)), nil
	}
	if tag == 7006 {
		payload := data[3 : len(data)-4]
		msg := &BroadcastMoveEvent{}
		if err := proto.Unmarshal(payload, msg); err != nil {
			return "", fmt.Errorf("unmarshalling: %v\n\tframe: %04X%s", err, len(data), hex.EncodeToString(data))
		}
		return fmt.Sprintf("%s{ %s }", msg.ProtoReflect().Descriptor().Name(), prototext.Format(msg)), nil
	}
	if tag == 7186 {
		payload := data[3 : len(data)-4]
		msg := &BroadcastGameResultEvent{}
		if err := proto.Unmarshal(payload, msg); err != nil {
			return "", fmt.Errorf("unmarshalling: %v\n\tframe: %04X%s", err, len(data), hex.EncodeToString(data))
		}
		return fmt.Sprintf("%s{ %s }", msg.ProtoReflect().Descriptor().Name(), prototext.Format(msg)), nil
	}
	if tag == 7198 {
		payload := data[3 : len(data)-4]
		msg := &BroadcastTimeControlEvent{}
		if err := proto.Unmarshal(payload, msg); err != nil {
			return "", fmt.Errorf("unmarshalling: %v\n\tframe: %04X%s", err, len(data), hex.EncodeToString(data))
		}
		return fmt.Sprintf("%s{ %s }", msg.ProtoReflect().Descriptor().Name(), prototext.Format(msg)), nil
	}
	if tag == 5080 {
		payload := data[3 : len(data)-4]
		msg := &LeaveBroadcastRequest{}
		if err := proto.Unmarshal(payload, msg); err != nil {
			return "", fmt.Errorf("unmarshalling: %v\n\tframe: %04X%s", err, len(data), hex.EncodeToString(data))
		}
		return fmt.Sprintf("%s{ %s }", msg.ProtoReflect().Descriptor().Name(), prototext.Format(msg)), nil
	}
	if tag == 5085 {
		payload := data[3 : len(data)-4]
		msg := &LeaveBroadcastResponse{}
		if err := proto.Unmarshal(payload, msg); err != nil {
			return "", fmt.Errorf("unmarshalling: %v\n\tframe: %04X%s", err, len(data), hex.EncodeToString(data))
		}
		return fmt.Sprintf("%s{ %s }", msg.ProtoReflect().Descriptor().Name(), prototext.Format(msg)), nil
	}
	if tag == 100 {
		payload := data[3 : len(data)-4]
		msg := &HeartbeatRequest{}
		if err := proto.Unmarshal(payload, msg); err != nil {
			return "", fmt.Errorf("unmarshalling: %v\n\tframe: %04X%s", err, len(data), hex.EncodeToString(data))
		}
		return fmt.Sprintf("%s{ %s }", msg.ProtoReflect().Descriptor().Name(), prototext.Format(msg)), nil
	}
	if tag == 12004 {
		payload := data[3 : len(data)-4]
		msg := &UnknownRequest1{}
		if err := proto.Unmarshal(payload, msg); err != nil {
			return "", fmt.Errorf("unmarshalling: %v\n\tframe: %04X%s", err, len(data), hex.EncodeToString(data))
		}
		return fmt.Sprintf("%s{ %s }", msg.ProtoReflect().Descriptor().Name(), prototext.Format(msg)), nil
	}
	if tag == 14000 {
		payload := data[3 : len(data)-4]
		msg := &UnknownRequest2{}
		if err := proto.Unmarshal(payload, msg); err != nil {
			return "", fmt.Errorf("unmarshalling: %v\n\tframe: %04X%s", err, len(data), hex.EncodeToString(data))
		}
		return fmt.Sprintf("%s{ %s }", msg.ProtoReflect().Descriptor().Name(), prototext.Format(msg)), nil
	}
	if tag == 9114 {
		payload := data[3 : len(data)-4]
		msg := &UnknownRequest3{}
		if err := proto.Unmarshal(payload, msg); err != nil {
			return "", fmt.Errorf("unmarshalling: %v\n\tframe: %04X%s", err, len(data), hex.EncodeToString(data))
		}
		return fmt.Sprintf("%s{ %s }", msg.ProtoReflect().Descriptor().Name(), prototext.Format(msg)), nil
	}
	if tag == 14801 {
		payload := data[3 : len(data)-4]
		msg := &UnknownRequest4{}
		if err := proto.Unmarshal(payload, msg); err != nil {
			return "", fmt.Errorf("unmarshalling: %v\n\tframe: %04X%s", err, len(data), hex.EncodeToString(data))
		}
		return fmt.Sprintf("%s{ %s }", msg.ProtoReflect().Descriptor().Name(), prototext.Format(msg)), nil
	}
	if tag == 18105 {
		payload := data[3 : len(data)-4]
		msg := &UnknownRequest5{}
		if err := proto.Unmarshal(payload, msg); err != nil {
			return "", fmt.Errorf("unmarshalling: %v\n\tframe: %04X%s", err, len(data), hex.EncodeToString(data))
		}
		return fmt.Sprintf("%s{ %s }", msg.ProtoReflect().Descriptor().Name(), prototext.Format(msg)), nil
	}
	if tag == 29990 {
		payload := data[3 : len(data)-4]
		msg := &UnknownRequest6{}
		if err := proto.Unmarshal(payload, msg); err != nil {
			return "", fmt.Errorf("unmarshalling: %v\n\tframe: %04X%s", err, len(data), hex.EncodeToString(data))
		}
		return fmt.Sprintf("%s{ %s }", msg.ProtoReflect().Descriptor().Name(), prototext.Format(msg)), nil
	}
	if tag == 29991 {
		payload := data[3 : len(data)-4]
		msg := &UnknownResponse6{}
		if err := proto.Unmarshal(payload, msg); err != nil {
			return "", fmt.Errorf("unmarshalling: %v\n\tframe: %04X%s", err, len(data), hex.EncodeToString(data))
		}
		return fmt.Sprintf("%s{ %s }", msg.ProtoReflect().Descriptor().Name(), prototext.Format(msg)), nil
	}
	if tag == 29992 {
		payload := data[3 : len(data)-4]
		msg := &UnknownRequest7{}
		if err := proto.Unmarshal(payload, msg); err != nil {
			return "", fmt.Errorf("unmarshalling: %v\n\tframe: %04X%s", err, len(data), hex.EncodeToString(data))
		}
		return fmt.Sprintf("%s{ %s }", msg.ProtoReflect().Descriptor().Name(), prototext.Format(msg)), nil
	}
	if tag == 29993 {
		payload := data[3 : len(data)-4]
		msg := &UnknownResponse7{}
		if err := proto.Unmarshal(payload, msg); err != nil {
			return "", fmt.Errorf("unmarshalling: %v\n\tframe: %04X%s", err, len(data), hex.EncodeToString(data))
		}
		return fmt.Sprintf("%s{ %s }", msg.ProtoReflect().Descriptor().Name(), prototext.Format(msg)), nil
	}
	if tag == 29994 {
		payload := data[3 : len(data)-4]
		msg := &UnknownRequest8{}
		if err := proto.Unmarshal(payload, msg); err != nil {
			return "", fmt.Errorf("unmarshalling: %v\n\tframe: %04X%s", err, len(data), hex.EncodeToString(data))
		}
		return fmt.Sprintf("%s{ %s }", msg.ProtoReflect().Descriptor().Name(), prototext.Format(msg)), nil
	}
	if tag == 29995 {
		payload := data[3 : len(data)-4]
		msg := &UnknownResponse8{}
		if err := proto.Unmarshal(payload, msg); err != nil {
			return "", fmt.Errorf("unmarshalling: %v\n\tframe: %04X%s", err, len(data), hex.EncodeToString(data))
		}
		return fmt.Sprintf("%s{ %s }", msg.ProtoReflect().Descriptor().Name(), prototext.Format(msg)), nil
	}
	if tag == 26200 {
		if !hdrReady {
			hdrLen = binary.BigEndian.Uint16(data[3:5])
			hdrPayload = data[5 : 5+hdrLen]
			hdr = &MessageHeader{}
			if err := proto.Unmarshal(hdrPayload, hdr); err != nil {
				return "", fmt.Errorf("unmarshalling header: %v", err)
			}
			hdrReady = true
		}
		if hdr.GetTag1() == 1 && hdr.GetTag2() == 20001 {
			payload := data[5+hdrLen : len(data)-4]
			var msg proto.Message
			if isReq {
				msg = &LoginPlayServerRequest{}
			} else {
				msg = &LoginPlayServerResponse{}
			}
			if err := proto.Unmarshal(payload, msg); err != nil {
				return "", fmt.Errorf("unmarshalling: %v\n\tframe: %04X%s", err, len(data), hex.EncodeToString(data))
			}
			return fmt.Sprintf("%s{ %s } %s{ %s }", hdr.ProtoReflect().Descriptor().Name(), prototext.Format(hdr), msg.ProtoReflect().Descriptor().Name(), prototext.Format(msg)), nil
		}
	}
	if tag == 26200 {
		if !hdrReady {
			hdrLen = binary.BigEndian.Uint16(data[3:5])
			hdrPayload = data[5 : 5+hdrLen]
			hdr = &MessageHeader{}
			if err := proto.Unmarshal(hdrPayload, hdr); err != nil {
				return "", fmt.Errorf("unmarshalling header: %v", err)
			}
			hdrReady = true
		}
		if hdr.GetTag1() == 1 && hdr.GetTag2() == 20001 {
			payload := data[5+hdrLen : len(data)-4]
			var msg proto.Message
			if isReq {
				msg = &LoginPlayServerRequest{}
			} else {
				msg = &LoginPlayServerResponse{}
			}
			if err := proto.Unmarshal(payload, msg); err != nil {
				return "", fmt.Errorf("unmarshalling: %v\n\tframe: %04X%s", err, len(data), hex.EncodeToString(data))
			}
			return fmt.Sprintf("%s{ %s } %s{ %s }", hdr.ProtoReflect().Descriptor().Name(), prototext.Format(hdr), msg.ProtoReflect().Descriptor().Name(), prototext.Format(msg)), nil
		}
	}
	if tag == 26200 {
		if !hdrReady {
			hdrLen = binary.BigEndian.Uint16(data[3:5])
			hdrPayload = data[5 : 5+hdrLen]
			hdr = &MessageHeader{}
			if err := proto.Unmarshal(hdrPayload, hdr); err != nil {
				return "", fmt.Errorf("unmarshalling header: %v", err)
			}
			hdrReady = true
		}
		if hdr.GetTag1() == 201 && hdr.GetTag2() == 20046 {
			payload := data[5+hdrLen : len(data)-4]
			var msg proto.Message
			if isReq {
				msg = &ListPlayersRequest{}
			} else {
				msg = &ListPlayersResponse{}
			}
			if err := proto.Unmarshal(payload, msg); err != nil {
				return "", fmt.Errorf("unmarshalling: %v\n\tframe: %04X%s", err, len(data), hex.EncodeToString(data))
			}
			return fmt.Sprintf("%s{ %s } %s{ %s }", hdr.ProtoReflect().Descriptor().Name(), prototext.Format(hdr), msg.ProtoReflect().Descriptor().Name(), prototext.Format(msg)), nil
		}
	}
	if tag == 26200 {
		if !hdrReady {
			hdrLen = binary.BigEndian.Uint16(data[3:5])
			hdrPayload = data[5 : 5+hdrLen]
			hdr = &MessageHeader{}
			if err := proto.Unmarshal(hdrPayload, hdr); err != nil {
				return "", fmt.Errorf("unmarshalling header: %v", err)
			}
			hdrReady = true
		}
		if hdr.GetTag1() == 201 && hdr.GetTag2() == 20046 {
			payload := data[5+hdrLen : len(data)-4]
			var msg proto.Message
			if isReq {
				msg = &ListPlayersRequest{}
			} else {
				msg = &ListPlayersResponse{}
			}
			if err := proto.Unmarshal(payload, msg); err != nil {
				return "", fmt.Errorf("unmarshalling: %v\n\tframe: %04X%s", err, len(data), hex.EncodeToString(data))
			}
			return fmt.Sprintf("%s{ %s } %s{ %s }", hdr.ProtoReflect().Descriptor().Name(), prototext.Format(hdr), msg.ProtoReflect().Descriptor().Name(), prototext.Format(msg)), nil
		}
	}
	if tag == 26200 {
		if !hdrReady {
			hdrLen = binary.BigEndian.Uint16(data[3:5])
			hdrPayload = data[5 : 5+hdrLen]
			hdr = &MessageHeader{}
			if err := proto.Unmarshal(hdrPayload, hdr); err != nil {
				return "", fmt.Errorf("unmarshalling header: %v", err)
			}
			hdrReady = true
		}
		if hdr.GetTag1() == 1001 && hdr.GetTag2() == 20043 {
			payload := data[5+hdrLen : len(data)-4]
			var msg proto.Message
			if isReq {
				msg = &GetPlayerInfoRequest{}
			} else {
				msg = &GetPlayerInfoResponse{}
			}
			if err := proto.Unmarshal(payload, msg); err != nil {
				return "", fmt.Errorf("unmarshalling: %v\n\tframe: %04X%s", err, len(data), hex.EncodeToString(data))
			}
			return fmt.Sprintf("%s{ %s } %s{ %s }", hdr.ProtoReflect().Descriptor().Name(), prototext.Format(hdr), msg.ProtoReflect().Descriptor().Name(), prototext.Format(msg)), nil
		}
	}
	if tag == 26200 {
		if !hdrReady {
			hdrLen = binary.BigEndian.Uint16(data[3:5])
			hdrPayload = data[5 : 5+hdrLen]
			hdr = &MessageHeader{}
			if err := proto.Unmarshal(hdrPayload, hdr); err != nil {
				return "", fmt.Errorf("unmarshalling header: %v", err)
			}
			hdrReady = true
		}
		if hdr.GetTag1() == 1001 && hdr.GetTag2() == 20043 {
			payload := data[5+hdrLen : len(data)-4]
			var msg proto.Message
			if isReq {
				msg = &GetPlayerInfoRequest{}
			} else {
				msg = &GetPlayerInfoResponse{}
			}
			if err := proto.Unmarshal(payload, msg); err != nil {
				return "", fmt.Errorf("unmarshalling: %v\n\tframe: %04X%s", err, len(data), hex.EncodeToString(data))
			}
			return fmt.Sprintf("%s{ %s } %s{ %s }", hdr.ProtoReflect().Descriptor().Name(), prototext.Format(hdr), msg.ProtoReflect().Descriptor().Name(), prototext.Format(msg)), nil
		}
	}
	if tag == 26200 {
		if !hdrReady {
			hdrLen = binary.BigEndian.Uint16(data[3:5])
			hdrPayload = data[5 : 5+hdrLen]
			hdr = &MessageHeader{}
			if err := proto.Unmarshal(hdrPayload, hdr); err != nil {
				return "", fmt.Errorf("unmarshalling header: %v", err)
			}
			hdrReady = true
		}
		if hdr.GetTag1() == 203 && hdr.GetTag2() == 20046 {
			payload := data[5+hdrLen : len(data)-4]
			var msg proto.Message
			if isReq {
				msg = &SyncPlayersRequest{}
			} else {
				msg = &SyncPlayersResponse{}
			}
			if err := proto.Unmarshal(payload, msg); err != nil {
				return "", fmt.Errorf("unmarshalling: %v\n\tframe: %04X%s", err, len(data), hex.EncodeToString(data))
			}
			return fmt.Sprintf("%s{ %s } %s{ %s }", hdr.ProtoReflect().Descriptor().Name(), prototext.Format(hdr), msg.ProtoReflect().Descriptor().Name(), prototext.Format(msg)), nil
		}
	}
	if tag == 26200 {
		if !hdrReady {
			hdrLen = binary.BigEndian.Uint16(data[3:5])
			hdrPayload = data[5 : 5+hdrLen]
			hdr = &MessageHeader{}
			if err := proto.Unmarshal(hdrPayload, hdr); err != nil {
				return "", fmt.Errorf("unmarshalling header: %v", err)
			}
			hdrReady = true
		}
		if hdr.GetTag1() == 203 && hdr.GetTag2() == 20046 {
			payload := data[5+hdrLen : len(data)-4]
			var msg proto.Message
			if isReq {
				msg = &SyncPlayersRequest{}
			} else {
				msg = &SyncPlayersResponse{}
			}
			if err := proto.Unmarshal(payload, msg); err != nil {
				return "", fmt.Errorf("unmarshalling: %v\n\tframe: %04X%s", err, len(data), hex.EncodeToString(data))
			}
			return fmt.Sprintf("%s{ %s } %s{ %s }", hdr.ProtoReflect().Descriptor().Name(), prototext.Format(hdr), msg.ProtoReflect().Descriptor().Name(), prototext.Format(msg)), nil
		}
	}
	if tag == 26200 {
		if !hdrReady {
			hdrLen = binary.BigEndian.Uint16(data[3:5])
			hdrPayload = data[5 : 5+hdrLen]
			hdr = &MessageHeader{}
			if err := proto.Unmarshal(hdrPayload, hdr); err != nil {
				return "", fmt.Errorf("unmarshalling header: %v", err)
			}
			hdrReady = true
		}
		if hdr.GetTag1() == 122 && hdr.GetTag2() == 30016 {
			payload := data[5+hdrLen : len(data)-4]
			var msg proto.Message
			if isReq {
				msg = &GetRoomInfoRequest{}
			} else {
				msg = &GetRoomInfoResponse{}
			}
			if err := proto.Unmarshal(payload, msg); err != nil {
				return "", fmt.Errorf("unmarshalling: %v\n\tframe: %04X%s", err, len(data), hex.EncodeToString(data))
			}
			return fmt.Sprintf("%s{ %s } %s{ %s }", hdr.ProtoReflect().Descriptor().Name(), prototext.Format(hdr), msg.ProtoReflect().Descriptor().Name(), prototext.Format(msg)), nil
		}
	}
	if tag == 26200 {
		if !hdrReady {
			hdrLen = binary.BigEndian.Uint16(data[3:5])
			hdrPayload = data[5 : 5+hdrLen]
			hdr = &MessageHeader{}
			if err := proto.Unmarshal(hdrPayload, hdr); err != nil {
				return "", fmt.Errorf("unmarshalling header: %v", err)
			}
			hdrReady = true
		}
		if hdr.GetTag1() == 122 && hdr.GetTag2() == 30016 {
			payload := data[5+hdrLen : len(data)-4]
			var msg proto.Message
			if isReq {
				msg = &GetRoomInfoRequest{}
			} else {
				msg = &GetRoomInfoResponse{}
			}
			if err := proto.Unmarshal(payload, msg); err != nil {
				return "", fmt.Errorf("unmarshalling: %v\n\tframe: %04X%s", err, len(data), hex.EncodeToString(data))
			}
			return fmt.Sprintf("%s{ %s } %s{ %s }", hdr.ProtoReflect().Descriptor().Name(), prototext.Format(hdr), msg.ProtoReflect().Descriptor().Name(), prototext.Format(msg)), nil
		}
	}
	if tag == 26200 {
		if !hdrReady {
			hdrLen = binary.BigEndian.Uint16(data[3:5])
			hdrPayload = data[5 : 5+hdrLen]
			hdr = &MessageHeader{}
			if err := proto.Unmarshal(hdrPayload, hdr); err != nil {
				return "", fmt.Errorf("unmarshalling header: %v", err)
			}
			hdrReady = true
		}
		if hdr.GetTag1() == 100 && hdr.GetTag2() == 30021 {
			payload := data[5+hdrLen : len(data)-4]
			var msg proto.Message
			if isReq {
				msg = &EnterRoomRequest{}
			} else {
				msg = &EnterRoomResponse{}
			}
			if err := proto.Unmarshal(payload, msg); err != nil {
				return "", fmt.Errorf("unmarshalling: %v\n\tframe: %04X%s", err, len(data), hex.EncodeToString(data))
			}
			return fmt.Sprintf("%s{ %s } %s{ %s }", hdr.ProtoReflect().Descriptor().Name(), prototext.Format(hdr), msg.ProtoReflect().Descriptor().Name(), prototext.Format(msg)), nil
		}
	}
	if tag == 26200 {
		if !hdrReady {
			hdrLen = binary.BigEndian.Uint16(data[3:5])
			hdrPayload = data[5 : 5+hdrLen]
			hdr = &MessageHeader{}
			if err := proto.Unmarshal(hdrPayload, hdr); err != nil {
				return "", fmt.Errorf("unmarshalling header: %v", err)
			}
			hdrReady = true
		}
		if hdr.GetTag1() == 100 && hdr.GetTag2() == 30021 {
			payload := data[5+hdrLen : len(data)-4]
			var msg proto.Message
			if isReq {
				msg = &EnterRoomRequest{}
			} else {
				msg = &EnterRoomResponse{}
			}
			if err := proto.Unmarshal(payload, msg); err != nil {
				return "", fmt.Errorf("unmarshalling: %v\n\tframe: %04X%s", err, len(data), hex.EncodeToString(data))
			}
			return fmt.Sprintf("%s{ %s } %s{ %s }", hdr.ProtoReflect().Descriptor().Name(), prototext.Format(hdr), msg.ProtoReflect().Descriptor().Name(), prototext.Format(msg)), nil
		}
	}
	if tag == 26200 {
		if !hdrReady {
			hdrLen = binary.BigEndian.Uint16(data[3:5])
			hdrPayload = data[5 : 5+hdrLen]
			hdr = &MessageHeader{}
			if err := proto.Unmarshal(hdrPayload, hdr); err != nil {
				return "", fmt.Errorf("unmarshalling header: %v", err)
			}
			hdrReady = true
		}
		if hdr.GetTag1() == 101 && hdr.GetTag2() == 30022 {
			payload := data[5+hdrLen : len(data)-4]
			var msg proto.Message
			if isReq {
				msg = &LeaveRoomRequest{}
			} else {
				msg = &LeaveRoomResponse{}
			}
			if err := proto.Unmarshal(payload, msg); err != nil {
				return "", fmt.Errorf("unmarshalling: %v\n\tframe: %04X%s", err, len(data), hex.EncodeToString(data))
			}
			return fmt.Sprintf("%s{ %s } %s{ %s }", hdr.ProtoReflect().Descriptor().Name(), prototext.Format(hdr), msg.ProtoReflect().Descriptor().Name(), prototext.Format(msg)), nil
		}
	}
	if tag == 26200 {
		if !hdrReady {
			hdrLen = binary.BigEndian.Uint16(data[3:5])
			hdrPayload = data[5 : 5+hdrLen]
			hdr = &MessageHeader{}
			if err := proto.Unmarshal(hdrPayload, hdr); err != nil {
				return "", fmt.Errorf("unmarshalling header: %v", err)
			}
			hdrReady = true
		}
		if hdr.GetTag1() == 101 && hdr.GetTag2() == 30022 {
			payload := data[5+hdrLen : len(data)-4]
			var msg proto.Message
			if isReq {
				msg = &LeaveRoomRequest{}
			} else {
				msg = &LeaveRoomResponse{}
			}
			if err := proto.Unmarshal(payload, msg); err != nil {
				return "", fmt.Errorf("unmarshalling: %v\n\tframe: %04X%s", err, len(data), hex.EncodeToString(data))
			}
			return fmt.Sprintf("%s{ %s } %s{ %s }", hdr.ProtoReflect().Descriptor().Name(), prototext.Format(hdr), msg.ProtoReflect().Descriptor().Name(), prototext.Format(msg)), nil
		}
	}
	if tag == 26200 {
		if !hdrReady {
			hdrLen = binary.BigEndian.Uint16(data[3:5])
			hdrPayload = data[5 : 5+hdrLen]
			hdr = &MessageHeader{}
			if err := proto.Unmarshal(hdrPayload, hdr); err != nil {
				return "", fmt.Errorf("unmarshalling header: %v", err)
			}
			hdrReady = true
		}
		if hdr.GetTag1() == 100 && hdr.GetTag2() == 30042 {
			payload := data[5+hdrLen : len(data)-4]
			var msg proto.Message
			if isReq {
				msg = &ListRoomParticipantsRequest{}
			} else {
				msg = &ListRoomParticipantsResponse{}
			}
			if err := proto.Unmarshal(payload, msg); err != nil {
				return "", fmt.Errorf("unmarshalling: %v\n\tframe: %04X%s", err, len(data), hex.EncodeToString(data))
			}
			return fmt.Sprintf("%s{ %s } %s{ %s }", hdr.ProtoReflect().Descriptor().Name(), prototext.Format(hdr), msg.ProtoReflect().Descriptor().Name(), prototext.Format(msg)), nil
		}
	}
	if tag == 26200 {
		if !hdrReady {
			hdrLen = binary.BigEndian.Uint16(data[3:5])
			hdrPayload = data[5 : 5+hdrLen]
			hdr = &MessageHeader{}
			if err := proto.Unmarshal(hdrPayload, hdr); err != nil {
				return "", fmt.Errorf("unmarshalling header: %v", err)
			}
			hdrReady = true
		}
		if hdr.GetTag1() == 100 && hdr.GetTag2() == 30042 {
			payload := data[5+hdrLen : len(data)-4]
			var msg proto.Message
			if isReq {
				msg = &ListRoomParticipantsRequest{}
			} else {
				msg = &ListRoomParticipantsResponse{}
			}
			if err := proto.Unmarshal(payload, msg); err != nil {
				return "", fmt.Errorf("unmarshalling: %v\n\tframe: %04X%s", err, len(data), hex.EncodeToString(data))
			}
			return fmt.Sprintf("%s{ %s } %s{ %s }", hdr.ProtoReflect().Descriptor().Name(), prototext.Format(hdr), msg.ProtoReflect().Descriptor().Name(), prototext.Format(msg)), nil
		}
	}
	if tag == 26200 {
		if !hdrReady {
			hdrLen = binary.BigEndian.Uint16(data[3:5])
			hdrPayload = data[5 : 5+hdrLen]
			hdr = &MessageHeader{}
			if err := proto.Unmarshal(hdrPayload, hdr); err != nil {
				return "", fmt.Errorf("unmarshalling header: %v", err)
			}
			hdrReady = true
		}
		if hdr.GetTag1() == 401 && hdr.GetTag2() == 20046 {
			payload := data[5+hdrLen : len(data)-4]
			var msg proto.Message
			if isReq {
			} else {
				msg = &PlayerOnlineCountEvent{}
			}
			if err := proto.Unmarshal(payload, msg); err != nil {
				return "", fmt.Errorf("unmarshalling: %v\n\tframe: %04X%s", err, len(data), hex.EncodeToString(data))
			}
			return fmt.Sprintf("%s{ %s } %s{ %s }", hdr.ProtoReflect().Descriptor().Name(), prototext.Format(hdr), msg.ProtoReflect().Descriptor().Name(), prototext.Format(msg)), nil
		}
	}
	if tag == 26200 {
		if !hdrReady {
			hdrLen = binary.BigEndian.Uint16(data[3:5])
			hdrPayload = data[5 : 5+hdrLen]
			hdr = &MessageHeader{}
			if err := proto.Unmarshal(hdrPayload, hdr); err != nil {
				return "", fmt.Errorf("unmarshalling header: %v", err)
			}
			hdrReady = true
		}
		if hdr.GetTag1() == 401 && hdr.GetTag2() == 20046 {
			payload := data[5+hdrLen : len(data)-4]
			var msg proto.Message
			if isReq {
			} else {
				msg = &PlayerOnlineCountEvent{}
			}
			if err := proto.Unmarshal(payload, msg); err != nil {
				return "", fmt.Errorf("unmarshalling: %v\n\tframe: %04X%s", err, len(data), hex.EncodeToString(data))
			}
			return fmt.Sprintf("%s{ %s } %s{ %s }", hdr.ProtoReflect().Descriptor().Name(), prototext.Format(hdr), msg.ProtoReflect().Descriptor().Name(), prototext.Format(msg)), nil
		}
	}
	if tag == 26200 {
		if !hdrReady {
			hdrLen = binary.BigEndian.Uint16(data[3:5])
			hdrPayload = data[5 : 5+hdrLen]
			hdr = &MessageHeader{}
			if err := proto.Unmarshal(hdrPayload, hdr); err != nil {
				return "", fmt.Errorf("unmarshalling header: %v", err)
			}
			hdrReady = true
		}
		if hdr.GetTag1() == 402 && hdr.GetTag2() == 20046 {
			payload := data[5+hdrLen : len(data)-4]
			var msg proto.Message
			if isReq {
			} else {
				msg = &PlayerOnlineEvent{}
			}
			if err := proto.Unmarshal(payload, msg); err != nil {
				return "", fmt.Errorf("unmarshalling: %v\n\tframe: %04X%s", err, len(data), hex.EncodeToString(data))
			}
			return fmt.Sprintf("%s{ %s } %s{ %s }", hdr.ProtoReflect().Descriptor().Name(), prototext.Format(hdr), msg.ProtoReflect().Descriptor().Name(), prototext.Format(msg)), nil
		}
	}
	if tag == 26200 {
		if !hdrReady {
			hdrLen = binary.BigEndian.Uint16(data[3:5])
			hdrPayload = data[5 : 5+hdrLen]
			hdr = &MessageHeader{}
			if err := proto.Unmarshal(hdrPayload, hdr); err != nil {
				return "", fmt.Errorf("unmarshalling header: %v", err)
			}
			hdrReady = true
		}
		if hdr.GetTag1() == 402 && hdr.GetTag2() == 20046 {
			payload := data[5+hdrLen : len(data)-4]
			var msg proto.Message
			if isReq {
			} else {
				msg = &PlayerOnlineEvent{}
			}
			if err := proto.Unmarshal(payload, msg); err != nil {
				return "", fmt.Errorf("unmarshalling: %v\n\tframe: %04X%s", err, len(data), hex.EncodeToString(data))
			}
			return fmt.Sprintf("%s{ %s } %s{ %s }", hdr.ProtoReflect().Descriptor().Name(), prototext.Format(hdr), msg.ProtoReflect().Descriptor().Name(), prototext.Format(msg)), nil
		}
	}
	if tag == 26200 {
		if !hdrReady {
			hdrLen = binary.BigEndian.Uint16(data[3:5])
			hdrPayload = data[5 : 5+hdrLen]
			hdr = &MessageHeader{}
			if err := proto.Unmarshal(hdrPayload, hdr); err != nil {
				return "", fmt.Errorf("unmarshalling header: %v", err)
			}
			hdrReady = true
		}
		if hdr.GetTag1() == 403 && hdr.GetTag2() == 20046 {
			payload := data[5+hdrLen : len(data)-4]
			var msg proto.Message
			if isReq {
			} else {
				msg = &PlayerOfflineEvent{}
			}
			if err := proto.Unmarshal(payload, msg); err != nil {
				return "", fmt.Errorf("unmarshalling: %v\n\tframe: %04X%s", err, len(data), hex.EncodeToString(data))
			}
			return fmt.Sprintf("%s{ %s } %s{ %s }", hdr.ProtoReflect().Descriptor().Name(), prototext.Format(hdr), msg.ProtoReflect().Descriptor().Name(), prototext.Format(msg)), nil
		}
	}
	if tag == 26200 {
		if !hdrReady {
			hdrLen = binary.BigEndian.Uint16(data[3:5])
			hdrPayload = data[5 : 5+hdrLen]
			hdr = &MessageHeader{}
			if err := proto.Unmarshal(hdrPayload, hdr); err != nil {
				return "", fmt.Errorf("unmarshalling header: %v", err)
			}
			hdrReady = true
		}
		if hdr.GetTag1() == 403 && hdr.GetTag2() == 20046 {
			payload := data[5+hdrLen : len(data)-4]
			var msg proto.Message
			if isReq {
			} else {
				msg = &PlayerOfflineEvent{}
			}
			if err := proto.Unmarshal(payload, msg); err != nil {
				return "", fmt.Errorf("unmarshalling: %v\n\tframe: %04X%s", err, len(data), hex.EncodeToString(data))
			}
			return fmt.Sprintf("%s{ %s } %s{ %s }", hdr.ProtoReflect().Descriptor().Name(), prototext.Format(hdr), msg.ProtoReflect().Descriptor().Name(), prototext.Format(msg)), nil
		}
	}
	if tag == 26200 {
		if !hdrReady {
			hdrLen = binary.BigEndian.Uint16(data[3:5])
			hdrPayload = data[5 : 5+hdrLen]
			hdr = &MessageHeader{}
			if err := proto.Unmarshal(hdrPayload, hdr); err != nil {
				return "", fmt.Errorf("unmarshalling header: %v", err)
			}
			hdrReady = true
		}
		if hdr.GetTag1() == 404 && hdr.GetTag2() == 20046 {
			payload := data[5+hdrLen : len(data)-4]
			var msg proto.Message
			if isReq {
			} else {
				msg = &PlayerStateEvent{}
			}
			if err := proto.Unmarshal(payload, msg); err != nil {
				return "", fmt.Errorf("unmarshalling: %v\n\tframe: %04X%s", err, len(data), hex.EncodeToString(data))
			}
			return fmt.Sprintf("%s{ %s } %s{ %s }", hdr.ProtoReflect().Descriptor().Name(), prototext.Format(hdr), msg.ProtoReflect().Descriptor().Name(), prototext.Format(msg)), nil
		}
	}
	if tag == 26200 {
		if !hdrReady {
			hdrLen = binary.BigEndian.Uint16(data[3:5])
			hdrPayload = data[5 : 5+hdrLen]
			hdr = &MessageHeader{}
			if err := proto.Unmarshal(hdrPayload, hdr); err != nil {
				return "", fmt.Errorf("unmarshalling header: %v", err)
			}
			hdrReady = true
		}
		if hdr.GetTag1() == 404 && hdr.GetTag2() == 20046 {
			payload := data[5+hdrLen : len(data)-4]
			var msg proto.Message
			if isReq {
			} else {
				msg = &PlayerStateEvent{}
			}
			if err := proto.Unmarshal(payload, msg); err != nil {
				return "", fmt.Errorf("unmarshalling: %v\n\tframe: %04X%s", err, len(data), hex.EncodeToString(data))
			}
			return fmt.Sprintf("%s{ %s } %s{ %s }", hdr.ProtoReflect().Descriptor().Name(), prototext.Format(hdr), msg.ProtoReflect().Descriptor().Name(), prototext.Format(msg)), nil
		}
	}
	if tag == 26200 {
		if !hdrReady {
			hdrLen = binary.BigEndian.Uint16(data[3:5])
			hdrPayload = data[5 : 5+hdrLen]
			hdr = &MessageHeader{}
			if err := proto.Unmarshal(hdrPayload, hdr); err != nil {
				return "", fmt.Errorf("unmarshalling header: %v", err)
			}
			hdrReady = true
		}
		if hdr.GetTag1() == 100145 && hdr.GetTag2() == 30006 {
			payload := data[5+hdrLen : len(data)-4]
			var msg proto.Message
			if isReq {
				msg = &GetAutomatchStatsRequest{}
			} else {
				msg = &GetAutomatchStatsResponse{}
			}
			if err := proto.Unmarshal(payload, msg); err != nil {
				return "", fmt.Errorf("unmarshalling: %v\n\tframe: %04X%s", err, len(data), hex.EncodeToString(data))
			}
			return fmt.Sprintf("%s{ %s } %s{ %s }", hdr.ProtoReflect().Descriptor().Name(), prototext.Format(hdr), msg.ProtoReflect().Descriptor().Name(), prototext.Format(msg)), nil
		}
	}
	if tag == 26200 {
		if !hdrReady {
			hdrLen = binary.BigEndian.Uint16(data[3:5])
			hdrPayload = data[5 : 5+hdrLen]
			hdr = &MessageHeader{}
			if err := proto.Unmarshal(hdrPayload, hdr); err != nil {
				return "", fmt.Errorf("unmarshalling header: %v", err)
			}
			hdrReady = true
		}
		if hdr.GetTag1() == 100145 && hdr.GetTag2() == 30006 {
			payload := data[5+hdrLen : len(data)-4]
			var msg proto.Message
			if isReq {
				msg = &GetAutomatchStatsRequest{}
			} else {
				msg = &GetAutomatchStatsResponse{}
			}
			if err := proto.Unmarshal(payload, msg); err != nil {
				return "", fmt.Errorf("unmarshalling: %v\n\tframe: %04X%s", err, len(data), hex.EncodeToString(data))
			}
			return fmt.Sprintf("%s{ %s } %s{ %s }", hdr.ProtoReflect().Descriptor().Name(), prototext.Format(hdr), msg.ProtoReflect().Descriptor().Name(), prototext.Format(msg)), nil
		}
	}
	if tag == 26200 {
		if !hdrReady {
			hdrLen = binary.BigEndian.Uint16(data[3:5])
			hdrPayload = data[5 : 5+hdrLen]
			hdr = &MessageHeader{}
			if err := proto.Unmarshal(hdrPayload, hdr); err != nil {
				return "", fmt.Errorf("unmarshalling header: %v", err)
			}
			hdrReady = true
		}
		if hdr.GetTag1() == 100130 && hdr.GetTag2() == 30006 {
			payload := data[5+hdrLen : len(data)-4]
			var msg proto.Message
			if isReq {
				msg = &StartAutomatchRequest{}
			} else {
				msg = &StartAutomatchResponse{}
			}
			if err := proto.Unmarshal(payload, msg); err != nil {
				return "", fmt.Errorf("unmarshalling: %v\n\tframe: %04X%s", err, len(data), hex.EncodeToString(data))
			}
			return fmt.Sprintf("%s{ %s } %s{ %s }", hdr.ProtoReflect().Descriptor().Name(), prototext.Format(hdr), msg.ProtoReflect().Descriptor().Name(), prototext.Format(msg)), nil
		}
	}
	if tag == 26200 {
		if !hdrReady {
			hdrLen = binary.BigEndian.Uint16(data[3:5])
			hdrPayload = data[5 : 5+hdrLen]
			hdr = &MessageHeader{}
			if err := proto.Unmarshal(hdrPayload, hdr); err != nil {
				return "", fmt.Errorf("unmarshalling header: %v", err)
			}
			hdrReady = true
		}
		if hdr.GetTag1() == 100130 && hdr.GetTag2() == 30006 {
			payload := data[5+hdrLen : len(data)-4]
			var msg proto.Message
			if isReq {
				msg = &StartAutomatchRequest{}
			} else {
				msg = &StartAutomatchResponse{}
			}
			if err := proto.Unmarshal(payload, msg); err != nil {
				return "", fmt.Errorf("unmarshalling: %v\n\tframe: %04X%s", err, len(data), hex.EncodeToString(data))
			}
			return fmt.Sprintf("%s{ %s } %s{ %s }", hdr.ProtoReflect().Descriptor().Name(), prototext.Format(hdr), msg.ProtoReflect().Descriptor().Name(), prototext.Format(msg)), nil
		}
	}
	if tag == 26200 {
		if !hdrReady {
			hdrLen = binary.BigEndian.Uint16(data[3:5])
			hdrPayload = data[5 : 5+hdrLen]
			hdr = &MessageHeader{}
			if err := proto.Unmarshal(hdrPayload, hdr); err != nil {
				return "", fmt.Errorf("unmarshalling header: %v", err)
			}
			hdrReady = true
		}
		if hdr.GetTag1() == 100140 && hdr.GetTag2() == 30006 {
			payload := data[5+hdrLen : len(data)-4]
			var msg proto.Message
			if isReq {
			} else {
				msg = &AutomatchFoundEvent{}
			}
			if err := proto.Unmarshal(payload, msg); err != nil {
				return "", fmt.Errorf("unmarshalling: %v\n\tframe: %04X%s", err, len(data), hex.EncodeToString(data))
			}
			return fmt.Sprintf("%s{ %s } %s{ %s }", hdr.ProtoReflect().Descriptor().Name(), prototext.Format(hdr), msg.ProtoReflect().Descriptor().Name(), prototext.Format(msg)), nil
		}
	}
	if tag == 26200 {
		if !hdrReady {
			hdrLen = binary.BigEndian.Uint16(data[3:5])
			hdrPayload = data[5 : 5+hdrLen]
			hdr = &MessageHeader{}
			if err := proto.Unmarshal(hdrPayload, hdr); err != nil {
				return "", fmt.Errorf("unmarshalling header: %v", err)
			}
			hdrReady = true
		}
		if hdr.GetTag1() == 100140 && hdr.GetTag2() == 30006 {
			payload := data[5+hdrLen : len(data)-4]
			var msg proto.Message
			if isReq {
			} else {
				msg = &AutomatchFoundEvent{}
			}
			if err := proto.Unmarshal(payload, msg); err != nil {
				return "", fmt.Errorf("unmarshalling: %v\n\tframe: %04X%s", err, len(data), hex.EncodeToString(data))
			}
			return fmt.Sprintf("%s{ %s } %s{ %s }", hdr.ProtoReflect().Descriptor().Name(), prototext.Format(hdr), msg.ProtoReflect().Descriptor().Name(), prototext.Format(msg)), nil
		}
	}
	if tag == 26200 {
		if !hdrReady {
			hdrLen = binary.BigEndian.Uint16(data[3:5])
			hdrPayload = data[5 : 5+hdrLen]
			hdr = &MessageHeader{}
			if err := proto.Unmarshal(hdrPayload, hdr); err != nil {
				return "", fmt.Errorf("unmarshalling header: %v", err)
			}
			hdrReady = true
		}
		if hdr.GetTag1() == 100139 && hdr.GetTag2() == 30006 {
			payload := data[5+hdrLen : len(data)-4]
			var msg proto.Message
			if isReq {
				msg = &StopAutomatchRequest{}
			} else {
				msg = &StopAutomatchResponse{}
			}
			if err := proto.Unmarshal(payload, msg); err != nil {
				return "", fmt.Errorf("unmarshalling: %v\n\tframe: %04X%s", err, len(data), hex.EncodeToString(data))
			}
			return fmt.Sprintf("%s{ %s } %s{ %s }", hdr.ProtoReflect().Descriptor().Name(), prototext.Format(hdr), msg.ProtoReflect().Descriptor().Name(), prototext.Format(msg)), nil
		}
	}
	if tag == 26200 {
		if !hdrReady {
			hdrLen = binary.BigEndian.Uint16(data[3:5])
			hdrPayload = data[5 : 5+hdrLen]
			hdr = &MessageHeader{}
			if err := proto.Unmarshal(hdrPayload, hdr); err != nil {
				return "", fmt.Errorf("unmarshalling header: %v", err)
			}
			hdrReady = true
		}
		if hdr.GetTag1() == 100139 && hdr.GetTag2() == 30006 {
			payload := data[5+hdrLen : len(data)-4]
			var msg proto.Message
			if isReq {
				msg = &StopAutomatchRequest{}
			} else {
				msg = &StopAutomatchResponse{}
			}
			if err := proto.Unmarshal(payload, msg); err != nil {
				return "", fmt.Errorf("unmarshalling: %v\n\tframe: %04X%s", err, len(data), hex.EncodeToString(data))
			}
			return fmt.Sprintf("%s{ %s } %s{ %s }", hdr.ProtoReflect().Descriptor().Name(), prototext.Format(hdr), msg.ProtoReflect().Descriptor().Name(), prototext.Format(msg)), nil
		}
	}
	if tag == 26200 {
		if !hdrReady {
			hdrLen = binary.BigEndian.Uint16(data[3:5])
			hdrPayload = data[5 : 5+hdrLen]
			hdr = &MessageHeader{}
			if err := proto.Unmarshal(hdrPayload, hdr); err != nil {
				return "", fmt.Errorf("unmarshalling header: %v", err)
			}
			hdrReady = true
		}
		if hdr.GetTag1() == 105 && hdr.GetTag2() == 31000 {
			payload := data[5+hdrLen : len(data)-4]
			var msg proto.Message
			if isReq {
				msg = &AcceptMatchRequest{}
			} else {
				msg = &AcceptMatchResponse{}
			}
			if err := proto.Unmarshal(payload, msg); err != nil {
				return "", fmt.Errorf("unmarshalling: %v\n\tframe: %04X%s", err, len(data), hex.EncodeToString(data))
			}
			return fmt.Sprintf("%s{ %s } %s{ %s }", hdr.ProtoReflect().Descriptor().Name(), prototext.Format(hdr), msg.ProtoReflect().Descriptor().Name(), prototext.Format(msg)), nil
		}
	}
	if tag == 26200 {
		if !hdrReady {
			hdrLen = binary.BigEndian.Uint16(data[3:5])
			hdrPayload = data[5 : 5+hdrLen]
			hdr = &MessageHeader{}
			if err := proto.Unmarshal(hdrPayload, hdr); err != nil {
				return "", fmt.Errorf("unmarshalling header: %v", err)
			}
			hdrReady = true
		}
		if hdr.GetTag1() == 105 && hdr.GetTag2() == 31000 {
			payload := data[5+hdrLen : len(data)-4]
			var msg proto.Message
			if isReq {
				msg = &AcceptMatchRequest{}
			} else {
				msg = &AcceptMatchResponse{}
			}
			if err := proto.Unmarshal(payload, msg); err != nil {
				return "", fmt.Errorf("unmarshalling: %v\n\tframe: %04X%s", err, len(data), hex.EncodeToString(data))
			}
			return fmt.Sprintf("%s{ %s } %s{ %s }", hdr.ProtoReflect().Descriptor().Name(), prototext.Format(hdr), msg.ProtoReflect().Descriptor().Name(), prototext.Format(msg)), nil
		}
	}
	if tag == 26200 {
		if !hdrReady {
			hdrLen = binary.BigEndian.Uint16(data[3:5])
			hdrPayload = data[5 : 5+hdrLen]
			hdr = &MessageHeader{}
			if err := proto.Unmarshal(hdrPayload, hdr); err != nil {
				return "", fmt.Errorf("unmarshalling header: %v", err)
			}
			hdrReady = true
		}
		if hdr.GetTag1() == 200 && hdr.GetTag2() == 31000 {
			payload := data[5+hdrLen : len(data)-4]
			var msg proto.Message
			if isReq {
				msg = &SyncMatchTimeRequest{}
			} else {
				msg = &SyncMatchTimeResponse{}
			}
			if err := proto.Unmarshal(payload, msg); err != nil {
				return "", fmt.Errorf("unmarshalling: %v\n\tframe: %04X%s", err, len(data), hex.EncodeToString(data))
			}
			return fmt.Sprintf("%s{ %s } %s{ %s }", hdr.ProtoReflect().Descriptor().Name(), prototext.Format(hdr), msg.ProtoReflect().Descriptor().Name(), prototext.Format(msg)), nil
		}
	}
	if tag == 26200 {
		if !hdrReady {
			hdrLen = binary.BigEndian.Uint16(data[3:5])
			hdrPayload = data[5 : 5+hdrLen]
			hdr = &MessageHeader{}
			if err := proto.Unmarshal(hdrPayload, hdr); err != nil {
				return "", fmt.Errorf("unmarshalling header: %v", err)
			}
			hdrReady = true
		}
		if hdr.GetTag1() == 200 && hdr.GetTag2() == 31000 {
			payload := data[5+hdrLen : len(data)-4]
			var msg proto.Message
			if isReq {
				msg = &SyncMatchTimeRequest{}
			} else {
				msg = &SyncMatchTimeResponse{}
			}
			if err := proto.Unmarshal(payload, msg); err != nil {
				return "", fmt.Errorf("unmarshalling: %v\n\tframe: %04X%s", err, len(data), hex.EncodeToString(data))
			}
			return fmt.Sprintf("%s{ %s } %s{ %s }", hdr.ProtoReflect().Descriptor().Name(), prototext.Format(hdr), msg.ProtoReflect().Descriptor().Name(), prototext.Format(msg)), nil
		}
	}
	if tag == 26200 {
		if !hdrReady {
			hdrLen = binary.BigEndian.Uint16(data[3:5])
			hdrPayload = data[5 : 5+hdrLen]
			hdr = &MessageHeader{}
			if err := proto.Unmarshal(hdrPayload, hdr); err != nil {
				return "", fmt.Errorf("unmarshalling header: %v", err)
			}
			hdrReady = true
		}
		if hdr.GetTag1() == 201 && hdr.GetTag2() == 31000 {
			payload := data[5+hdrLen : len(data)-4]
			var msg proto.Message
			if isReq {
				msg = &MoveRequest{}
			} else {
				msg = &MoveResponse{}
			}
			if err := proto.Unmarshal(payload, msg); err != nil {
				return "", fmt.Errorf("unmarshalling: %v\n\tframe: %04X%s", err, len(data), hex.EncodeToString(data))
			}
			return fmt.Sprintf("%s{ %s } %s{ %s }", hdr.ProtoReflect().Descriptor().Name(), prototext.Format(hdr), msg.ProtoReflect().Descriptor().Name(), prototext.Format(msg)), nil
		}
	}
	if tag == 26200 {
		if !hdrReady {
			hdrLen = binary.BigEndian.Uint16(data[3:5])
			hdrPayload = data[5 : 5+hdrLen]
			hdr = &MessageHeader{}
			if err := proto.Unmarshal(hdrPayload, hdr); err != nil {
				return "", fmt.Errorf("unmarshalling header: %v", err)
			}
			hdrReady = true
		}
		if hdr.GetTag1() == 201 && hdr.GetTag2() == 31000 {
			payload := data[5+hdrLen : len(data)-4]
			var msg proto.Message
			if isReq {
				msg = &MoveRequest{}
			} else {
				msg = &MoveResponse{}
			}
			if err := proto.Unmarshal(payload, msg); err != nil {
				return "", fmt.Errorf("unmarshalling: %v\n\tframe: %04X%s", err, len(data), hex.EncodeToString(data))
			}
			return fmt.Sprintf("%s{ %s } %s{ %s }", hdr.ProtoReflect().Descriptor().Name(), prototext.Format(hdr), msg.ProtoReflect().Descriptor().Name(), prototext.Format(msg)), nil
		}
	}
	if tag == 26200 {
		if !hdrReady {
			hdrLen = binary.BigEndian.Uint16(data[3:5])
			hdrPayload = data[5 : 5+hdrLen]
			hdr = &MessageHeader{}
			if err := proto.Unmarshal(hdrPayload, hdr); err != nil {
				return "", fmt.Errorf("unmarshalling header: %v", err)
			}
			hdrReady = true
		}
		if hdr.GetTag1() == 204 && hdr.GetTag2() == 31000 {
			payload := data[5+hdrLen : len(data)-4]
			var msg proto.Message
			if isReq {
				msg = &PassRequest{}
			} else {
				msg = &PassResponse{}
			}
			if err := proto.Unmarshal(payload, msg); err != nil {
				return "", fmt.Errorf("unmarshalling: %v\n\tframe: %04X%s", err, len(data), hex.EncodeToString(data))
			}
			return fmt.Sprintf("%s{ %s } %s{ %s }", hdr.ProtoReflect().Descriptor().Name(), prototext.Format(hdr), msg.ProtoReflect().Descriptor().Name(), prototext.Format(msg)), nil
		}
	}
	if tag == 26200 {
		if !hdrReady {
			hdrLen = binary.BigEndian.Uint16(data[3:5])
			hdrPayload = data[5 : 5+hdrLen]
			hdr = &MessageHeader{}
			if err := proto.Unmarshal(hdrPayload, hdr); err != nil {
				return "", fmt.Errorf("unmarshalling header: %v", err)
			}
			hdrReady = true
		}
		if hdr.GetTag1() == 204 && hdr.GetTag2() == 31000 {
			payload := data[5+hdrLen : len(data)-4]
			var msg proto.Message
			if isReq {
				msg = &PassRequest{}
			} else {
				msg = &PassResponse{}
			}
			if err := proto.Unmarshal(payload, msg); err != nil {
				return "", fmt.Errorf("unmarshalling: %v\n\tframe: %04X%s", err, len(data), hex.EncodeToString(data))
			}
			return fmt.Sprintf("%s{ %s } %s{ %s }", hdr.ProtoReflect().Descriptor().Name(), prototext.Format(hdr), msg.ProtoReflect().Descriptor().Name(), prototext.Format(msg)), nil
		}
	}
	if tag == 26200 {
		if !hdrReady {
			hdrLen = binary.BigEndian.Uint16(data[3:5])
			hdrPayload = data[5 : 5+hdrLen]
			hdr = &MessageHeader{}
			if err := proto.Unmarshal(hdrPayload, hdr); err != nil {
				return "", fmt.Errorf("unmarshalling header: %v", err)
			}
			hdrReady = true
		}
		if hdr.GetTag1() == 301 && hdr.GetTag2() == 31000 {
			payload := data[5+hdrLen : len(data)-4]
			var msg proto.Message
			if isReq {
				msg = &RequestCountingRequest{}
			} else {
				msg = &RequestCountingResponse{}
			}
			if err := proto.Unmarshal(payload, msg); err != nil {
				return "", fmt.Errorf("unmarshalling: %v\n\tframe: %04X%s", err, len(data), hex.EncodeToString(data))
			}
			return fmt.Sprintf("%s{ %s } %s{ %s }", hdr.ProtoReflect().Descriptor().Name(), prototext.Format(hdr), msg.ProtoReflect().Descriptor().Name(), prototext.Format(msg)), nil
		}
	}
	if tag == 26200 {
		if !hdrReady {
			hdrLen = binary.BigEndian.Uint16(data[3:5])
			hdrPayload = data[5 : 5+hdrLen]
			hdr = &MessageHeader{}
			if err := proto.Unmarshal(hdrPayload, hdr); err != nil {
				return "", fmt.Errorf("unmarshalling header: %v", err)
			}
			hdrReady = true
		}
		if hdr.GetTag1() == 301 && hdr.GetTag2() == 31000 {
			payload := data[5+hdrLen : len(data)-4]
			var msg proto.Message
			if isReq {
				msg = &RequestCountingRequest{}
			} else {
				msg = &RequestCountingResponse{}
			}
			if err := proto.Unmarshal(payload, msg); err != nil {
				return "", fmt.Errorf("unmarshalling: %v\n\tframe: %04X%s", err, len(data), hex.EncodeToString(data))
			}
			return fmt.Sprintf("%s{ %s } %s{ %s }", hdr.ProtoReflect().Descriptor().Name(), prototext.Format(hdr), msg.ProtoReflect().Descriptor().Name(), prototext.Format(msg)), nil
		}
	}
	if tag == 26200 {
		if !hdrReady {
			hdrLen = binary.BigEndian.Uint16(data[3:5])
			hdrPayload = data[5 : 5+hdrLen]
			hdr = &MessageHeader{}
			if err := proto.Unmarshal(hdrPayload, hdr); err != nil {
				return "", fmt.Errorf("unmarshalling header: %v", err)
			}
			hdrReady = true
		}
		if hdr.GetTag1() == 304 && hdr.GetTag2() == 31000 {
			payload := data[5+hdrLen : len(data)-4]
			var msg proto.Message
			if isReq {
				msg = &CountingDecision{}
			} else {
				msg = &SendCountingDecisionResponse{}
			}
			if err := proto.Unmarshal(payload, msg); err != nil {
				return "", fmt.Errorf("unmarshalling: %v\n\tframe: %04X%s", err, len(data), hex.EncodeToString(data))
			}
			return fmt.Sprintf("%s{ %s } %s{ %s }", hdr.ProtoReflect().Descriptor().Name(), prototext.Format(hdr), msg.ProtoReflect().Descriptor().Name(), prototext.Format(msg)), nil
		}
	}
	if tag == 26200 {
		if !hdrReady {
			hdrLen = binary.BigEndian.Uint16(data[3:5])
			hdrPayload = data[5 : 5+hdrLen]
			hdr = &MessageHeader{}
			if err := proto.Unmarshal(hdrPayload, hdr); err != nil {
				return "", fmt.Errorf("unmarshalling header: %v", err)
			}
			hdrReady = true
		}
		if hdr.GetTag1() == 304 && hdr.GetTag2() == 31000 {
			payload := data[5+hdrLen : len(data)-4]
			var msg proto.Message
			if isReq {
				msg = &CountingDecision{}
			} else {
				msg = &SendCountingDecisionResponse{}
			}
			if err := proto.Unmarshal(payload, msg); err != nil {
				return "", fmt.Errorf("unmarshalling: %v\n\tframe: %04X%s", err, len(data), hex.EncodeToString(data))
			}
			return fmt.Sprintf("%s{ %s } %s{ %s }", hdr.ProtoReflect().Descriptor().Name(), prototext.Format(hdr), msg.ProtoReflect().Descriptor().Name(), prototext.Format(msg)), nil
		}
	}
	if tag == 26200 {
		if !hdrReady {
			hdrLen = binary.BigEndian.Uint16(data[3:5])
			hdrPayload = data[5 : 5+hdrLen]
			hdr = &MessageHeader{}
			if err := proto.Unmarshal(hdrPayload, hdr); err != nil {
				return "", fmt.Errorf("unmarshalling header: %v", err)
			}
			hdrReady = true
		}
		if hdr.GetTag1() == 311 && hdr.GetTag2() == 31000 {
			payload := data[5+hdrLen : len(data)-4]
			var msg proto.Message
			if isReq {
				msg = &ResignRequest{}
			} else {
				msg = &ResignResponse{}
			}
			if err := proto.Unmarshal(payload, msg); err != nil {
				return "", fmt.Errorf("unmarshalling: %v\n\tframe: %04X%s", err, len(data), hex.EncodeToString(data))
			}
			return fmt.Sprintf("%s{ %s } %s{ %s }", hdr.ProtoReflect().Descriptor().Name(), prototext.Format(hdr), msg.ProtoReflect().Descriptor().Name(), prototext.Format(msg)), nil
		}
	}
	if tag == 26200 {
		if !hdrReady {
			hdrLen = binary.BigEndian.Uint16(data[3:5])
			hdrPayload = data[5 : 5+hdrLen]
			hdr = &MessageHeader{}
			if err := proto.Unmarshal(hdrPayload, hdr); err != nil {
				return "", fmt.Errorf("unmarshalling header: %v", err)
			}
			hdrReady = true
		}
		if hdr.GetTag1() == 311 && hdr.GetTag2() == 31000 {
			payload := data[5+hdrLen : len(data)-4]
			var msg proto.Message
			if isReq {
				msg = &ResignRequest{}
			} else {
				msg = &ResignResponse{}
			}
			if err := proto.Unmarshal(payload, msg); err != nil {
				return "", fmt.Errorf("unmarshalling: %v\n\tframe: %04X%s", err, len(data), hex.EncodeToString(data))
			}
			return fmt.Sprintf("%s{ %s } %s{ %s }", hdr.ProtoReflect().Descriptor().Name(), prototext.Format(hdr), msg.ProtoReflect().Descriptor().Name(), prototext.Format(msg)), nil
		}
	}
	if tag == 26200 {
		if !hdrReady {
			hdrLen = binary.BigEndian.Uint16(data[3:5])
			hdrPayload = data[5 : 5+hdrLen]
			hdr = &MessageHeader{}
			if err := proto.Unmarshal(hdrPayload, hdr); err != nil {
				return "", fmt.Errorf("unmarshalling header: %v", err)
			}
			hdrReady = true
		}
		if hdr.GetTag1() == 107 && hdr.GetTag2() == 31000 {
			payload := data[5+hdrLen : len(data)-4]
			var msg proto.Message
			if isReq {
			} else {
				msg = &MatchStartEvent{}
			}
			if err := proto.Unmarshal(payload, msg); err != nil {
				return "", fmt.Errorf("unmarshalling: %v\n\tframe: %04X%s", err, len(data), hex.EncodeToString(data))
			}
			return fmt.Sprintf("%s{ %s } %s{ %s }", hdr.ProtoReflect().Descriptor().Name(), prototext.Format(hdr), msg.ProtoReflect().Descriptor().Name(), prototext.Format(msg)), nil
		}
	}
	if tag == 26200 {
		if !hdrReady {
			hdrLen = binary.BigEndian.Uint16(data[3:5])
			hdrPayload = data[5 : 5+hdrLen]
			hdr = &MessageHeader{}
			if err := proto.Unmarshal(hdrPayload, hdr); err != nil {
				return "", fmt.Errorf("unmarshalling header: %v", err)
			}
			hdrReady = true
		}
		if hdr.GetTag1() == 107 && hdr.GetTag2() == 31000 {
			payload := data[5+hdrLen : len(data)-4]
			var msg proto.Message
			if isReq {
			} else {
				msg = &MatchStartEvent{}
			}
			if err := proto.Unmarshal(payload, msg); err != nil {
				return "", fmt.Errorf("unmarshalling: %v\n\tframe: %04X%s", err, len(data), hex.EncodeToString(data))
			}
			return fmt.Sprintf("%s{ %s } %s{ %s }", hdr.ProtoReflect().Descriptor().Name(), prototext.Format(hdr), msg.ProtoReflect().Descriptor().Name(), prototext.Format(msg)), nil
		}
	}
	if tag == 26200 {
		if !hdrReady {
			hdrLen = binary.BigEndian.Uint16(data[3:5])
			hdrPayload = data[5 : 5+hdrLen]
			hdr = &MessageHeader{}
			if err := proto.Unmarshal(hdrPayload, hdr); err != nil {
				return "", fmt.Errorf("unmarshalling header: %v", err)
			}
			hdrReady = true
		}
		if hdr.GetTag1() == 203 && hdr.GetTag2() == 31000 {
			payload := data[5+hdrLen : len(data)-4]
			var msg proto.Message
			if isReq {
			} else {
				msg = &NextMoveEvent{}
			}
			if err := proto.Unmarshal(payload, msg); err != nil {
				return "", fmt.Errorf("unmarshalling: %v\n\tframe: %04X%s", err, len(data), hex.EncodeToString(data))
			}
			return fmt.Sprintf("%s{ %s } %s{ %s }", hdr.ProtoReflect().Descriptor().Name(), prototext.Format(hdr), msg.ProtoReflect().Descriptor().Name(), prototext.Format(msg)), nil
		}
	}
	if tag == 26200 {
		if !hdrReady {
			hdrLen = binary.BigEndian.Uint16(data[3:5])
			hdrPayload = data[5 : 5+hdrLen]
			hdr = &MessageHeader{}
			if err := proto.Unmarshal(hdrPayload, hdr); err != nil {
				return "", fmt.Errorf("unmarshalling header: %v", err)
			}
			hdrReady = true
		}
		if hdr.GetTag1() == 203 && hdr.GetTag2() == 31000 {
			payload := data[5+hdrLen : len(data)-4]
			var msg proto.Message
			if isReq {
			} else {
				msg = &NextMoveEvent{}
			}
			if err := proto.Unmarshal(payload, msg); err != nil {
				return "", fmt.Errorf("unmarshalling: %v\n\tframe: %04X%s", err, len(data), hex.EncodeToString(data))
			}
			return fmt.Sprintf("%s{ %s } %s{ %s }", hdr.ProtoReflect().Descriptor().Name(), prototext.Format(hdr), msg.ProtoReflect().Descriptor().Name(), prototext.Format(msg)), nil
		}
	}
	if tag == 26200 {
		if !hdrReady {
			hdrLen = binary.BigEndian.Uint16(data[3:5])
			hdrPayload = data[5 : 5+hdrLen]
			hdr = &MessageHeader{}
			if err := proto.Unmarshal(hdrPayload, hdr); err != nil {
				return "", fmt.Errorf("unmarshalling header: %v", err)
			}
			hdrReady = true
		}
		if hdr.GetTag1() == 206 && hdr.GetTag2() == 31000 {
			payload := data[5+hdrLen : len(data)-4]
			var msg proto.Message
			if isReq {
			} else {
				msg = &PassEvent{}
			}
			if err := proto.Unmarshal(payload, msg); err != nil {
				return "", fmt.Errorf("unmarshalling: %v\n\tframe: %04X%s", err, len(data), hex.EncodeToString(data))
			}
			return fmt.Sprintf("%s{ %s } %s{ %s }", hdr.ProtoReflect().Descriptor().Name(), prototext.Format(hdr), msg.ProtoReflect().Descriptor().Name(), prototext.Format(msg)), nil
		}
	}
	if tag == 26200 {
		if !hdrReady {
			hdrLen = binary.BigEndian.Uint16(data[3:5])
			hdrPayload = data[5 : 5+hdrLen]
			hdr = &MessageHeader{}
			if err := proto.Unmarshal(hdrPayload, hdr); err != nil {
				return "", fmt.Errorf("unmarshalling header: %v", err)
			}
			hdrReady = true
		}
		if hdr.GetTag1() == 206 && hdr.GetTag2() == 31000 {
			payload := data[5+hdrLen : len(data)-4]
			var msg proto.Message
			if isReq {
			} else {
				msg = &PassEvent{}
			}
			if err := proto.Unmarshal(payload, msg); err != nil {
				return "", fmt.Errorf("unmarshalling: %v\n\tframe: %04X%s", err, len(data), hex.EncodeToString(data))
			}
			return fmt.Sprintf("%s{ %s } %s{ %s }", hdr.ProtoReflect().Descriptor().Name(), prototext.Format(hdr), msg.ProtoReflect().Descriptor().Name(), prototext.Format(msg)), nil
		}
	}
	if tag == 26200 {
		if !hdrReady {
			hdrLen = binary.BigEndian.Uint16(data[3:5])
			hdrPayload = data[5 : 5+hdrLen]
			hdr = &MessageHeader{}
			if err := proto.Unmarshal(hdrPayload, hdr); err != nil {
				return "", fmt.Errorf("unmarshalling header: %v", err)
			}
			hdrReady = true
		}
		if hdr.GetTag1() == 108 && hdr.GetTag2() == 31000 {
			payload := data[5+hdrLen : len(data)-4]
			var msg proto.Message
			if isReq {
			} else {
				msg = &CountdownEvent{}
			}
			if err := proto.Unmarshal(payload, msg); err != nil {
				return "", fmt.Errorf("unmarshalling: %v\n\tframe: %04X%s", err, len(data), hex.EncodeToString(data))
			}
			return fmt.Sprintf("%s{ %s } %s{ %s }", hdr.ProtoReflect().Descriptor().Name(), prototext.Format(hdr), msg.ProtoReflect().Descriptor().Name(), prototext.Format(msg)), nil
		}
	}
	if tag == 26200 {
		if !hdrReady {
			hdrLen = binary.BigEndian.Uint16(data[3:5])
			hdrPayload = data[5 : 5+hdrLen]
			hdr = &MessageHeader{}
			if err := proto.Unmarshal(hdrPayload, hdr); err != nil {
				return "", fmt.Errorf("unmarshalling header: %v", err)
			}
			hdrReady = true
		}
		if hdr.GetTag1() == 108 && hdr.GetTag2() == 31000 {
			payload := data[5+hdrLen : len(data)-4]
			var msg proto.Message
			if isReq {
			} else {
				msg = &CountdownEvent{}
			}
			if err := proto.Unmarshal(payload, msg); err != nil {
				return "", fmt.Errorf("unmarshalling: %v\n\tframe: %04X%s", err, len(data), hex.EncodeToString(data))
			}
			return fmt.Sprintf("%s{ %s } %s{ %s }", hdr.ProtoReflect().Descriptor().Name(), prototext.Format(hdr), msg.ProtoReflect().Descriptor().Name(), prototext.Format(msg)), nil
		}
	}
	if tag == 26200 {
		if !hdrReady {
			hdrLen = binary.BigEndian.Uint16(data[3:5])
			hdrPayload = data[5 : 5+hdrLen]
			hdr = &MessageHeader{}
			if err := proto.Unmarshal(hdrPayload, hdr); err != nil {
				return "", fmt.Errorf("unmarshalling header: %v", err)
			}
			hdrReady = true
		}
		if hdr.GetTag1() == 109 && hdr.GetTag2() == 31000 {
			payload := data[5+hdrLen : len(data)-4]
			var msg proto.Message
			if isReq {
			} else {
				msg = &ResumeCountdownEvent{}
			}
			if err := proto.Unmarshal(payload, msg); err != nil {
				return "", fmt.Errorf("unmarshalling: %v\n\tframe: %04X%s", err, len(data), hex.EncodeToString(data))
			}
			return fmt.Sprintf("%s{ %s } %s{ %s }", hdr.ProtoReflect().Descriptor().Name(), prototext.Format(hdr), msg.ProtoReflect().Descriptor().Name(), prototext.Format(msg)), nil
		}
	}
	if tag == 26200 {
		if !hdrReady {
			hdrLen = binary.BigEndian.Uint16(data[3:5])
			hdrPayload = data[5 : 5+hdrLen]
			hdr = &MessageHeader{}
			if err := proto.Unmarshal(hdrPayload, hdr); err != nil {
				return "", fmt.Errorf("unmarshalling header: %v", err)
			}
			hdrReady = true
		}
		if hdr.GetTag1() == 109 && hdr.GetTag2() == 31000 {
			payload := data[5+hdrLen : len(data)-4]
			var msg proto.Message
			if isReq {
			} else {
				msg = &ResumeCountdownEvent{}
			}
			if err := proto.Unmarshal(payload, msg); err != nil {
				return "", fmt.Errorf("unmarshalling: %v\n\tframe: %04X%s", err, len(data), hex.EncodeToString(data))
			}
			return fmt.Sprintf("%s{ %s } %s{ %s }", hdr.ProtoReflect().Descriptor().Name(), prototext.Format(hdr), msg.ProtoReflect().Descriptor().Name(), prototext.Format(msg)), nil
		}
	}
	if tag == 26200 {
		if !hdrReady {
			hdrLen = binary.BigEndian.Uint16(data[3:5])
			hdrPayload = data[5 : 5+hdrLen]
			hdr = &MessageHeader{}
			if err := proto.Unmarshal(hdrPayload, hdr); err != nil {
				return "", fmt.Errorf("unmarshalling header: %v", err)
			}
			hdrReady = true
		}
		if hdr.GetTag1() == 306 && hdr.GetTag2() == 31000 {
			payload := data[5+hdrLen : len(data)-4]
			var msg proto.Message
			if isReq {
			} else {
				msg = &CountingDecision{}
			}
			if err := proto.Unmarshal(payload, msg); err != nil {
				return "", fmt.Errorf("unmarshalling: %v\n\tframe: %04X%s", err, len(data), hex.EncodeToString(data))
			}
			return fmt.Sprintf("%s{ %s } %s{ %s }", hdr.ProtoReflect().Descriptor().Name(), prototext.Format(hdr), msg.ProtoReflect().Descriptor().Name(), prototext.Format(msg)), nil
		}
	}
	if tag == 26200 {
		if !hdrReady {
			hdrLen = binary.BigEndian.Uint16(data[3:5])
			hdrPayload = data[5 : 5+hdrLen]
			hdr = &MessageHeader{}
			if err := proto.Unmarshal(hdrPayload, hdr); err != nil {
				return "", fmt.Errorf("unmarshalling header: %v", err)
			}
			hdrReady = true
		}
		if hdr.GetTag1() == 306 && hdr.GetTag2() == 31000 {
			payload := data[5+hdrLen : len(data)-4]
			var msg proto.Message
			if isReq {
			} else {
				msg = &CountingDecision{}
			}
			if err := proto.Unmarshal(payload, msg); err != nil {
				return "", fmt.Errorf("unmarshalling: %v\n\tframe: %04X%s", err, len(data), hex.EncodeToString(data))
			}
			return fmt.Sprintf("%s{ %s } %s{ %s }", hdr.ProtoReflect().Descriptor().Name(), prototext.Format(hdr), msg.ProtoReflect().Descriptor().Name(), prototext.Format(msg)), nil
		}
	}
	if tag == 26200 {
		if !hdrReady {
			hdrLen = binary.BigEndian.Uint16(data[3:5])
			hdrPayload = data[5 : 5+hdrLen]
			hdr = &MessageHeader{}
			if err := proto.Unmarshal(hdrPayload, hdr); err != nil {
				return "", fmt.Errorf("unmarshalling header: %v", err)
			}
			hdrReady = true
		}
		if hdr.GetTag1() == 303 && hdr.GetTag2() == 31000 {
			payload := data[5+hdrLen : len(data)-4]
			var msg proto.Message
			if isReq {
			} else {
				msg = &CountingEvent{}
			}
			if err := proto.Unmarshal(payload, msg); err != nil {
				return "", fmt.Errorf("unmarshalling: %v\n\tframe: %04X%s", err, len(data), hex.EncodeToString(data))
			}
			return fmt.Sprintf("%s{ %s } %s{ %s }", hdr.ProtoReflect().Descriptor().Name(), prototext.Format(hdr), msg.ProtoReflect().Descriptor().Name(), prototext.Format(msg)), nil
		}
	}
	if tag == 26200 {
		if !hdrReady {
			hdrLen = binary.BigEndian.Uint16(data[3:5])
			hdrPayload = data[5 : 5+hdrLen]
			hdr = &MessageHeader{}
			if err := proto.Unmarshal(hdrPayload, hdr); err != nil {
				return "", fmt.Errorf("unmarshalling header: %v", err)
			}
			hdrReady = true
		}
		if hdr.GetTag1() == 303 && hdr.GetTag2() == 31000 {
			payload := data[5+hdrLen : len(data)-4]
			var msg proto.Message
			if isReq {
			} else {
				msg = &CountingEvent{}
			}
			if err := proto.Unmarshal(payload, msg); err != nil {
				return "", fmt.Errorf("unmarshalling: %v\n\tframe: %04X%s", err, len(data), hex.EncodeToString(data))
			}
			return fmt.Sprintf("%s{ %s } %s{ %s }", hdr.ProtoReflect().Descriptor().Name(), prototext.Format(hdr), msg.ProtoReflect().Descriptor().Name(), prototext.Format(msg)), nil
		}
	}
	if tag == 26200 {
		if !hdrReady {
			hdrLen = binary.BigEndian.Uint16(data[3:5])
			hdrPayload = data[5 : 5+hdrLen]
			hdr = &MessageHeader{}
			if err := proto.Unmarshal(hdrPayload, hdr); err != nil {
				return "", fmt.Errorf("unmarshalling header: %v", err)
			}
			hdrReady = true
		}
		if hdr.GetTag1() == 405 && hdr.GetTag2() == 31000 {
			payload := data[5+hdrLen : len(data)-4]
			var msg proto.Message
			if isReq {
			} else {
				msg = &GameResultEvent{}
			}
			if err := proto.Unmarshal(payload, msg); err != nil {
				return "", fmt.Errorf("unmarshalling: %v\n\tframe: %04X%s", err, len(data), hex.EncodeToString(data))
			}
			return fmt.Sprintf("%s{ %s } %s{ %s }", hdr.ProtoReflect().Descriptor().Name(), prototext.Format(hdr), msg.ProtoReflect().Descriptor().Name(), prototext.Format(msg)), nil
		}
	}
	if tag == 26200 {
		if !hdrReady {
			hdrLen = binary.BigEndian.Uint16(data[3:5])
			hdrPayload = data[5 : 5+hdrLen]
			hdr = &MessageHeader{}
			if err := proto.Unmarshal(hdrPayload, hdr); err != nil {
				return "", fmt.Errorf("unmarshalling header: %v", err)
			}
			hdrReady = true
		}
		if hdr.GetTag1() == 405 && hdr.GetTag2() == 31000 {
			payload := data[5+hdrLen : len(data)-4]
			var msg proto.Message
			if isReq {
			} else {
				msg = &GameResultEvent{}
			}
			if err := proto.Unmarshal(payload, msg); err != nil {
				return "", fmt.Errorf("unmarshalling: %v\n\tframe: %04X%s", err, len(data), hex.EncodeToString(data))
			}
			return fmt.Sprintf("%s{ %s } %s{ %s }", hdr.ProtoReflect().Descriptor().Name(), prototext.Format(hdr), msg.ProtoReflect().Descriptor().Name(), prototext.Format(msg)), nil
		}
	}
	if tag == 26200 {
		if !hdrReady {
			hdrLen = binary.BigEndian.Uint16(data[3:5])
			hdrPayload = data[5 : 5+hdrLen]
			hdr = &MessageHeader{}
			if err := proto.Unmarshal(hdrPayload, hdr); err != nil {
				return "", fmt.Errorf("unmarshalling header: %v", err)
			}
			hdrReady = true
		}
		if hdr.GetTag1() == 5 && hdr.GetTag2() == 20001 {
			payload := data[5+hdrLen : len(data)-4]
			var msg proto.Message
			if isReq {
				msg = &SyncTimeRequest{}
			} else {
				msg = &SyncTimeResponse{}
			}
			if err := proto.Unmarshal(payload, msg); err != nil {
				return "", fmt.Errorf("unmarshalling: %v\n\tframe: %04X%s", err, len(data), hex.EncodeToString(data))
			}
			return fmt.Sprintf("%s{ %s } %s{ %s }", hdr.ProtoReflect().Descriptor().Name(), prototext.Format(hdr), msg.ProtoReflect().Descriptor().Name(), prototext.Format(msg)), nil
		}
	}
	if tag == 26200 {
		if !hdrReady {
			hdrLen = binary.BigEndian.Uint16(data[3:5])
			hdrPayload = data[5 : 5+hdrLen]
			hdr = &MessageHeader{}
			if err := proto.Unmarshal(hdrPayload, hdr); err != nil {
				return "", fmt.Errorf("unmarshalling header: %v", err)
			}
			hdrReady = true
		}
		if hdr.GetTag1() == 5 && hdr.GetTag2() == 20001 {
			payload := data[5+hdrLen : len(data)-4]
			var msg proto.Message
			if isReq {
				msg = &SyncTimeRequest{}
			} else {
				msg = &SyncTimeResponse{}
			}
			if err := proto.Unmarshal(payload, msg); err != nil {
				return "", fmt.Errorf("unmarshalling: %v\n\tframe: %04X%s", err, len(data), hex.EncodeToString(data))
			}
			return fmt.Sprintf("%s{ %s } %s{ %s }", hdr.ProtoReflect().Descriptor().Name(), prototext.Format(hdr), msg.ProtoReflect().Descriptor().Name(), prototext.Format(msg)), nil
		}
	}
	if tag == 26200 {
		if !hdrReady {
			hdrLen = binary.BigEndian.Uint16(data[3:5])
			hdrPayload = data[5 : 5+hdrLen]
			hdr = &MessageHeader{}
			if err := proto.Unmarshal(hdrPayload, hdr); err != nil {
				return "", fmt.Errorf("unmarshalling header: %v", err)
			}
			hdrReady = true
		}
		if hdr.GetTag1() == 2 && hdr.GetTag2() == 30048 {
			payload := data[5+hdrLen : len(data)-4]
			var msg proto.Message
			if isReq {
				msg = &UnknownPlayRequest1{}
			} else {
				msg = &UnknownPlayResponse1{}
			}
			if err := proto.Unmarshal(payload, msg); err != nil {
				return "", fmt.Errorf("unmarshalling: %v\n\tframe: %04X%s", err, len(data), hex.EncodeToString(data))
			}
			return fmt.Sprintf("%s{ %s } %s{ %s }", hdr.ProtoReflect().Descriptor().Name(), prototext.Format(hdr), msg.ProtoReflect().Descriptor().Name(), prototext.Format(msg)), nil
		}
	}
	if tag == 26200 {
		if !hdrReady {
			hdrLen = binary.BigEndian.Uint16(data[3:5])
			hdrPayload = data[5 : 5+hdrLen]
			hdr = &MessageHeader{}
			if err := proto.Unmarshal(hdrPayload, hdr); err != nil {
				return "", fmt.Errorf("unmarshalling header: %v", err)
			}
			hdrReady = true
		}
		if hdr.GetTag1() == 2 && hdr.GetTag2() == 30048 {
			payload := data[5+hdrLen : len(data)-4]
			var msg proto.Message
			if isReq {
				msg = &UnknownPlayRequest1{}
			} else {
				msg = &UnknownPlayResponse1{}
			}
			if err := proto.Unmarshal(payload, msg); err != nil {
				return "", fmt.Errorf("unmarshalling: %v\n\tframe: %04X%s", err, len(data), hex.EncodeToString(data))
			}
			return fmt.Sprintf("%s{ %s } %s{ %s }", hdr.ProtoReflect().Descriptor().Name(), prototext.Format(hdr), msg.ProtoReflect().Descriptor().Name(), prototext.Format(msg)), nil
		}
	}

	psOpts := protoscope.WriterOptions{
		NoQuotedStrings:        false,
		AllFieldsAreMessages:   false,
		ExplicitWireTypes:      false,
		NoGroups:               true,
		ExplicitLengthPrefixes: false,
	}

	if hdrReady {
		payload := data[5+hdrLen : len(data)-4]
		return fmt.Sprintf("%s{ %s } ???{ %s }", hdr.ProtoReflect().Descriptor().Name(), prototext.Format(hdr), protoscope.Write(payload, psOpts)), nil
	} else {
		payload := data[3 : len(data)-4]
		return fmt.Sprintf("[tag=%d] ???{ %s }", tag, protoscope.Write(payload, psOpts)), nil
	}
}
