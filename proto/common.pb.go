// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: proto/common.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Color int32

const (
	Color_COL_NONE  Color = 0
	Color_COL_BLACK Color = 1
	Color_COL_WHITE Color = 2
)

// Enum value maps for Color.
var (
	Color_name = map[int32]string{
		0: "COL_NONE",
		1: "COL_BLACK",
		2: "COL_WHITE",
	}
	Color_value = map[string]int32{
		"COL_NONE":  0,
		"COL_BLACK": 1,
		"COL_WHITE": 2,
	}
)

func (x Color) Enum() *Color {
	p := new(Color)
	*p = x
	return p
}

func (x Color) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Color) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_common_proto_enumTypes[0].Descriptor()
}

func (Color) Type() protoreflect.EnumType {
	return &file_proto_common_proto_enumTypes[0]
}

func (x Color) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *Color) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = Color(num)
	return nil
}

// Deprecated: Use Color.Descriptor instead.
func (Color) EnumDescriptor() ([]byte, []int) {
	return file_proto_common_proto_rawDescGZIP(), []int{0}
}

type Rank int32

const (
	Rank_RANK_18K Rank = 0
	Rank_RANK_17K Rank = 1
	Rank_RANK_16K Rank = 2
	Rank_RANK_15K Rank = 3
	Rank_RANK_14K Rank = 4
	Rank_RANK_13K Rank = 5
	Rank_RANK_12K Rank = 6
	Rank_RANK_11K Rank = 7
	Rank_RANK_10K Rank = 8
	Rank_RANK_9K  Rank = 9
	Rank_RANK_8K  Rank = 10
	Rank_RANK_7K  Rank = 11
	Rank_RANK_6K  Rank = 12
	Rank_RANK_5K  Rank = 13
	Rank_RANK_4K  Rank = 14
	Rank_RANK_3K  Rank = 15
	Rank_RANK_2K  Rank = 16
	Rank_RANK_1K  Rank = 17
	Rank_RANK_1D  Rank = 18
	Rank_RANK_2D  Rank = 19
	Rank_RANK_3D  Rank = 20
	Rank_RANK_4D  Rank = 21
	Rank_RANK_5D  Rank = 22
	Rank_RANK_6D  Rank = 23
	Rank_RANK_7D  Rank = 24
	Rank_RANK_8D  Rank = 25
	Rank_RANK_9D  Rank = 26
	Rank_RANK_10D Rank = 27
	Rank_RANK_1P  Rank = 100
	Rank_RANK_2P  Rank = 101
	Rank_RANK_3P  Rank = 102
	Rank_RANK_4P  Rank = 103
	Rank_RANK_5P  Rank = 104
	Rank_RANK_6P  Rank = 105
	Rank_RANK_7P  Rank = 106
	Rank_RANK_8P  Rank = 107
	Rank_RANK_9P  Rank = 108
	Rank_RANK_10P Rank = 109
)

// Enum value maps for Rank.
var (
	Rank_name = map[int32]string{
		0:   "RANK_18K",
		1:   "RANK_17K",
		2:   "RANK_16K",
		3:   "RANK_15K",
		4:   "RANK_14K",
		5:   "RANK_13K",
		6:   "RANK_12K",
		7:   "RANK_11K",
		8:   "RANK_10K",
		9:   "RANK_9K",
		10:  "RANK_8K",
		11:  "RANK_7K",
		12:  "RANK_6K",
		13:  "RANK_5K",
		14:  "RANK_4K",
		15:  "RANK_3K",
		16:  "RANK_2K",
		17:  "RANK_1K",
		18:  "RANK_1D",
		19:  "RANK_2D",
		20:  "RANK_3D",
		21:  "RANK_4D",
		22:  "RANK_5D",
		23:  "RANK_6D",
		24:  "RANK_7D",
		25:  "RANK_8D",
		26:  "RANK_9D",
		27:  "RANK_10D",
		100: "RANK_1P",
		101: "RANK_2P",
		102: "RANK_3P",
		103: "RANK_4P",
		104: "RANK_5P",
		105: "RANK_6P",
		106: "RANK_7P",
		107: "RANK_8P",
		108: "RANK_9P",
		109: "RANK_10P",
	}
	Rank_value = map[string]int32{
		"RANK_18K": 0,
		"RANK_17K": 1,
		"RANK_16K": 2,
		"RANK_15K": 3,
		"RANK_14K": 4,
		"RANK_13K": 5,
		"RANK_12K": 6,
		"RANK_11K": 7,
		"RANK_10K": 8,
		"RANK_9K":  9,
		"RANK_8K":  10,
		"RANK_7K":  11,
		"RANK_6K":  12,
		"RANK_5K":  13,
		"RANK_4K":  14,
		"RANK_3K":  15,
		"RANK_2K":  16,
		"RANK_1K":  17,
		"RANK_1D":  18,
		"RANK_2D":  19,
		"RANK_3D":  20,
		"RANK_4D":  21,
		"RANK_5D":  22,
		"RANK_6D":  23,
		"RANK_7D":  24,
		"RANK_8D":  25,
		"RANK_9D":  26,
		"RANK_10D": 27,
		"RANK_1P":  100,
		"RANK_2P":  101,
		"RANK_3P":  102,
		"RANK_4P":  103,
		"RANK_5P":  104,
		"RANK_6P":  105,
		"RANK_7P":  106,
		"RANK_8P":  107,
		"RANK_9P":  108,
		"RANK_10P": 109,
	}
)

func (x Rank) Enum() *Rank {
	p := new(Rank)
	*p = x
	return p
}

func (x Rank) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Rank) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_common_proto_enumTypes[1].Descriptor()
}

func (Rank) Type() protoreflect.EnumType {
	return &file_proto_common_proto_enumTypes[1]
}

func (x Rank) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *Rank) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = Rank(num)
	return nil
}

// Deprecated: Use Rank.Descriptor instead.
func (Rank) EnumDescriptor() ([]byte, []int) {
	return file_proto_common_proto_rawDescGZIP(), []int{1}
}

type Country int32

const (
	Country_UNKNOWN     Country = 0
	Country_USA         Country = 1
	Country_RUSSIA      Country = 7
	Country_SOUTHAFRICA Country = 27
	Country_NETHERLANDS Country = 31
	Country_GREECE      Country = 30
	Country_FRANCE      Country = 33
	Country_HUNGARY     Country = 36
	Country_ITALY       Country = 39
	Country_UK          Country = 44
	Country_SWEDEN      Country = 46
	Country_GERMANY     Country = 49
	Country_CHILE       Country = 56
	Country_PHILIPPINES Country = 63
	Country_NEWZEALAND  Country = 64
	Country_SINGAPORE   Country = 65
	Country_THAILAND    Country = 66
	Country_JAPAN       Country = 81
	Country_TAIWAN      Country = 83
	Country_KOREA       Country = 82
	Country_CHINA       Country = 86
	Country_ALBANIA     Country = 355
	Country_BELARUS     Country = 375
	Country_UKRAINE     Country = 380
	Country_HONGKONG    Country = 852
	Country_MACAU       Country = 853
	Country_CANADA      Country = 11111
)

// Enum value maps for Country.
var (
	Country_name = map[int32]string{
		0:     "UNKNOWN",
		1:     "USA",
		7:     "RUSSIA",
		27:    "SOUTHAFRICA",
		31:    "NETHERLANDS",
		30:    "GREECE",
		33:    "FRANCE",
		36:    "HUNGARY",
		39:    "ITALY",
		44:    "UK",
		46:    "SWEDEN",
		49:    "GERMANY",
		56:    "CHILE",
		63:    "PHILIPPINES",
		64:    "NEWZEALAND",
		65:    "SINGAPORE",
		66:    "THAILAND",
		81:    "JAPAN",
		83:    "TAIWAN",
		82:    "KOREA",
		86:    "CHINA",
		355:   "ALBANIA",
		375:   "BELARUS",
		380:   "UKRAINE",
		852:   "HONGKONG",
		853:   "MACAU",
		11111: "CANADA",
	}
	Country_value = map[string]int32{
		"UNKNOWN":     0,
		"USA":         1,
		"RUSSIA":      7,
		"SOUTHAFRICA": 27,
		"NETHERLANDS": 31,
		"GREECE":      30,
		"FRANCE":      33,
		"HUNGARY":     36,
		"ITALY":       39,
		"UK":          44,
		"SWEDEN":      46,
		"GERMANY":     49,
		"CHILE":       56,
		"PHILIPPINES": 63,
		"NEWZEALAND":  64,
		"SINGAPORE":   65,
		"THAILAND":    66,
		"JAPAN":       81,
		"TAIWAN":      83,
		"KOREA":       82,
		"CHINA":       86,
		"ALBANIA":     355,
		"BELARUS":     375,
		"UKRAINE":     380,
		"HONGKONG":    852,
		"MACAU":       853,
		"CANADA":      11111,
	}
)

func (x Country) Enum() *Country {
	p := new(Country)
	*p = x
	return p
}

func (x Country) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Country) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_common_proto_enumTypes[2].Descriptor()
}

func (Country) Type() protoreflect.EnumType {
	return &file_proto_common_proto_enumTypes[2]
}

func (x Country) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *Country) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = Country(num)
	return nil
}

// Deprecated: Use Country.Descriptor instead.
func (Country) EnumDescriptor() ([]byte, []int) {
	return file_proto_common_proto_rawDescGZIP(), []int{2}
}

type PlayerStatus int32

const (
	PlayerStatus_PSTATUS_IDLE  PlayerStatus = 0
	PlayerStatus_PSTATUS_MATCH PlayerStatus = 1
	PlayerStatus_PSTATUS_WATCH PlayerStatus = 2
)

// Enum value maps for PlayerStatus.
var (
	PlayerStatus_name = map[int32]string{
		0: "PSTATUS_IDLE",
		1: "PSTATUS_MATCH",
		2: "PSTATUS_WATCH",
	}
	PlayerStatus_value = map[string]int32{
		"PSTATUS_IDLE":  0,
		"PSTATUS_MATCH": 1,
		"PSTATUS_WATCH": 2,
	}
)

func (x PlayerStatus) Enum() *PlayerStatus {
	p := new(PlayerStatus)
	*p = x
	return p
}

func (x PlayerStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PlayerStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_common_proto_enumTypes[3].Descriptor()
}

func (PlayerStatus) Type() protoreflect.EnumType {
	return &file_proto_common_proto_enumTypes[3]
}

func (x PlayerStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *PlayerStatus) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = PlayerStatus(num)
	return nil
}

// Deprecated: Use PlayerStatus.Descriptor instead.
func (PlayerStatus) EnumDescriptor() ([]byte, []int) {
	return file_proto_common_proto_rawDescGZIP(), []int{3}
}

type BroadcastInfo_BroadcastType int32

const (
	BroadcastInfo_RT_UNKNOWN      BroadcastInfo_BroadcastType = 0
	BroadcastInfo_RT_MATCH        BroadcastInfo_BroadcastType = 1
	BroadcastInfo_RT_BROADCAST    BroadcastInfo_BroadcastType = 4
	BroadcastInfo_RT_COMMENTARY   BroadcastInfo_BroadcastType = 5
	BroadcastInfo_RT_CHAMPIONSHIP BroadcastInfo_BroadcastType = 6
)

// Enum value maps for BroadcastInfo_BroadcastType.
var (
	BroadcastInfo_BroadcastType_name = map[int32]string{
		0: "RT_UNKNOWN",
		1: "RT_MATCH",
		4: "RT_BROADCAST",
		5: "RT_COMMENTARY",
		6: "RT_CHAMPIONSHIP",
	}
	BroadcastInfo_BroadcastType_value = map[string]int32{
		"RT_UNKNOWN":      0,
		"RT_MATCH":        1,
		"RT_BROADCAST":    4,
		"RT_COMMENTARY":   5,
		"RT_CHAMPIONSHIP": 6,
	}
)

func (x BroadcastInfo_BroadcastType) Enum() *BroadcastInfo_BroadcastType {
	p := new(BroadcastInfo_BroadcastType)
	*p = x
	return p
}

func (x BroadcastInfo_BroadcastType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BroadcastInfo_BroadcastType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_common_proto_enumTypes[4].Descriptor()
}

func (BroadcastInfo_BroadcastType) Type() protoreflect.EnumType {
	return &file_proto_common_proto_enumTypes[4]
}

func (x BroadcastInfo_BroadcastType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *BroadcastInfo_BroadcastType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = BroadcastInfo_BroadcastType(num)
	return nil
}

// Deprecated: Use BroadcastInfo_BroadcastType.Descriptor instead.
func (BroadcastInfo_BroadcastType) EnumDescriptor() ([]byte, []int) {
	return file_proto_common_proto_rawDescGZIP(), []int{6, 0}
}

type BroadcastInfo_BroadcastState int32

const (
	BroadcastInfo_RS_UNKNOWN    BroadcastInfo_BroadcastState = 0
	BroadcastInfo_RS_OPENING    BroadcastInfo_BroadcastState = 1
	BroadcastInfo_RS_1PERIOD    BroadcastInfo_BroadcastState = 2
	BroadcastInfo_RS_MIDDLEGAME BroadcastInfo_BroadcastState = 3
	BroadcastInfo_RS_ENDGAME    BroadcastInfo_BroadcastState = 4
	BroadcastInfo_RS_END        BroadcastInfo_BroadcastState = 5
	BroadcastInfo_RS_REVIEW     BroadcastInfo_BroadcastState = 6
)

// Enum value maps for BroadcastInfo_BroadcastState.
var (
	BroadcastInfo_BroadcastState_name = map[int32]string{
		0: "RS_UNKNOWN",
		1: "RS_OPENING",
		2: "RS_1PERIOD",
		3: "RS_MIDDLEGAME",
		4: "RS_ENDGAME",
		5: "RS_END",
		6: "RS_REVIEW",
	}
	BroadcastInfo_BroadcastState_value = map[string]int32{
		"RS_UNKNOWN":    0,
		"RS_OPENING":    1,
		"RS_1PERIOD":    2,
		"RS_MIDDLEGAME": 3,
		"RS_ENDGAME":    4,
		"RS_END":        5,
		"RS_REVIEW":     6,
	}
)

func (x BroadcastInfo_BroadcastState) Enum() *BroadcastInfo_BroadcastState {
	p := new(BroadcastInfo_BroadcastState)
	*p = x
	return p
}

func (x BroadcastInfo_BroadcastState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BroadcastInfo_BroadcastState) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_common_proto_enumTypes[5].Descriptor()
}

func (BroadcastInfo_BroadcastState) Type() protoreflect.EnumType {
	return &file_proto_common_proto_enumTypes[5]
}

func (x BroadcastInfo_BroadcastState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *BroadcastInfo_BroadcastState) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = BroadcastInfo_BroadcastState(num)
	return nil
}

// Deprecated: Use BroadcastInfo_BroadcastState.Descriptor instead.
func (BroadcastInfo_BroadcastState) EnumDescriptor() ([]byte, []int) {
	return file_proto_common_proto_rawDescGZIP(), []int{6, 1}
}

type VersionInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version1   *int64   `protobuf:"varint,1,req,name=version1" json:"version1,omitempty"`
	Version2   *int64   `protobuf:"varint,2,req,name=version2" json:"version2,omitempty"`
	UpdateInfo *string  `protobuf:"bytes,3,opt,name=update_info,json=updateInfo" json:"update_info,omitempty"`
	InstallUrl *string  `protobuf:"bytes,5,opt,name=install_url,json=installUrl" json:"install_url,omitempty"`
	Qgi        []string `protobuf:"bytes,6,rep,name=qgi" json:"qgi,omitempty"`
	QgiHash    []string `protobuf:"bytes,7,rep,name=qgi_hash,json=qgiHash" json:"qgi_hash,omitempty"`
}

func (x *VersionInfo) Reset() {
	*x = VersionInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VersionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionInfo) ProtoMessage() {}

func (x *VersionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionInfo.ProtoReflect.Descriptor instead.
func (*VersionInfo) Descriptor() ([]byte, []int) {
	return file_proto_common_proto_rawDescGZIP(), []int{0}
}

func (x *VersionInfo) GetVersion1() int64 {
	if x != nil && x.Version1 != nil {
		return *x.Version1
	}
	return 0
}

func (x *VersionInfo) GetVersion2() int64 {
	if x != nil && x.Version2 != nil {
		return *x.Version2
	}
	return 0
}

func (x *VersionInfo) GetUpdateInfo() string {
	if x != nil && x.UpdateInfo != nil {
		return *x.UpdateInfo
	}
	return ""
}

func (x *VersionInfo) GetInstallUrl() string {
	if x != nil && x.InstallUrl != nil {
		return *x.InstallUrl
	}
	return ""
}

func (x *VersionInfo) GetQgi() []string {
	if x != nil {
		return x.Qgi
	}
	return nil
}

func (x *VersionInfo) GetQgiHash() []string {
	if x != nil {
		return x.QgiHash
	}
	return nil
}

type ProxyLineInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index       *int64                          `protobuf:"varint,1,req,name=index" json:"index,omitempty"`
	Name        *string                         `protobuf:"bytes,2,req,name=name" json:"name,omitempty"`
	AddressInfo *ProxyLineInfo_ProxyAddressInfo `protobuf:"bytes,3,req,name=address_info,json=addressInfo" json:"address_info,omitempty"`
}

func (x *ProxyLineInfo) Reset() {
	*x = ProxyLineInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProxyLineInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProxyLineInfo) ProtoMessage() {}

func (x *ProxyLineInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProxyLineInfo.ProtoReflect.Descriptor instead.
func (*ProxyLineInfo) Descriptor() ([]byte, []int) {
	return file_proto_common_proto_rawDescGZIP(), []int{1}
}

func (x *ProxyLineInfo) GetIndex() int64 {
	if x != nil && x.Index != nil {
		return *x.Index
	}
	return 0
}

func (x *ProxyLineInfo) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *ProxyLineInfo) GetAddressInfo() *ProxyLineInfo_ProxyAddressInfo {
	if x != nil {
		return x.AddressInfo
	}
	return nil
}

type LobbySvrInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          *string          `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	BroadcastHost *string          `protobuf:"bytes,5,opt,name=broadcast_host,json=broadcastHost" json:"broadcast_host,omitempty"`
	BroadcastPort *int32           `protobuf:"varint,6,opt,name=broadcast_port,json=broadcastPort" json:"broadcast_port,omitempty"`
	NumPlayers    *int64           `protobuf:"varint,3,opt,name=num_players,json=numPlayers" json:"num_players,omitempty"`
	NumMatches    *int64           `protobuf:"varint,4,opt,name=num_matches,json=numMatches" json:"num_matches,omitempty"`
	UnknownHost_1 *string          `protobuf:"bytes,13,opt,name=unknown_host_1,json=unknownHost1" json:"unknown_host_1,omitempty"`
	UnknownPort_1 *int32           `protobuf:"varint,14,opt,name=unknown_port_1,json=unknownPort1" json:"unknown_port_1,omitempty"`
	UnknownHost_2 *string          `protobuf:"bytes,15,opt,name=unknown_host_2,json=unknownHost2" json:"unknown_host_2,omitempty"`
	UnknownPort_2 *int32           `protobuf:"varint,16,opt,name=unknown_port_2,json=unknownPort2" json:"unknown_port_2,omitempty"`
	UnknownHost_3 *string          `protobuf:"bytes,17,opt,name=unknown_host_3,json=unknownHost3" json:"unknown_host_3,omitempty"`
	UnknownPort_3 *int32           `protobuf:"varint,18,opt,name=unknown_port_3,json=unknownPort3" json:"unknown_port_3,omitempty"`
	UnknownHost_4 *string          `protobuf:"bytes,19,opt,name=unknown_host_4,json=unknownHost4" json:"unknown_host_4,omitempty"`
	UnknownPort_4 *int32           `protobuf:"varint,20,opt,name=unknown_port_4,json=unknownPort4" json:"unknown_port_4,omitempty"`
	PlayHost      *string          `protobuf:"bytes,21,opt,name=play_host,json=playHost" json:"play_host,omitempty"`
	PlayPort      *int32           `protobuf:"varint,22,opt,name=play_port,json=playPort" json:"play_port,omitempty"`
	NameLoc       map[int32]string `protobuf:"bytes,23,rep,name=name_loc,json=nameLoc" json:"name_loc,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Unknown fields
	UnknownField_7 *int64 `protobuf:"varint,7,opt,name=unknown_field_7,json=unknownField7" json:"unknown_field_7,omitempty"` // sample value: 86 (China?)
	UnknownField_8 *int64 `protobuf:"varint,8,opt,name=unknown_field_8,json=unknownField8" json:"unknown_field_8,omitempty"` // sample value: 50800, max players?
}

func (x *LobbySvrInfo) Reset() {
	*x = LobbySvrInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LobbySvrInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LobbySvrInfo) ProtoMessage() {}

func (x *LobbySvrInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LobbySvrInfo.ProtoReflect.Descriptor instead.
func (*LobbySvrInfo) Descriptor() ([]byte, []int) {
	return file_proto_common_proto_rawDescGZIP(), []int{2}
}

func (x *LobbySvrInfo) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *LobbySvrInfo) GetBroadcastHost() string {
	if x != nil && x.BroadcastHost != nil {
		return *x.BroadcastHost
	}
	return ""
}

func (x *LobbySvrInfo) GetBroadcastPort() int32 {
	if x != nil && x.BroadcastPort != nil {
		return *x.BroadcastPort
	}
	return 0
}

func (x *LobbySvrInfo) GetNumPlayers() int64 {
	if x != nil && x.NumPlayers != nil {
		return *x.NumPlayers
	}
	return 0
}

func (x *LobbySvrInfo) GetNumMatches() int64 {
	if x != nil && x.NumMatches != nil {
		return *x.NumMatches
	}
	return 0
}

func (x *LobbySvrInfo) GetUnknownHost_1() string {
	if x != nil && x.UnknownHost_1 != nil {
		return *x.UnknownHost_1
	}
	return ""
}

func (x *LobbySvrInfo) GetUnknownPort_1() int32 {
	if x != nil && x.UnknownPort_1 != nil {
		return *x.UnknownPort_1
	}
	return 0
}

func (x *LobbySvrInfo) GetUnknownHost_2() string {
	if x != nil && x.UnknownHost_2 != nil {
		return *x.UnknownHost_2
	}
	return ""
}

func (x *LobbySvrInfo) GetUnknownPort_2() int32 {
	if x != nil && x.UnknownPort_2 != nil {
		return *x.UnknownPort_2
	}
	return 0
}

func (x *LobbySvrInfo) GetUnknownHost_3() string {
	if x != nil && x.UnknownHost_3 != nil {
		return *x.UnknownHost_3
	}
	return ""
}

func (x *LobbySvrInfo) GetUnknownPort_3() int32 {
	if x != nil && x.UnknownPort_3 != nil {
		return *x.UnknownPort_3
	}
	return 0
}

func (x *LobbySvrInfo) GetUnknownHost_4() string {
	if x != nil && x.UnknownHost_4 != nil {
		return *x.UnknownHost_4
	}
	return ""
}

func (x *LobbySvrInfo) GetUnknownPort_4() int32 {
	if x != nil && x.UnknownPort_4 != nil {
		return *x.UnknownPort_4
	}
	return 0
}

func (x *LobbySvrInfo) GetPlayHost() string {
	if x != nil && x.PlayHost != nil {
		return *x.PlayHost
	}
	return ""
}

func (x *LobbySvrInfo) GetPlayPort() int32 {
	if x != nil && x.PlayPort != nil {
		return *x.PlayPort
	}
	return 0
}

func (x *LobbySvrInfo) GetNameLoc() map[int32]string {
	if x != nil {
		return x.NameLoc
	}
	return nil
}

func (x *LobbySvrInfo) GetUnknownField_7() int64 {
	if x != nil && x.UnknownField_7 != nil {
		return *x.UnknownField_7
	}
	return 0
}

func (x *LobbySvrInfo) GetUnknownField_8() int64 {
	if x != nil && x.UnknownField_8 != nil {
		return *x.UnknownField_8
	}
	return 0
}

type PlayerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId         *int64        `protobuf:"varint,1,req,name=player_id,json=playerId" json:"player_id,omitempty"`
	Name             *string       `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	NameNative       *string       `protobuf:"bytes,3,opt,name=name_native,json=nameNative" json:"name_native,omitempty"`
	Rank             *Rank         `protobuf:"varint,4,opt,name=rank,enum=openfoxwq.Rank" json:"rank,omitempty"`
	Country          *Country      `protobuf:"varint,5,opt,name=country,enum=openfoxwq.Country" json:"country,omitempty"`
	ClubId           *int64        `protobuf:"varint,6,opt,name=club_id,json=clubId" json:"club_id,omitempty"`
	AcceptingMatches *bool         `protobuf:"varint,7,opt,name=accepting_matches,json=acceptingMatches" json:"accepting_matches,omitempty"`
	Status           *PlayerStatus `protobuf:"varint,9,opt,name=status,enum=openfoxwq.PlayerStatus" json:"status,omitempty"`
	RankedWins       *int64        `protobuf:"varint,10,opt,name=ranked_wins,json=rankedWins" json:"ranked_wins,omitempty"`
	RankedLosses     *int64        `protobuf:"varint,11,opt,name=ranked_losses,json=rankedLosses" json:"ranked_losses,omitempty"`
	Foxcoin          *int64        `protobuf:"varint,21,opt,name=foxcoin" json:"foxcoin,omitempty"`
	// Unknown fields
	UnknownField_8  *int64 `protobuf:"varint,8,opt,name=unknown_field_8,json=unknownField8" json:"unknown_field_8,omitempty"`     // rating or wr
	UnknownField_13 *int64 `protobuf:"varint,13,opt,name=unknown_field_13,json=unknownField13" json:"unknown_field_13,omitempty"` // rating or wr
}

func (x *PlayerInfo) Reset() {
	*x = PlayerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerInfo) ProtoMessage() {}

func (x *PlayerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerInfo.ProtoReflect.Descriptor instead.
func (*PlayerInfo) Descriptor() ([]byte, []int) {
	return file_proto_common_proto_rawDescGZIP(), []int{3}
}

func (x *PlayerInfo) GetPlayerId() int64 {
	if x != nil && x.PlayerId != nil {
		return *x.PlayerId
	}
	return 0
}

func (x *PlayerInfo) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *PlayerInfo) GetNameNative() string {
	if x != nil && x.NameNative != nil {
		return *x.NameNative
	}
	return ""
}

func (x *PlayerInfo) GetRank() Rank {
	if x != nil && x.Rank != nil {
		return *x.Rank
	}
	return Rank_RANK_18K
}

func (x *PlayerInfo) GetCountry() Country {
	if x != nil && x.Country != nil {
		return *x.Country
	}
	return Country_UNKNOWN
}

func (x *PlayerInfo) GetClubId() int64 {
	if x != nil && x.ClubId != nil {
		return *x.ClubId
	}
	return 0
}

func (x *PlayerInfo) GetAcceptingMatches() bool {
	if x != nil && x.AcceptingMatches != nil {
		return *x.AcceptingMatches
	}
	return false
}

func (x *PlayerInfo) GetStatus() PlayerStatus {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return PlayerStatus_PSTATUS_IDLE
}

func (x *PlayerInfo) GetRankedWins() int64 {
	if x != nil && x.RankedWins != nil {
		return *x.RankedWins
	}
	return 0
}

func (x *PlayerInfo) GetRankedLosses() int64 {
	if x != nil && x.RankedLosses != nil {
		return *x.RankedLosses
	}
	return 0
}

func (x *PlayerInfo) GetFoxcoin() int64 {
	if x != nil && x.Foxcoin != nil {
		return *x.Foxcoin
	}
	return 0
}

func (x *PlayerInfo) GetUnknownField_8() int64 {
	if x != nil && x.UnknownField_8 != nil {
		return *x.UnknownField_8
	}
	return 0
}

func (x *PlayerInfo) GetUnknownField_13() int64 {
	if x != nil && x.UnknownField_13 != nil {
		return *x.UnknownField_13
	}
	return 0
}

type MatchSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerIdFirst  *int64 `protobuf:"varint,1,req,name=player_id_first,json=playerIdFirst" json:"player_id_first,omitempty"`
	PlayerIdSecond *int64 `protobuf:"varint,2,req,name=player_id_second,json=playerIdSecond" json:"player_id_second,omitempty"`
	Handicap       *int64 `protobuf:"varint,4,opt,name=handicap" json:"handicap,omitempty"`
	Komi           *int64 `protobuf:"varint,5,opt,name=komi" json:"komi,omitempty"`
	MainTimeSec    *int64 `protobuf:"varint,7,req,name=main_time_sec,json=mainTimeSec" json:"main_time_sec,omitempty"`
	ByoyomiTimeSec *int64 `protobuf:"varint,8,req,name=byoyomi_time_sec,json=byoyomiTimeSec" json:"byoyomi_time_sec,omitempty"`
	ByoyomiPeriods *int64 `protobuf:"varint,9,req,name=byoyomi_periods,json=byoyomiPeriods" json:"byoyomi_periods,omitempty"`
	ChineseRules   *bool  `protobuf:"varint,10,opt,name=chinese_rules,json=chineseRules" json:"chinese_rules,omitempty"`
	BoardSize      *int64 `protobuf:"varint,16,req,name=board_size,json=boardSize" json:"board_size,omitempty"`
}

func (x *MatchSettings) Reset() {
	*x = MatchSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchSettings) ProtoMessage() {}

func (x *MatchSettings) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchSettings.ProtoReflect.Descriptor instead.
func (*MatchSettings) Descriptor() ([]byte, []int) {
	return file_proto_common_proto_rawDescGZIP(), []int{4}
}

func (x *MatchSettings) GetPlayerIdFirst() int64 {
	if x != nil && x.PlayerIdFirst != nil {
		return *x.PlayerIdFirst
	}
	return 0
}

func (x *MatchSettings) GetPlayerIdSecond() int64 {
	if x != nil && x.PlayerIdSecond != nil {
		return *x.PlayerIdSecond
	}
	return 0
}

func (x *MatchSettings) GetHandicap() int64 {
	if x != nil && x.Handicap != nil {
		return *x.Handicap
	}
	return 0
}

func (x *MatchSettings) GetKomi() int64 {
	if x != nil && x.Komi != nil {
		return *x.Komi
	}
	return 0
}

func (x *MatchSettings) GetMainTimeSec() int64 {
	if x != nil && x.MainTimeSec != nil {
		return *x.MainTimeSec
	}
	return 0
}

func (x *MatchSettings) GetByoyomiTimeSec() int64 {
	if x != nil && x.ByoyomiTimeSec != nil {
		return *x.ByoyomiTimeSec
	}
	return 0
}

func (x *MatchSettings) GetByoyomiPeriods() int64 {
	if x != nil && x.ByoyomiPeriods != nil {
		return *x.ByoyomiPeriods
	}
	return 0
}

func (x *MatchSettings) GetChineseRules() bool {
	if x != nil && x.ChineseRules != nil {
		return *x.ChineseRules
	}
	return false
}

func (x *MatchSettings) GetBoardSize() int64 {
	if x != nil && x.BoardSize != nil {
		return *x.BoardSize
	}
	return 0
}

type RoomId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id_1 *int64 `protobuf:"varint,1,opt,name=id_1,json=id1" json:"id_1,omitempty"`
	Id_2 *int64 `protobuf:"varint,2,opt,name=id_2,json=id2" json:"id_2,omitempty"`
	Id_3 *int64 `protobuf:"varint,3,opt,name=id_3,json=id3" json:"id_3,omitempty"`
	Id_4 *int64 `protobuf:"varint,4,opt,name=id_4,json=id4" json:"id_4,omitempty"`
}

func (x *RoomId) Reset() {
	*x = RoomId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomId) ProtoMessage() {}

func (x *RoomId) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomId.ProtoReflect.Descriptor instead.
func (*RoomId) Descriptor() ([]byte, []int) {
	return file_proto_common_proto_rawDescGZIP(), []int{5}
}

func (x *RoomId) GetId_1() int64 {
	if x != nil && x.Id_1 != nil {
		return *x.Id_1
	}
	return 0
}

func (x *RoomId) GetId_2() int64 {
	if x != nil && x.Id_2 != nil {
		return *x.Id_2
	}
	return 0
}

func (x *RoomId) GetId_3() int64 {
	if x != nil && x.Id_3 != nil {
		return *x.Id_3
	}
	return 0
}

func (x *RoomId) GetId_4() int64 {
	if x != nil && x.Id_4 != nil {
		return *x.Id_4
	}
	return 0
}

type BroadcastInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              *int64                             `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Type            *BroadcastInfo_BroadcastType       `protobuf:"varint,3,req,name=type,enum=openfoxwq.BroadcastInfo_BroadcastType" json:"type,omitempty"`
	State           *BroadcastInfo_BroadcastState      `protobuf:"varint,8,opt,name=state,enum=openfoxwq.BroadcastInfo_BroadcastState" json:"state,omitempty"`
	Broadcaster     *string                            `protobuf:"bytes,9,opt,name=broadcaster" json:"broadcaster,omitempty"`
	OnlineCount     *int64                             `protobuf:"varint,10,req,name=online_count,json=onlineCount" json:"online_count,omitempty"`
	PlayerIdBlack   *int64                             `protobuf:"varint,11,req,name=player_id_black,json=playerIdBlack" json:"player_id_black,omitempty"`
	PlayerIdWhite   *int64                             `protobuf:"varint,12,req,name=player_id_white,json=playerIdWhite" json:"player_id_white,omitempty"`
	PlayerInfoBlack *BroadcastInfo_BroadcastPlayerInfo `protobuf:"bytes,13,req,name=player_info_black,json=playerInfoBlack" json:"player_info_black,omitempty"`
	PlayerInfoWhite *BroadcastInfo_BroadcastPlayerInfo `protobuf:"bytes,14,req,name=player_info_white,json=playerInfoWhite" json:"player_info_white,omitempty"`
}

func (x *BroadcastInfo) Reset() {
	*x = BroadcastInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BroadcastInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BroadcastInfo) ProtoMessage() {}

func (x *BroadcastInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BroadcastInfo.ProtoReflect.Descriptor instead.
func (*BroadcastInfo) Descriptor() ([]byte, []int) {
	return file_proto_common_proto_rawDescGZIP(), []int{6}
}

func (x *BroadcastInfo) GetId() int64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *BroadcastInfo) GetType() BroadcastInfo_BroadcastType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return BroadcastInfo_RT_UNKNOWN
}

func (x *BroadcastInfo) GetState() BroadcastInfo_BroadcastState {
	if x != nil && x.State != nil {
		return *x.State
	}
	return BroadcastInfo_RS_UNKNOWN
}

func (x *BroadcastInfo) GetBroadcaster() string {
	if x != nil && x.Broadcaster != nil {
		return *x.Broadcaster
	}
	return ""
}

func (x *BroadcastInfo) GetOnlineCount() int64 {
	if x != nil && x.OnlineCount != nil {
		return *x.OnlineCount
	}
	return 0
}

func (x *BroadcastInfo) GetPlayerIdBlack() int64 {
	if x != nil && x.PlayerIdBlack != nil {
		return *x.PlayerIdBlack
	}
	return 0
}

func (x *BroadcastInfo) GetPlayerIdWhite() int64 {
	if x != nil && x.PlayerIdWhite != nil {
		return *x.PlayerIdWhite
	}
	return 0
}

func (x *BroadcastInfo) GetPlayerInfoBlack() *BroadcastInfo_BroadcastPlayerInfo {
	if x != nil {
		return x.PlayerInfoBlack
	}
	return nil
}

func (x *BroadcastInfo) GetPlayerInfoWhite() *BroadcastInfo_BroadcastPlayerInfo {
	if x != nil {
		return x.PlayerInfoWhite
	}
	return nil
}

type ProxyLineInfo_ProxyAddressInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host1 *string `protobuf:"bytes,1,req,name=host1" json:"host1,omitempty"`
	Port1 *int64  `protobuf:"varint,2,req,name=port1" json:"port1,omitempty"`
	Host2 *string `protobuf:"bytes,3,req,name=host2" json:"host2,omitempty"`
	Port2 *int64  `protobuf:"varint,4,req,name=port2" json:"port2,omitempty"`
}

func (x *ProxyLineInfo_ProxyAddressInfo) Reset() {
	*x = ProxyLineInfo_ProxyAddressInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProxyLineInfo_ProxyAddressInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProxyLineInfo_ProxyAddressInfo) ProtoMessage() {}

func (x *ProxyLineInfo_ProxyAddressInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProxyLineInfo_ProxyAddressInfo.ProtoReflect.Descriptor instead.
func (*ProxyLineInfo_ProxyAddressInfo) Descriptor() ([]byte, []int) {
	return file_proto_common_proto_rawDescGZIP(), []int{1, 0}
}

func (x *ProxyLineInfo_ProxyAddressInfo) GetHost1() string {
	if x != nil && x.Host1 != nil {
		return *x.Host1
	}
	return ""
}

func (x *ProxyLineInfo_ProxyAddressInfo) GetPort1() int64 {
	if x != nil && x.Port1 != nil {
		return *x.Port1
	}
	return 0
}

func (x *ProxyLineInfo_ProxyAddressInfo) GetHost2() string {
	if x != nil && x.Host2 != nil {
		return *x.Host2
	}
	return ""
}

func (x *ProxyLineInfo_ProxyAddressInfo) GetPort2() int64 {
	if x != nil && x.Port2 != nil {
		return *x.Port2
	}
	return 0
}

type BroadcastInfo_BroadcastPlayerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    *string  `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	NameAlt *string  `protobuf:"bytes,2,opt,name=name_alt,json=nameAlt" json:"name_alt,omitempty"`
	Rank    *Rank    `protobuf:"varint,3,opt,name=rank,enum=openfoxwq.Rank" json:"rank,omitempty"`
	Country *Country `protobuf:"varint,4,opt,name=country,enum=openfoxwq.Country" json:"country,omitempty"`
}

func (x *BroadcastInfo_BroadcastPlayerInfo) Reset() {
	*x = BroadcastInfo_BroadcastPlayerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BroadcastInfo_BroadcastPlayerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BroadcastInfo_BroadcastPlayerInfo) ProtoMessage() {}

func (x *BroadcastInfo_BroadcastPlayerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BroadcastInfo_BroadcastPlayerInfo.ProtoReflect.Descriptor instead.
func (*BroadcastInfo_BroadcastPlayerInfo) Descriptor() ([]byte, []int) {
	return file_proto_common_proto_rawDescGZIP(), []int{6, 0}
}

func (x *BroadcastInfo_BroadcastPlayerInfo) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *BroadcastInfo_BroadcastPlayerInfo) GetNameAlt() string {
	if x != nil && x.NameAlt != nil {
		return *x.NameAlt
	}
	return ""
}

func (x *BroadcastInfo_BroadcastPlayerInfo) GetRank() Rank {
	if x != nil && x.Rank != nil {
		return *x.Rank
	}
	return Rank_RANK_18K
}

func (x *BroadcastInfo_BroadcastPlayerInfo) GetCountry() Country {
	if x != nil && x.Country != nil {
		return *x.Country
	}
	return Country_UNKNOWN
}

var File_proto_common_proto protoreflect.FileDescriptor

var file_proto_common_proto_rawDesc = []byte{
	0x0a, 0x12, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71, 0x22,
	0xb4, 0x01, 0x0a, 0x0b, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x1a, 0x0a, 0x08, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x31, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x03, 0x52, 0x08, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x31, 0x12, 0x1a, 0x0a, 0x08, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x32, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x08, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x32, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6c, 0x6c, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x55, 0x72, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x71, 0x67, 0x69,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x71, 0x67, 0x69, 0x12, 0x19, 0x0a, 0x08, 0x71,
	0x67, 0x69, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x71,
	0x67, 0x69, 0x48, 0x61, 0x73, 0x68, 0x22, 0xf3, 0x01, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x78, 0x79,
	0x4c, 0x69, 0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x4c, 0x0a, 0x0c, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66,
	0x6f, 0x78, 0x77, 0x71, 0x2e, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x4c, 0x69, 0x6e, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f,
	0x1a, 0x6a, 0x0a, 0x10, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x68, 0x6f, 0x73, 0x74, 0x31, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x09, 0x52, 0x05, 0x68, 0x6f, 0x73, 0x74, 0x31, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x6f,
	0x72, 0x74, 0x31, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x05, 0x70, 0x6f, 0x72, 0x74, 0x31,
	0x12, 0x14, 0x0a, 0x05, 0x68, 0x6f, 0x73, 0x74, 0x32, 0x18, 0x03, 0x20, 0x02, 0x28, 0x09, 0x52,
	0x05, 0x68, 0x6f, 0x73, 0x74, 0x32, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x6f, 0x72, 0x74, 0x32, 0x18,
	0x04, 0x20, 0x02, 0x28, 0x03, 0x52, 0x05, 0x70, 0x6f, 0x72, 0x74, 0x32, 0x22, 0xe9, 0x05, 0x0a,
	0x0c, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x53, 0x76, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x68,
	0x6f, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x62, 0x72, 0x6f, 0x61, 0x64,
	0x63, 0x61, 0x73, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x61,
	0x64, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0d, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x6e, 0x75, 0x6d, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6e, 0x75, 0x6d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73,
	0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x75, 0x6d, 0x5f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6e, 0x75, 0x6d, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65,
	0x73, 0x12, 0x24, 0x0a, 0x0e, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x68, 0x6f, 0x73,
	0x74, 0x5f, 0x31, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x75, 0x6e, 0x6b, 0x6e, 0x6f,
	0x77, 0x6e, 0x48, 0x6f, 0x73, 0x74, 0x31, 0x12, 0x24, 0x0a, 0x0e, 0x75, 0x6e, 0x6b, 0x6e, 0x6f,
	0x77, 0x6e, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x31, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0c, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x50, 0x6f, 0x72, 0x74, 0x31, 0x12, 0x24, 0x0a,
	0x0e, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x32, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x48, 0x6f,
	0x73, 0x74, 0x32, 0x12, 0x24, 0x0a, 0x0e, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x70,
	0x6f, 0x72, 0x74, 0x5f, 0x32, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x75, 0x6e, 0x6b,
	0x6e, 0x6f, 0x77, 0x6e, 0x50, 0x6f, 0x72, 0x74, 0x32, 0x12, 0x24, 0x0a, 0x0e, 0x75, 0x6e, 0x6b,
	0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x33, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x48, 0x6f, 0x73, 0x74, 0x33, 0x12,
	0x24, 0x0a, 0x0e, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x5f,
	0x33, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e,
	0x50, 0x6f, 0x72, 0x74, 0x33, 0x12, 0x24, 0x0a, 0x0e, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e,
	0x5f, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x34, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x75,
	0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x48, 0x6f, 0x73, 0x74, 0x34, 0x12, 0x24, 0x0a, 0x0e, 0x75,
	0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x34, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0c, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x50, 0x6f, 0x72, 0x74,
	0x34, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x15,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x16, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x3f, 0x0a, 0x08, 0x6e,
	0x61, 0x6d, 0x65, 0x5f, 0x6c, 0x6f, 0x63, 0x18, 0x17, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71, 0x2e, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x53,
	0x76, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x4c, 0x6f, 0x63, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x07, 0x6e, 0x61, 0x6d, 0x65, 0x4c, 0x6f, 0x63, 0x12, 0x26, 0x0a, 0x0f,
	0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x37, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x37, 0x12, 0x26, 0x0a, 0x0f, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x38, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x75,
	0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x38, 0x1a, 0x3a, 0x0a, 0x0c,
	0x4e, 0x61, 0x6d, 0x65, 0x4c, 0x6f, 0x63, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xda, 0x03, 0x0a, 0x0a, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x61, 0x6d, 0x65,
	0x5f, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e,
	0x61, 0x6d, 0x65, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x12, 0x23, 0x0a, 0x04, 0x72, 0x61, 0x6e,
	0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f,
	0x78, 0x77, 0x71, 0x2e, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x12, 0x2c,
	0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x12, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71, 0x2e, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x17, 0x0a, 0x07,
	0x63, 0x6c, 0x75, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x63,
	0x6c, 0x75, 0x62, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x11, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x69,
	0x6e, 0x67, 0x5f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x10, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x74, 0x63, 0x68,
	0x65, 0x73, 0x12, 0x2f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x17, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71, 0x2e, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x61, 0x6e, 0x6b, 0x65, 0x64, 0x5f, 0x77, 0x69,
	0x6e, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x61, 0x6e, 0x6b, 0x65, 0x64,
	0x57, 0x69, 0x6e, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x61, 0x6e, 0x6b, 0x65, 0x64, 0x5f, 0x6c,
	0x6f, 0x73, 0x73, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x72, 0x61, 0x6e,
	0x6b, 0x65, 0x64, 0x4c, 0x6f, 0x73, 0x73, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x6f, 0x78,
	0x63, 0x6f, 0x69, 0x6e, 0x18, 0x15, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x66, 0x6f, 0x78, 0x63,
	0x6f, 0x69, 0x6e, 0x12, 0x26, 0x0a, 0x0f, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x5f, 0x38, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x75, 0x6e,
	0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x38, 0x12, 0x28, 0x0a, 0x10, 0x75,
	0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x31, 0x33, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x31, 0x33, 0x22, 0xcc, 0x02, 0x0a, 0x0d, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x5f, 0x66, 0x69, 0x72, 0x73, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03,
	0x52, 0x0d, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x46, 0x69, 0x72, 0x73, 0x74, 0x12,
	0x28, 0x0a, 0x10, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x5f, 0x73, 0x65, 0x63,
	0x6f, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x0e, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x49, 0x64, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x61, 0x6e,
	0x64, 0x69, 0x63, 0x61, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x68, 0x61, 0x6e,
	0x64, 0x69, 0x63, 0x61, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x6f, 0x6d, 0x69, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x6b, 0x6f, 0x6d, 0x69, 0x12, 0x22, 0x0a, 0x0d, 0x6d, 0x61, 0x69,
	0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x65, 0x63, 0x18, 0x07, 0x20, 0x02, 0x28, 0x03,
	0x52, 0x0b, 0x6d, 0x61, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x63, 0x12, 0x28, 0x0a,
	0x10, 0x62, 0x79, 0x6f, 0x79, 0x6f, 0x6d, 0x69, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x65,
	0x63, 0x18, 0x08, 0x20, 0x02, 0x28, 0x03, 0x52, 0x0e, 0x62, 0x79, 0x6f, 0x79, 0x6f, 0x6d, 0x69,
	0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x63, 0x12, 0x27, 0x0a, 0x0f, 0x62, 0x79, 0x6f, 0x79, 0x6f,
	0x6d, 0x69, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x73, 0x18, 0x09, 0x20, 0x02, 0x28, 0x03,
	0x52, 0x0e, 0x62, 0x79, 0x6f, 0x79, 0x6f, 0x6d, 0x69, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x73,
	0x12, 0x23, 0x0a, 0x0d, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x65, 0x5f, 0x72, 0x75, 0x6c, 0x65,
	0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x65,
	0x52, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x10, 0x20, 0x02, 0x28, 0x03, 0x52, 0x09, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x53, 0x69, 0x7a, 0x65, 0x22, 0x54, 0x0a, 0x06, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x11,
	0x0a, 0x04, 0x69, 0x64, 0x5f, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64,
	0x31, 0x12, 0x11, 0x0a, 0x04, 0x69, 0x64, 0x5f, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x69, 0x64, 0x32, 0x12, 0x11, 0x0a, 0x04, 0x69, 0x64, 0x5f, 0x33, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x33, 0x12, 0x11, 0x0a, 0x04, 0x69, 0x64, 0x5f, 0x34, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x34, 0x22, 0xe6, 0x06, 0x0a, 0x0d, 0x42,
	0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3a, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71, 0x2e, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x3d, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f,
	0x78, 0x77, 0x71, 0x2e, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x2e, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x72, 0x6f, 0x61, 0x64,
	0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x72,
	0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x6e, 0x6c,
	0x69, 0x6e, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x02, 0x28, 0x03, 0x52,
	0x0b, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0f,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x5f, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x18,
	0x0b, 0x20, 0x02, 0x28, 0x03, 0x52, 0x0d, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x42,
	0x6c, 0x61, 0x63, 0x6b, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x5f, 0x77, 0x68, 0x69, 0x74, 0x65, 0x18, 0x0c, 0x20, 0x02, 0x28, 0x03, 0x52, 0x0d, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x57, 0x68, 0x69, 0x74, 0x65, 0x12, 0x58, 0x0a, 0x11,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x62, 0x6c, 0x61, 0x63,
	0x6b, 0x18, 0x0d, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f,
	0x78, 0x77, 0x71, 0x2e, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x2e, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x12, 0x58, 0x0a, 0x11, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x77, 0x68, 0x69, 0x74, 0x65, 0x18, 0x0e, 0x20, 0x02, 0x28,
	0x0b, 0x32, 0x2c, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71, 0x2e, 0x42, 0x72,
	0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x42, 0x72, 0x6f, 0x61,
	0x64, 0x63, 0x61, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x0f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x57, 0x68, 0x69, 0x74, 0x65,
	0x1a, 0x97, 0x01, 0x0a, 0x13, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x61, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6e, 0x61, 0x6d, 0x65, 0x41, 0x6c, 0x74, 0x12, 0x23, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x78, 0x77,
	0x71, 0x2e, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x12, 0x2c, 0x0a, 0x07,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x22, 0x67, 0x0a, 0x0d, 0x42, 0x72,
	0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x52,
	0x54, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x52,
	0x54, 0x5f, 0x4d, 0x41, 0x54, 0x43, 0x48, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x52, 0x54, 0x5f,
	0x42, 0x52, 0x4f, 0x41, 0x44, 0x43, 0x41, 0x53, 0x54, 0x10, 0x04, 0x12, 0x11, 0x0a, 0x0d, 0x52,
	0x54, 0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x45, 0x4e, 0x54, 0x41, 0x52, 0x59, 0x10, 0x05, 0x12, 0x13,
	0x0a, 0x0f, 0x52, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4d, 0x50, 0x49, 0x4f, 0x4e, 0x53, 0x48, 0x49,
	0x50, 0x10, 0x06, 0x22, 0x7e, 0x0a, 0x0e, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x52, 0x53, 0x5f, 0x55, 0x4e, 0x4b, 0x4e,
	0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x52, 0x53, 0x5f, 0x4f, 0x50, 0x45, 0x4e,
	0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x52, 0x53, 0x5f, 0x31, 0x50, 0x45, 0x52,
	0x49, 0x4f, 0x44, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x52, 0x53, 0x5f, 0x4d, 0x49, 0x44, 0x44,
	0x4c, 0x45, 0x47, 0x41, 0x4d, 0x45, 0x10, 0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x52, 0x53, 0x5f, 0x45,
	0x4e, 0x44, 0x47, 0x41, 0x4d, 0x45, 0x10, 0x04, 0x12, 0x0a, 0x0a, 0x06, 0x52, 0x53, 0x5f, 0x45,
	0x4e, 0x44, 0x10, 0x05, 0x12, 0x0d, 0x0a, 0x09, 0x52, 0x53, 0x5f, 0x52, 0x45, 0x56, 0x49, 0x45,
	0x57, 0x10, 0x06, 0x2a, 0x33, 0x0a, 0x05, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x0c, 0x0a, 0x08,
	0x43, 0x4f, 0x4c, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x4f,
	0x4c, 0x5f, 0x42, 0x4c, 0x41, 0x43, 0x4b, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x4f, 0x4c,
	0x5f, 0x57, 0x48, 0x49, 0x54, 0x45, 0x10, 0x02, 0x2a, 0xff, 0x03, 0x0a, 0x04, 0x52, 0x61, 0x6e,
	0x6b, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x41, 0x4e, 0x4b, 0x5f, 0x31, 0x38, 0x4b, 0x10, 0x00, 0x12,
	0x0c, 0x0a, 0x08, 0x52, 0x41, 0x4e, 0x4b, 0x5f, 0x31, 0x37, 0x4b, 0x10, 0x01, 0x12, 0x0c, 0x0a,
	0x08, 0x52, 0x41, 0x4e, 0x4b, 0x5f, 0x31, 0x36, 0x4b, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x52,
	0x41, 0x4e, 0x4b, 0x5f, 0x31, 0x35, 0x4b, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x41, 0x4e,
	0x4b, 0x5f, 0x31, 0x34, 0x4b, 0x10, 0x04, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x41, 0x4e, 0x4b, 0x5f,
	0x31, 0x33, 0x4b, 0x10, 0x05, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x41, 0x4e, 0x4b, 0x5f, 0x31, 0x32,
	0x4b, 0x10, 0x06, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x41, 0x4e, 0x4b, 0x5f, 0x31, 0x31, 0x4b, 0x10,
	0x07, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x41, 0x4e, 0x4b, 0x5f, 0x31, 0x30, 0x4b, 0x10, 0x08, 0x12,
	0x0b, 0x0a, 0x07, 0x52, 0x41, 0x4e, 0x4b, 0x5f, 0x39, 0x4b, 0x10, 0x09, 0x12, 0x0b, 0x0a, 0x07,
	0x52, 0x41, 0x4e, 0x4b, 0x5f, 0x38, 0x4b, 0x10, 0x0a, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x41, 0x4e,
	0x4b, 0x5f, 0x37, 0x4b, 0x10, 0x0b, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x41, 0x4e, 0x4b, 0x5f, 0x36,
	0x4b, 0x10, 0x0c, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x41, 0x4e, 0x4b, 0x5f, 0x35, 0x4b, 0x10, 0x0d,
	0x12, 0x0b, 0x0a, 0x07, 0x52, 0x41, 0x4e, 0x4b, 0x5f, 0x34, 0x4b, 0x10, 0x0e, 0x12, 0x0b, 0x0a,
	0x07, 0x52, 0x41, 0x4e, 0x4b, 0x5f, 0x33, 0x4b, 0x10, 0x0f, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x41,
	0x4e, 0x4b, 0x5f, 0x32, 0x4b, 0x10, 0x10, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x41, 0x4e, 0x4b, 0x5f,
	0x31, 0x4b, 0x10, 0x11, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x41, 0x4e, 0x4b, 0x5f, 0x31, 0x44, 0x10,
	0x12, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x41, 0x4e, 0x4b, 0x5f, 0x32, 0x44, 0x10, 0x13, 0x12, 0x0b,
	0x0a, 0x07, 0x52, 0x41, 0x4e, 0x4b, 0x5f, 0x33, 0x44, 0x10, 0x14, 0x12, 0x0b, 0x0a, 0x07, 0x52,
	0x41, 0x4e, 0x4b, 0x5f, 0x34, 0x44, 0x10, 0x15, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x41, 0x4e, 0x4b,
	0x5f, 0x35, 0x44, 0x10, 0x16, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x41, 0x4e, 0x4b, 0x5f, 0x36, 0x44,
	0x10, 0x17, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x41, 0x4e, 0x4b, 0x5f, 0x37, 0x44, 0x10, 0x18, 0x12,
	0x0b, 0x0a, 0x07, 0x52, 0x41, 0x4e, 0x4b, 0x5f, 0x38, 0x44, 0x10, 0x19, 0x12, 0x0b, 0x0a, 0x07,
	0x52, 0x41, 0x4e, 0x4b, 0x5f, 0x39, 0x44, 0x10, 0x1a, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x41, 0x4e,
	0x4b, 0x5f, 0x31, 0x30, 0x44, 0x10, 0x1b, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x41, 0x4e, 0x4b, 0x5f,
	0x31, 0x50, 0x10, 0x64, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x41, 0x4e, 0x4b, 0x5f, 0x32, 0x50, 0x10,
	0x65, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x41, 0x4e, 0x4b, 0x5f, 0x33, 0x50, 0x10, 0x66, 0x12, 0x0b,
	0x0a, 0x07, 0x52, 0x41, 0x4e, 0x4b, 0x5f, 0x34, 0x50, 0x10, 0x67, 0x12, 0x0b, 0x0a, 0x07, 0x52,
	0x41, 0x4e, 0x4b, 0x5f, 0x35, 0x50, 0x10, 0x68, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x41, 0x4e, 0x4b,
	0x5f, 0x36, 0x50, 0x10, 0x69, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x41, 0x4e, 0x4b, 0x5f, 0x37, 0x50,
	0x10, 0x6a, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x41, 0x4e, 0x4b, 0x5f, 0x38, 0x50, 0x10, 0x6b, 0x12,
	0x0b, 0x0a, 0x07, 0x52, 0x41, 0x4e, 0x4b, 0x5f, 0x39, 0x50, 0x10, 0x6c, 0x12, 0x0c, 0x0a, 0x08,
	0x52, 0x41, 0x4e, 0x4b, 0x5f, 0x31, 0x30, 0x50, 0x10, 0x6d, 0x2a, 0xe6, 0x02, 0x0a, 0x07, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57,
	0x4e, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x55, 0x53, 0x41, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06,
	0x52, 0x55, 0x53, 0x53, 0x49, 0x41, 0x10, 0x07, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x4f, 0x55, 0x54,
	0x48, 0x41, 0x46, 0x52, 0x49, 0x43, 0x41, 0x10, 0x1b, 0x12, 0x0f, 0x0a, 0x0b, 0x4e, 0x45, 0x54,
	0x48, 0x45, 0x52, 0x4c, 0x41, 0x4e, 0x44, 0x53, 0x10, 0x1f, 0x12, 0x0a, 0x0a, 0x06, 0x47, 0x52,
	0x45, 0x45, 0x43, 0x45, 0x10, 0x1e, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x52, 0x41, 0x4e, 0x43, 0x45,
	0x10, 0x21, 0x12, 0x0b, 0x0a, 0x07, 0x48, 0x55, 0x4e, 0x47, 0x41, 0x52, 0x59, 0x10, 0x24, 0x12,
	0x09, 0x0a, 0x05, 0x49, 0x54, 0x41, 0x4c, 0x59, 0x10, 0x27, 0x12, 0x06, 0x0a, 0x02, 0x55, 0x4b,
	0x10, 0x2c, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x57, 0x45, 0x44, 0x45, 0x4e, 0x10, 0x2e, 0x12, 0x0b,
	0x0a, 0x07, 0x47, 0x45, 0x52, 0x4d, 0x41, 0x4e, 0x59, 0x10, 0x31, 0x12, 0x09, 0x0a, 0x05, 0x43,
	0x48, 0x49, 0x4c, 0x45, 0x10, 0x38, 0x12, 0x0f, 0x0a, 0x0b, 0x50, 0x48, 0x49, 0x4c, 0x49, 0x50,
	0x50, 0x49, 0x4e, 0x45, 0x53, 0x10, 0x3f, 0x12, 0x0e, 0x0a, 0x0a, 0x4e, 0x45, 0x57, 0x5a, 0x45,
	0x41, 0x4c, 0x41, 0x4e, 0x44, 0x10, 0x40, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x49, 0x4e, 0x47, 0x41,
	0x50, 0x4f, 0x52, 0x45, 0x10, 0x41, 0x12, 0x0c, 0x0a, 0x08, 0x54, 0x48, 0x41, 0x49, 0x4c, 0x41,
	0x4e, 0x44, 0x10, 0x42, 0x12, 0x09, 0x0a, 0x05, 0x4a, 0x41, 0x50, 0x41, 0x4e, 0x10, 0x51, 0x12,
	0x0a, 0x0a, 0x06, 0x54, 0x41, 0x49, 0x57, 0x41, 0x4e, 0x10, 0x53, 0x12, 0x09, 0x0a, 0x05, 0x4b,
	0x4f, 0x52, 0x45, 0x41, 0x10, 0x52, 0x12, 0x09, 0x0a, 0x05, 0x43, 0x48, 0x49, 0x4e, 0x41, 0x10,
	0x56, 0x12, 0x0c, 0x0a, 0x07, 0x41, 0x4c, 0x42, 0x41, 0x4e, 0x49, 0x41, 0x10, 0xe3, 0x02, 0x12,
	0x0c, 0x0a, 0x07, 0x42, 0x45, 0x4c, 0x41, 0x52, 0x55, 0x53, 0x10, 0xf7, 0x02, 0x12, 0x0c, 0x0a,
	0x07, 0x55, 0x4b, 0x52, 0x41, 0x49, 0x4e, 0x45, 0x10, 0xfc, 0x02, 0x12, 0x0d, 0x0a, 0x08, 0x48,
	0x4f, 0x4e, 0x47, 0x4b, 0x4f, 0x4e, 0x47, 0x10, 0xd4, 0x06, 0x12, 0x0a, 0x0a, 0x05, 0x4d, 0x41,
	0x43, 0x41, 0x55, 0x10, 0xd5, 0x06, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x41, 0x4e, 0x41, 0x44, 0x41,
	0x10, 0xe7, 0x56, 0x2a, 0x46, 0x0a, 0x0c, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x0c, 0x50, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x49,
	0x44, 0x4c, 0x45, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x50, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x4d, 0x41, 0x54, 0x43, 0x48, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x50, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x57, 0x41, 0x54, 0x43, 0x48, 0x10, 0x02, 0x42, 0x25, 0x5a, 0x23, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x6c, 0x65, 0x36, 0x34, 0x62,
	0x69, 0x74, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f,
}

var (
	file_proto_common_proto_rawDescOnce sync.Once
	file_proto_common_proto_rawDescData = file_proto_common_proto_rawDesc
)

func file_proto_common_proto_rawDescGZIP() []byte {
	file_proto_common_proto_rawDescOnce.Do(func() {
		file_proto_common_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_common_proto_rawDescData)
	})
	return file_proto_common_proto_rawDescData
}

var file_proto_common_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_proto_common_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_proto_common_proto_goTypes = []interface{}{
	(Color)(0),                                // 0: openfoxwq.Color
	(Rank)(0),                                 // 1: openfoxwq.Rank
	(Country)(0),                              // 2: openfoxwq.Country
	(PlayerStatus)(0),                         // 3: openfoxwq.PlayerStatus
	(BroadcastInfo_BroadcastType)(0),          // 4: openfoxwq.BroadcastInfo.BroadcastType
	(BroadcastInfo_BroadcastState)(0),         // 5: openfoxwq.BroadcastInfo.BroadcastState
	(*VersionInfo)(nil),                       // 6: openfoxwq.VersionInfo
	(*ProxyLineInfo)(nil),                     // 7: openfoxwq.ProxyLineInfo
	(*LobbySvrInfo)(nil),                      // 8: openfoxwq.LobbySvrInfo
	(*PlayerInfo)(nil),                        // 9: openfoxwq.PlayerInfo
	(*MatchSettings)(nil),                     // 10: openfoxwq.MatchSettings
	(*RoomId)(nil),                            // 11: openfoxwq.RoomId
	(*BroadcastInfo)(nil),                     // 12: openfoxwq.BroadcastInfo
	(*ProxyLineInfo_ProxyAddressInfo)(nil),    // 13: openfoxwq.ProxyLineInfo.ProxyAddressInfo
	nil,                                       // 14: openfoxwq.LobbySvrInfo.NameLocEntry
	(*BroadcastInfo_BroadcastPlayerInfo)(nil), // 15: openfoxwq.BroadcastInfo.BroadcastPlayerInfo
}
var file_proto_common_proto_depIdxs = []int32{
	13, // 0: openfoxwq.ProxyLineInfo.address_info:type_name -> openfoxwq.ProxyLineInfo.ProxyAddressInfo
	14, // 1: openfoxwq.LobbySvrInfo.name_loc:type_name -> openfoxwq.LobbySvrInfo.NameLocEntry
	1,  // 2: openfoxwq.PlayerInfo.rank:type_name -> openfoxwq.Rank
	2,  // 3: openfoxwq.PlayerInfo.country:type_name -> openfoxwq.Country
	3,  // 4: openfoxwq.PlayerInfo.status:type_name -> openfoxwq.PlayerStatus
	4,  // 5: openfoxwq.BroadcastInfo.type:type_name -> openfoxwq.BroadcastInfo.BroadcastType
	5,  // 6: openfoxwq.BroadcastInfo.state:type_name -> openfoxwq.BroadcastInfo.BroadcastState
	15, // 7: openfoxwq.BroadcastInfo.player_info_black:type_name -> openfoxwq.BroadcastInfo.BroadcastPlayerInfo
	15, // 8: openfoxwq.BroadcastInfo.player_info_white:type_name -> openfoxwq.BroadcastInfo.BroadcastPlayerInfo
	1,  // 9: openfoxwq.BroadcastInfo.BroadcastPlayerInfo.rank:type_name -> openfoxwq.Rank
	2,  // 10: openfoxwq.BroadcastInfo.BroadcastPlayerInfo.country:type_name -> openfoxwq.Country
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_proto_common_proto_init() }
func file_proto_common_proto_init() {
	if File_proto_common_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_common_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VersionInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProxyLineInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LobbySvrInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoomId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BroadcastInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProxyLineInfo_ProxyAddressInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BroadcastInfo_BroadcastPlayerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_common_proto_rawDesc,
			NumEnums:      6,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_common_proto_goTypes,
		DependencyIndexes: file_proto_common_proto_depIdxs,
		EnumInfos:         file_proto_common_proto_enumTypes,
		MessageInfos:      file_proto_common_proto_msgTypes,
	}.Build()
	File_proto_common_proto = out.File
	file_proto_common_proto_rawDesc = nil
	file_proto_common_proto_goTypes = nil
	file_proto_common_proto_depIdxs = nil
}
