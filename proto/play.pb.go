// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: proto/play.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CountingStage int32

const (
	CountingStage_STAGE_UNKNOWN                 CountingStage = 0
	CountingStage_STAGE_AGREE_TO_COUNT          CountingStage = 1
	CountingStage_STAGE_AGREE_WITH_COUNT_RESULT CountingStage = 2
)

// Enum value maps for CountingStage.
var (
	CountingStage_name = map[int32]string{
		0: "STAGE_UNKNOWN",
		1: "STAGE_AGREE_TO_COUNT",
		2: "STAGE_AGREE_WITH_COUNT_RESULT",
	}
	CountingStage_value = map[string]int32{
		"STAGE_UNKNOWN":                 0,
		"STAGE_AGREE_TO_COUNT":          1,
		"STAGE_AGREE_WITH_COUNT_RESULT": 2,
	}
)

func (x CountingStage) Enum() *CountingStage {
	p := new(CountingStage)
	*p = x
	return p
}

func (x CountingStage) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CountingStage) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_play_proto_enumTypes[0].Descriptor()
}

func (CountingStage) Type() protoreflect.EnumType {
	return &file_proto_play_proto_enumTypes[0]
}

func (x CountingStage) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CountingStage) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CountingStage(num)
	return nil
}

// Deprecated: Use CountingStage.Descriptor instead.
func (CountingStage) EnumDescriptor() ([]byte, []int) {
	return file_proto_play_proto_rawDescGZIP(), []int{0}
}

type GetPlayerInfoResponse_ResultsType int32

const (
	GetPlayerInfoResponse_OVERALL GetPlayerInfoResponse_ResultsType = 0
	GetPlayerInfoResponse_FREE    GetPlayerInfoResponse_ResultsType = 1
	GetPlayerInfoResponse_RANKED  GetPlayerInfoResponse_ResultsType = 2
	GetPlayerInfoResponse_UNKNOWN GetPlayerInfoResponse_ResultsType = 4
	GetPlayerInfoResponse_CURRENT GetPlayerInfoResponse_ResultsType = 5
)

// Enum value maps for GetPlayerInfoResponse_ResultsType.
var (
	GetPlayerInfoResponse_ResultsType_name = map[int32]string{
		0: "OVERALL",
		1: "FREE",
		2: "RANKED",
		4: "UNKNOWN",
		5: "CURRENT",
	}
	GetPlayerInfoResponse_ResultsType_value = map[string]int32{
		"OVERALL": 0,
		"FREE":    1,
		"RANKED":  2,
		"UNKNOWN": 4,
		"CURRENT": 5,
	}
)

func (x GetPlayerInfoResponse_ResultsType) Enum() *GetPlayerInfoResponse_ResultsType {
	p := new(GetPlayerInfoResponse_ResultsType)
	*p = x
	return p
}

func (x GetPlayerInfoResponse_ResultsType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetPlayerInfoResponse_ResultsType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_play_proto_enumTypes[1].Descriptor()
}

func (GetPlayerInfoResponse_ResultsType) Type() protoreflect.EnumType {
	return &file_proto_play_proto_enumTypes[1]
}

func (x GetPlayerInfoResponse_ResultsType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *GetPlayerInfoResponse_ResultsType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = GetPlayerInfoResponse_ResultsType(num)
	return nil
}

// Deprecated: Use GetPlayerInfoResponse_ResultsType.Descriptor instead.
func (GetPlayerInfoResponse_ResultsType) EnumDescriptor() ([]byte, []int) {
	return file_proto_play_proto_rawDescGZIP(), []int{5, 0}
}

type LoginPlayServerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token []byte `protobuf:"bytes,1,req,name=token" json:"token,omitempty"`
}

func (x *LoginPlayServerRequest) Reset() {
	*x = LoginPlayServerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_play_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginPlayServerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginPlayServerRequest) ProtoMessage() {}

func (x *LoginPlayServerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_play_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginPlayServerRequest.ProtoReflect.Descriptor instead.
func (*LoginPlayServerRequest) Descriptor() ([]byte, []int) {
	return file_proto_play_proto_rawDescGZIP(), []int{0}
}

func (x *LoginPlayServerRequest) GetToken() []byte {
	if x != nil {
		return x.Token
	}
	return nil
}

type LoginPlayServerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnknownField_1 *int64 `protobuf:"varint,1,opt,name=unknown_field_1,json=unknownField1" json:"unknown_field_1,omitempty"`
	UnknownField_2 *int64 `protobuf:"varint,2,opt,name=unknown_field_2,json=unknownField2" json:"unknown_field_2,omitempty"` // same as ExtendedMessageHeader.unknown_field_7
	UnknownField_3 *int64 `protobuf:"varint,3,opt,name=unknown_field_3,json=unknownField3" json:"unknown_field_3,omitempty"` // same as ExtendedMessageHeader.unknown_field_8
	UnknownField_4 *int64 `protobuf:"varint,4,opt,name=unknown_field_4,json=unknownField4" json:"unknown_field_4,omitempty"` // same as ExtendedMessageHeader.unknown_field_4
}

func (x *LoginPlayServerResponse) Reset() {
	*x = LoginPlayServerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_play_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginPlayServerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginPlayServerResponse) ProtoMessage() {}

func (x *LoginPlayServerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_play_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginPlayServerResponse.ProtoReflect.Descriptor instead.
func (*LoginPlayServerResponse) Descriptor() ([]byte, []int) {
	return file_proto_play_proto_rawDescGZIP(), []int{1}
}

func (x *LoginPlayServerResponse) GetUnknownField_1() int64 {
	if x != nil && x.UnknownField_1 != nil {
		return *x.UnknownField_1
	}
	return 0
}

func (x *LoginPlayServerResponse) GetUnknownField_2() int64 {
	if x != nil && x.UnknownField_2 != nil {
		return *x.UnknownField_2
	}
	return 0
}

func (x *LoginPlayServerResponse) GetUnknownField_3() int64 {
	if x != nil && x.UnknownField_3 != nil {
		return *x.UnknownField_3
	}
	return 0
}

func (x *LoginPlayServerResponse) GetUnknownField_4() int64 {
	if x != nil && x.UnknownField_4 != nil {
		return *x.UnknownField_4
	}
	return 0
}

type ListPlayersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnknownField_1 *int64 `protobuf:"varint,1,req,name=unknown_field_1,json=unknownField1" json:"unknown_field_1,omitempty"` // sample value: 1
}

func (x *ListPlayersRequest) Reset() {
	*x = ListPlayersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_play_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPlayersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPlayersRequest) ProtoMessage() {}

func (x *ListPlayersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_play_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPlayersRequest.ProtoReflect.Descriptor instead.
func (*ListPlayersRequest) Descriptor() ([]byte, []int) {
	return file_proto_play_proto_rawDescGZIP(), []int{2}
}

func (x *ListPlayersRequest) GetUnknownField_1() int64 {
	if x != nil && x.UnknownField_1 != nil {
		return *x.UnknownField_1
	}
	return 0
}

type ListPlayersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Players     []*PlayerInfo `protobuf:"bytes,2,rep,name=players" json:"players,omitempty"`
	PageIndex   *int64        `protobuf:"varint,3,req,name=page_index,json=pageIndex" json:"page_index,omitempty"`
	PageCount   *int64        `protobuf:"varint,4,req,name=page_count,json=pageCount" json:"page_count,omitempty"`
	OnlineCount *int64        `protobuf:"varint,5,opt,name=online_count,json=onlineCount" json:"online_count,omitempty"` // only present in last page
	// Unknown fields
	UnknownField_1 *int64 `protobuf:"varint,1,opt,name=unknown_field_1,json=unknownField1" json:"unknown_field_1,omitempty"` // sample value: 0
	UnknownField_6 *int64 `protobuf:"varint,6,opt,name=unknown_field_6,json=unknownField6" json:"unknown_field_6,omitempty"` // sample value: 1
}

func (x *ListPlayersResponse) Reset() {
	*x = ListPlayersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_play_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPlayersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPlayersResponse) ProtoMessage() {}

func (x *ListPlayersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_play_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPlayersResponse.ProtoReflect.Descriptor instead.
func (*ListPlayersResponse) Descriptor() ([]byte, []int) {
	return file_proto_play_proto_rawDescGZIP(), []int{3}
}

func (x *ListPlayersResponse) GetPlayers() []*PlayerInfo {
	if x != nil {
		return x.Players
	}
	return nil
}

func (x *ListPlayersResponse) GetPageIndex() int64 {
	if x != nil && x.PageIndex != nil {
		return *x.PageIndex
	}
	return 0
}

func (x *ListPlayersResponse) GetPageCount() int64 {
	if x != nil && x.PageCount != nil {
		return *x.PageCount
	}
	return 0
}

func (x *ListPlayersResponse) GetOnlineCount() int64 {
	if x != nil && x.OnlineCount != nil {
		return *x.OnlineCount
	}
	return 0
}

func (x *ListPlayersResponse) GetUnknownField_1() int64 {
	if x != nil && x.UnknownField_1 != nil {
		return *x.UnknownField_1
	}
	return 0
}

func (x *ListPlayersResponse) GetUnknownField_6() int64 {
	if x != nil && x.UnknownField_6 != nil {
		return *x.UnknownField_6
	}
	return 0
}

type GetPlayerInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId    *int64       `protobuf:"varint,1,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	PlayerName  *string      `protobuf:"bytes,2,opt,name=player_name,json=playerName" json:"player_name,omitempty"`
	InfoOptions *InfoOptions `protobuf:"bytes,3,req,name=info_options,json=infoOptions" json:"info_options,omitempty"`
}

func (x *GetPlayerInfoRequest) Reset() {
	*x = GetPlayerInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_play_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlayerInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlayerInfoRequest) ProtoMessage() {}

func (x *GetPlayerInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_play_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlayerInfoRequest.ProtoReflect.Descriptor instead.
func (*GetPlayerInfoRequest) Descriptor() ([]byte, []int) {
	return file_proto_play_proto_rawDescGZIP(), []int{4}
}

func (x *GetPlayerInfoRequest) GetPlayerId() int64 {
	if x != nil && x.PlayerId != nil {
		return *x.PlayerId
	}
	return 0
}

func (x *GetPlayerInfoRequest) GetPlayerName() string {
	if x != nil && x.PlayerName != nil {
		return *x.PlayerName
	}
	return ""
}

func (x *GetPlayerInfoRequest) GetInfoOptions() *InfoOptions {
	if x != nil {
		return x.InfoOptions
	}
	return nil
}

type GetPlayerInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode          *int64                                   `protobuf:"varint,1,req,name=error_code,json=errorCode" json:"error_code,omitempty"`
	InfoOptions        *InfoOptions                             `protobuf:"bytes,2,req,name=info_options,json=infoOptions" json:"info_options,omitempty"`
	SeachedPlayerId    *int64                                   `protobuf:"varint,3,opt,name=seached_player_id,json=seachedPlayerId" json:"seached_player_id,omitempty"`
	SearchedPlayerName *string                                  `protobuf:"bytes,4,opt,name=searched_player_name,json=searchedPlayerName" json:"searched_player_name,omitempty"`
	PlayerId           *int64                                   `protobuf:"varint,5,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	Foxcoin            *int64                                   `protobuf:"varint,6,opt,name=foxcoin" json:"foxcoin,omitempty"`
	Rank               *Rank                                    `protobuf:"varint,7,opt,name=rank,enum=openfoxwq.Rank" json:"rank,omitempty"`
	RegisterInfo       *GetPlayerInfoResponse_RegisterInfo      `protobuf:"bytes,8,opt,name=register_info,json=registerInfo" json:"register_info,omitempty"`
	RecentRecord       *GetPlayerInfoResponse_RecentRecord      `protobuf:"bytes,9,opt,name=recent_record,json=recentRecord" json:"recent_record,omitempty"`
	UnknownField_10    *GetPlayerInfoResponse_Unknown10         `protobuf:"bytes,10,opt,name=unknown_field_10,json=unknownField10" json:"unknown_field_10,omitempty"`
	UnknownField_11    *GetPlayerInfoResponse_Unknown11         `protobuf:"bytes,11,opt,name=unknown_field_11,json=unknownField11" json:"unknown_field_11,omitempty"`
	OverallResults     *GetPlayerInfoResponse_OverallResults    `protobuf:"bytes,12,opt,name=overall_results,json=overallResults" json:"overall_results,omitempty"`
	MembershipInfo     *GetPlayerInfoResponse_MembershipInfo    `protobuf:"bytes,13,opt,name=membership_info,json=membershipInfo" json:"membership_info,omitempty"`
	Flair              *GetPlayerInfoResponse_PlayerFlair       `protobuf:"bytes,14,opt,name=flair" json:"flair,omitempty"`
	ProInfo            *GetPlayerInfoResponse_ProInfo           `protobuf:"bytes,15,opt,name=pro_info,json=proInfo" json:"pro_info,omitempty"`
	PerfRecord         *GetPlayerInfoResponse_PerformanceRecord `protobuf:"bytes,18,opt,name=perf_record,json=perfRecord" json:"perf_record,omitempty"`
	UnknownField_19    *GetPlayerInfoResponse_Unknown19         `protobuf:"bytes,19,opt,name=unknown_field_19,json=unknownField19" json:"unknown_field_19,omitempty"`
	Results            []*GetPlayerInfoResponse_Results         `protobuf:"bytes,16,rep,name=results" json:"results,omitempty"`
	Rooms              *GetPlayerInfoResponse_Rooms             `protobuf:"bytes,20,opt,name=rooms" json:"rooms,omitempty"`
	UnknownField_22    *GetPlayerInfoResponse_Unknown22         `protobuf:"bytes,22,opt,name=unknown_field_22,json=unknownField22" json:"unknown_field_22,omitempty"`
	UnknownField_23    *GetPlayerInfoResponse_Unknown23         `protobuf:"bytes,23,opt,name=unknown_field_23,json=unknownField23" json:"unknown_field_23,omitempty"`
}

func (x *GetPlayerInfoResponse) Reset() {
	*x = GetPlayerInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_play_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlayerInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlayerInfoResponse) ProtoMessage() {}

func (x *GetPlayerInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_play_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlayerInfoResponse.ProtoReflect.Descriptor instead.
func (*GetPlayerInfoResponse) Descriptor() ([]byte, []int) {
	return file_proto_play_proto_rawDescGZIP(), []int{5}
}

func (x *GetPlayerInfoResponse) GetErrorCode() int64 {
	if x != nil && x.ErrorCode != nil {
		return *x.ErrorCode
	}
	return 0
}

func (x *GetPlayerInfoResponse) GetInfoOptions() *InfoOptions {
	if x != nil {
		return x.InfoOptions
	}
	return nil
}

func (x *GetPlayerInfoResponse) GetSeachedPlayerId() int64 {
	if x != nil && x.SeachedPlayerId != nil {
		return *x.SeachedPlayerId
	}
	return 0
}

func (x *GetPlayerInfoResponse) GetSearchedPlayerName() string {
	if x != nil && x.SearchedPlayerName != nil {
		return *x.SearchedPlayerName
	}
	return ""
}

func (x *GetPlayerInfoResponse) GetPlayerId() int64 {
	if x != nil && x.PlayerId != nil {
		return *x.PlayerId
	}
	return 0
}

func (x *GetPlayerInfoResponse) GetFoxcoin() int64 {
	if x != nil && x.Foxcoin != nil {
		return *x.Foxcoin
	}
	return 0
}

func (x *GetPlayerInfoResponse) GetRank() Rank {
	if x != nil && x.Rank != nil {
		return *x.Rank
	}
	return Rank_RANK_18K
}

func (x *GetPlayerInfoResponse) GetRegisterInfo() *GetPlayerInfoResponse_RegisterInfo {
	if x != nil {
		return x.RegisterInfo
	}
	return nil
}

func (x *GetPlayerInfoResponse) GetRecentRecord() *GetPlayerInfoResponse_RecentRecord {
	if x != nil {
		return x.RecentRecord
	}
	return nil
}

func (x *GetPlayerInfoResponse) GetUnknownField_10() *GetPlayerInfoResponse_Unknown10 {
	if x != nil {
		return x.UnknownField_10
	}
	return nil
}

func (x *GetPlayerInfoResponse) GetUnknownField_11() *GetPlayerInfoResponse_Unknown11 {
	if x != nil {
		return x.UnknownField_11
	}
	return nil
}

func (x *GetPlayerInfoResponse) GetOverallResults() *GetPlayerInfoResponse_OverallResults {
	if x != nil {
		return x.OverallResults
	}
	return nil
}

func (x *GetPlayerInfoResponse) GetMembershipInfo() *GetPlayerInfoResponse_MembershipInfo {
	if x != nil {
		return x.MembershipInfo
	}
	return nil
}

func (x *GetPlayerInfoResponse) GetFlair() *GetPlayerInfoResponse_PlayerFlair {
	if x != nil {
		return x.Flair
	}
	return nil
}

func (x *GetPlayerInfoResponse) GetProInfo() *GetPlayerInfoResponse_ProInfo {
	if x != nil {
		return x.ProInfo
	}
	return nil
}

func (x *GetPlayerInfoResponse) GetPerfRecord() *GetPlayerInfoResponse_PerformanceRecord {
	if x != nil {
		return x.PerfRecord
	}
	return nil
}

func (x *GetPlayerInfoResponse) GetUnknownField_19() *GetPlayerInfoResponse_Unknown19 {
	if x != nil {
		return x.UnknownField_19
	}
	return nil
}

func (x *GetPlayerInfoResponse) GetResults() []*GetPlayerInfoResponse_Results {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *GetPlayerInfoResponse) GetRooms() *GetPlayerInfoResponse_Rooms {
	if x != nil {
		return x.Rooms
	}
	return nil
}

func (x *GetPlayerInfoResponse) GetUnknownField_22() *GetPlayerInfoResponse_Unknown22 {
	if x != nil {
		return x.UnknownField_22
	}
	return nil
}

func (x *GetPlayerInfoResponse) GetUnknownField_23() *GetPlayerInfoResponse_Unknown23 {
	if x != nil {
		return x.UnknownField_23
	}
	return nil
}

type InfoOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnknownField_1 *int64 `protobuf:"varint,1,req,name=unknown_field_1,json=unknownField1" json:"unknown_field_1,omitempty"` // sample value: 11
	UnknownField_2 *int64 `protobuf:"varint,2,opt,name=unknown_field_2,json=unknownField2" json:"unknown_field_2,omitempty"` // sample value: 0
}

func (x *InfoOptions) Reset() {
	*x = InfoOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_play_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InfoOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfoOptions) ProtoMessage() {}

func (x *InfoOptions) ProtoReflect() protoreflect.Message {
	mi := &file_proto_play_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfoOptions.ProtoReflect.Descriptor instead.
func (*InfoOptions) Descriptor() ([]byte, []int) {
	return file_proto_play_proto_rawDescGZIP(), []int{6}
}

func (x *InfoOptions) GetUnknownField_1() int64 {
	if x != nil && x.UnknownField_1 != nil {
		return *x.UnknownField_1
	}
	return 0
}

func (x *InfoOptions) GetUnknownField_2() int64 {
	if x != nil && x.UnknownField_2 != nil {
		return *x.UnknownField_2
	}
	return 0
}

type SyncTimeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnixTs *int64 `protobuf:"varint,1,req,name=unix_ts,json=unixTs" json:"unix_ts,omitempty"`
}

func (x *SyncTimeRequest) Reset() {
	*x = SyncTimeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_play_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncTimeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncTimeRequest) ProtoMessage() {}

func (x *SyncTimeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_play_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncTimeRequest.ProtoReflect.Descriptor instead.
func (*SyncTimeRequest) Descriptor() ([]byte, []int) {
	return file_proto_play_proto_rawDescGZIP(), []int{7}
}

func (x *SyncTimeRequest) GetUnixTs() int64 {
	if x != nil && x.UnixTs != nil {
		return *x.UnixTs
	}
	return 0
}

type SyncTimeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnixTs   *int64 `protobuf:"varint,1,req,name=unix_ts,json=unixTs" json:"unix_ts,omitempty"`
	UnixTsUs *int64 `protobuf:"varint,2,req,name=unix_ts_us,json=unixTsUs" json:"unix_ts_us,omitempty"`
}

func (x *SyncTimeResponse) Reset() {
	*x = SyncTimeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_play_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncTimeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncTimeResponse) ProtoMessage() {}

func (x *SyncTimeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_play_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncTimeResponse.ProtoReflect.Descriptor instead.
func (*SyncTimeResponse) Descriptor() ([]byte, []int) {
	return file_proto_play_proto_rawDescGZIP(), []int{8}
}

func (x *SyncTimeResponse) GetUnixTs() int64 {
	if x != nil && x.UnixTs != nil {
		return *x.UnixTs
	}
	return 0
}

func (x *SyncTimeResponse) GetUnixTsUs() int64 {
	if x != nil && x.UnixTsUs != nil {
		return *x.UnixTsUs
	}
	return 0
}

type SyncPlayersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnknownField_1 *int64 `protobuf:"varint,1,req,name=unknown_field_1,json=unknownField1" json:"unknown_field_1,omitempty"` // sample value: 1
}

func (x *SyncPlayersRequest) Reset() {
	*x = SyncPlayersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_play_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncPlayersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncPlayersRequest) ProtoMessage() {}

func (x *SyncPlayersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_play_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncPlayersRequest.ProtoReflect.Descriptor instead.
func (*SyncPlayersRequest) Descriptor() ([]byte, []int) {
	return file_proto_play_proto_rawDescGZIP(), []int{9}
}

func (x *SyncPlayersRequest) GetUnknownField_1() int64 {
	if x != nil && x.UnknownField_1 != nil {
		return *x.UnknownField_1
	}
	return 0
}

type SyncPlayersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnknownField_1 *int64 `protobuf:"varint,1,req,name=unknown_field_1,json=unknownField1" json:"unknown_field_1,omitempty"` // sample value: 1
	UnknownField_2 *int64 `protobuf:"varint,2,req,name=unknown_field_2,json=unknownField2" json:"unknown_field_2,omitempty"` // sample value: 0
}

func (x *SyncPlayersResponse) Reset() {
	*x = SyncPlayersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_play_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncPlayersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncPlayersResponse) ProtoMessage() {}

func (x *SyncPlayersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_play_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncPlayersResponse.ProtoReflect.Descriptor instead.
func (*SyncPlayersResponse) Descriptor() ([]byte, []int) {
	return file_proto_play_proto_rawDescGZIP(), []int{10}
}

func (x *SyncPlayersResponse) GetUnknownField_1() int64 {
	if x != nil && x.UnknownField_1 != nil {
		return *x.UnknownField_1
	}
	return 0
}

func (x *SyncPlayersResponse) GetUnknownField_2() int64 {
	if x != nil && x.UnknownField_2 != nil {
		return *x.UnknownField_2
	}
	return 0
}

type PlayerStateEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerInfo     *PlayerInfo `protobuf:"bytes,1,req,name=player_info,json=playerInfo" json:"player_info,omitempty"`
	OnlineCount    *int64      `protobuf:"varint,2,req,name=online_count,json=onlineCount" json:"online_count,omitempty"`
	UnknownField_3 *int64      `protobuf:"varint,3,opt,name=unknown_field_3,json=unknownField3" json:"unknown_field_3,omitempty"` // sample value: 1
}

func (x *PlayerStateEvent) Reset() {
	*x = PlayerStateEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_play_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerStateEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerStateEvent) ProtoMessage() {}

func (x *PlayerStateEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_play_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerStateEvent.ProtoReflect.Descriptor instead.
func (*PlayerStateEvent) Descriptor() ([]byte, []int) {
	return file_proto_play_proto_rawDescGZIP(), []int{11}
}

func (x *PlayerStateEvent) GetPlayerInfo() *PlayerInfo {
	if x != nil {
		return x.PlayerInfo
	}
	return nil
}

func (x *PlayerStateEvent) GetOnlineCount() int64 {
	if x != nil && x.OnlineCount != nil {
		return *x.OnlineCount
	}
	return 0
}

func (x *PlayerStateEvent) GetUnknownField_3() int64 {
	if x != nil && x.UnknownField_3 != nil {
		return *x.UnknownField_3
	}
	return 0
}

type PlayerOnlineCountEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnknownField_1 *int64 `protobuf:"varint,1,opt,name=unknown_field_1,json=unknownField1" json:"unknown_field_1,omitempty"` // sample value: 1
	OnlineCount    *int64 `protobuf:"varint,2,req,name=online_count,json=onlineCount" json:"online_count,omitempty"`
}

func (x *PlayerOnlineCountEvent) Reset() {
	*x = PlayerOnlineCountEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_play_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerOnlineCountEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerOnlineCountEvent) ProtoMessage() {}

func (x *PlayerOnlineCountEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_play_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerOnlineCountEvent.ProtoReflect.Descriptor instead.
func (*PlayerOnlineCountEvent) Descriptor() ([]byte, []int) {
	return file_proto_play_proto_rawDescGZIP(), []int{12}
}

func (x *PlayerOnlineCountEvent) GetUnknownField_1() int64 {
	if x != nil && x.UnknownField_1 != nil {
		return *x.UnknownField_1
	}
	return 0
}

func (x *PlayerOnlineCountEvent) GetOnlineCount() int64 {
	if x != nil && x.OnlineCount != nil {
		return *x.OnlineCount
	}
	return 0
}

type PlayerOnlineEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerInfo     *PlayerInfo `protobuf:"bytes,1,req,name=player_info,json=playerInfo" json:"player_info,omitempty"`
	OnlineCount    *int64      `protobuf:"varint,2,req,name=online_count,json=onlineCount" json:"online_count,omitempty"`
	UnknownField_3 *int64      `protobuf:"varint,3,opt,name=unknown_field_3,json=unknownField3" json:"unknown_field_3,omitempty"` // sample value: 1
}

func (x *PlayerOnlineEvent) Reset() {
	*x = PlayerOnlineEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_play_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerOnlineEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerOnlineEvent) ProtoMessage() {}

func (x *PlayerOnlineEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_play_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerOnlineEvent.ProtoReflect.Descriptor instead.
func (*PlayerOnlineEvent) Descriptor() ([]byte, []int) {
	return file_proto_play_proto_rawDescGZIP(), []int{13}
}

func (x *PlayerOnlineEvent) GetPlayerInfo() *PlayerInfo {
	if x != nil {
		return x.PlayerInfo
	}
	return nil
}

func (x *PlayerOnlineEvent) GetOnlineCount() int64 {
	if x != nil && x.OnlineCount != nil {
		return *x.OnlineCount
	}
	return 0
}

func (x *PlayerOnlineEvent) GetUnknownField_3() int64 {
	if x != nil && x.UnknownField_3 != nil {
		return *x.UnknownField_3
	}
	return 0
}

type PlayerOfflineEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId       *int64 `protobuf:"varint,1,req,name=player_id,json=playerId" json:"player_id,omitempty"`
	OnlineCount    *int64 `protobuf:"varint,2,req,name=online_count,json=onlineCount" json:"online_count,omitempty"`
	UnknownField_3 *int64 `protobuf:"varint,3,opt,name=unknown_field_3,json=unknownField3" json:"unknown_field_3,omitempty"` // sample value: 1
}

func (x *PlayerOfflineEvent) Reset() {
	*x = PlayerOfflineEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_play_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerOfflineEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerOfflineEvent) ProtoMessage() {}

func (x *PlayerOfflineEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_play_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerOfflineEvent.ProtoReflect.Descriptor instead.
func (*PlayerOfflineEvent) Descriptor() ([]byte, []int) {
	return file_proto_play_proto_rawDescGZIP(), []int{14}
}

func (x *PlayerOfflineEvent) GetPlayerId() int64 {
	if x != nil && x.PlayerId != nil {
		return *x.PlayerId
	}
	return 0
}

func (x *PlayerOfflineEvent) GetOnlineCount() int64 {
	if x != nil && x.OnlineCount != nil {
		return *x.OnlineCount
	}
	return 0
}

func (x *PlayerOfflineEvent) GetUnknownField_3() int64 {
	if x != nil && x.UnknownField_3 != nil {
		return *x.UnknownField_3
	}
	return 0
}

type UnknownPlayRequest1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnknownField_1 *UnknownPlayRequest1_UnknownPlayRequest1Nested1 `protobuf:"bytes,1,req,name=unknown_field_1,json=unknownField1" json:"unknown_field_1,omitempty"`
	UnknownField_2 *int64                                          `protobuf:"varint,2,req,name=unknown_field_2,json=unknownField2" json:"unknown_field_2,omitempty"` // sample value: 2
}

func (x *UnknownPlayRequest1) Reset() {
	*x = UnknownPlayRequest1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_play_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnknownPlayRequest1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnknownPlayRequest1) ProtoMessage() {}

func (x *UnknownPlayRequest1) ProtoReflect() protoreflect.Message {
	mi := &file_proto_play_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnknownPlayRequest1.ProtoReflect.Descriptor instead.
func (*UnknownPlayRequest1) Descriptor() ([]byte, []int) {
	return file_proto_play_proto_rawDescGZIP(), []int{15}
}

func (x *UnknownPlayRequest1) GetUnknownField_1() *UnknownPlayRequest1_UnknownPlayRequest1Nested1 {
	if x != nil {
		return x.UnknownField_1
	}
	return nil
}

func (x *UnknownPlayRequest1) GetUnknownField_2() int64 {
	if x != nil && x.UnknownField_2 != nil {
		return *x.UnknownField_2
	}
	return 0
}

type UnknownPlayResponse1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnknownField_1 *int64 `protobuf:"varint,1,opt,name=unknown_field_1,json=unknownField1" json:"unknown_field_1,omitempty"` // sample value: 0
}

func (x *UnknownPlayResponse1) Reset() {
	*x = UnknownPlayResponse1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_play_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnknownPlayResponse1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnknownPlayResponse1) ProtoMessage() {}

func (x *UnknownPlayResponse1) ProtoReflect() protoreflect.Message {
	mi := &file_proto_play_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnknownPlayResponse1.ProtoReflect.Descriptor instead.
func (*UnknownPlayResponse1) Descriptor() ([]byte, []int) {
	return file_proto_play_proto_rawDescGZIP(), []int{16}
}

func (x *UnknownPlayResponse1) GetUnknownField_1() int64 {
	if x != nil && x.UnknownField_1 != nil {
		return *x.UnknownField_1
	}
	return 0
}

type GetRoomInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id *RoomId `protobuf:"bytes,1,req,name=id" json:"id,omitempty"`
}

func (x *GetRoomInfoRequest) Reset() {
	*x = GetRoomInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_play_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoomInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoomInfoRequest) ProtoMessage() {}

func (x *GetRoomInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_play_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoomInfoRequest.ProtoReflect.Descriptor instead.
func (*GetRoomInfoRequest) Descriptor() ([]byte, []int) {
	return file_proto_play_proto_rawDescGZIP(), []int{17}
}

func (x *GetRoomInfoRequest) GetId() *RoomId {
	if x != nil {
		return x.Id
	}
	return nil
}

type GetRoomInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode      *int64                          `protobuf:"varint,1,opt,name=error_code,json=errorCode" json:"error_code,omitempty"`
	UnknownField_2 []*GetRoomInfoResponse_Unknown2 `protobuf:"bytes,2,rep,name=unknown_field_2,json=unknownField2" json:"unknown_field_2,omitempty"`
	RoomInfo       *GetRoomInfoResponse_RoomInfo   `protobuf:"bytes,3,opt,name=room_info,json=roomInfo" json:"room_info,omitempty"`
}

func (x *GetRoomInfoResponse) Reset() {
	*x = GetRoomInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_play_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoomInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoomInfoResponse) ProtoMessage() {}

func (x *GetRoomInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_play_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoomInfoResponse.ProtoReflect.Descriptor instead.
func (*GetRoomInfoResponse) Descriptor() ([]byte, []int) {
	return file_proto_play_proto_rawDescGZIP(), []int{18}
}

func (x *GetRoomInfoResponse) GetErrorCode() int64 {
	if x != nil && x.ErrorCode != nil {
		return *x.ErrorCode
	}
	return 0
}

func (x *GetRoomInfoResponse) GetUnknownField_2() []*GetRoomInfoResponse_Unknown2 {
	if x != nil {
		return x.UnknownField_2
	}
	return nil
}

func (x *GetRoomInfoResponse) GetRoomInfo() *GetRoomInfoResponse_RoomInfo {
	if x != nil {
		return x.RoomInfo
	}
	return nil
}

type GetAutomatchStatsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAutomatchStatsRequest) Reset() {
	*x = GetAutomatchStatsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_play_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAutomatchStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAutomatchStatsRequest) ProtoMessage() {}

func (x *GetAutomatchStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_play_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAutomatchStatsRequest.ProtoReflect.Descriptor instead.
func (*GetAutomatchStatsRequest) Descriptor() ([]byte, []int) {
	return file_proto_play_proto_rawDescGZIP(), []int{19}
}

type GetAutomatchStatsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode  *int64          `protobuf:"varint,1,opt,name=error_code,json=errorCode" json:"error_code,omitempty"`
	Population map[int64]int64 `protobuf:"bytes,2,rep,name=population" json:"population,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
}

func (x *GetAutomatchStatsResponse) Reset() {
	*x = GetAutomatchStatsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_play_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAutomatchStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAutomatchStatsResponse) ProtoMessage() {}

func (x *GetAutomatchStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_play_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAutomatchStatsResponse.ProtoReflect.Descriptor instead.
func (*GetAutomatchStatsResponse) Descriptor() ([]byte, []int) {
	return file_proto_play_proto_rawDescGZIP(), []int{20}
}

func (x *GetAutomatchStatsResponse) GetErrorCode() int64 {
	if x != nil && x.ErrorCode != nil {
		return *x.ErrorCode
	}
	return 0
}

func (x *GetAutomatchStatsResponse) GetPopulation() map[int64]int64 {
	if x != nil {
		return x.Population
	}
	return nil
}

type StartAutomatchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PresetId       *int64 `protobuf:"varint,1,req,name=preset_id,json=presetId" json:"preset_id,omitempty"`
	UnknownField_2 *int64 `protobuf:"varint,2,opt,name=unknown_field_2,json=unknownField2" json:"unknown_field_2,omitempty"`
}

func (x *StartAutomatchRequest) Reset() {
	*x = StartAutomatchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_play_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartAutomatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartAutomatchRequest) ProtoMessage() {}

func (x *StartAutomatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_play_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartAutomatchRequest.ProtoReflect.Descriptor instead.
func (*StartAutomatchRequest) Descriptor() ([]byte, []int) {
	return file_proto_play_proto_rawDescGZIP(), []int{21}
}

func (x *StartAutomatchRequest) GetPresetId() int64 {
	if x != nil && x.PresetId != nil {
		return *x.PresetId
	}
	return 0
}

func (x *StartAutomatchRequest) GetUnknownField_2() int64 {
	if x != nil && x.UnknownField_2 != nil {
		return *x.UnknownField_2
	}
	return 0
}

type StartAutomatchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode      *int64 `protobuf:"varint,1,opt,name=error_code,json=errorCode" json:"error_code,omitempty"`
	UnknownField_2 *int64 `protobuf:"varint,2,opt,name=unknown_field_2,json=unknownField2" json:"unknown_field_2,omitempty"`
	UnknownField_3 *int64 `protobuf:"varint,3,opt,name=unknown_field_3,json=unknownField3" json:"unknown_field_3,omitempty"`
}

func (x *StartAutomatchResponse) Reset() {
	*x = StartAutomatchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_play_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartAutomatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartAutomatchResponse) ProtoMessage() {}

func (x *StartAutomatchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_play_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartAutomatchResponse.ProtoReflect.Descriptor instead.
func (*StartAutomatchResponse) Descriptor() ([]byte, []int) {
	return file_proto_play_proto_rawDescGZIP(), []int{22}
}

func (x *StartAutomatchResponse) GetErrorCode() int64 {
	if x != nil && x.ErrorCode != nil {
		return *x.ErrorCode
	}
	return 0
}

func (x *StartAutomatchResponse) GetUnknownField_2() int64 {
	if x != nil && x.UnknownField_2 != nil {
		return *x.UnknownField_2
	}
	return 0
}

func (x *StartAutomatchResponse) GetUnknownField_3() int64 {
	if x != nil && x.UnknownField_3 != nil {
		return *x.UnknownField_3
	}
	return 0
}

type StopAutomatchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StopAutomatchRequest) Reset() {
	*x = StopAutomatchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_play_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopAutomatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopAutomatchRequest) ProtoMessage() {}

func (x *StopAutomatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_play_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopAutomatchRequest.ProtoReflect.Descriptor instead.
func (*StopAutomatchRequest) Descriptor() ([]byte, []int) {
	return file_proto_play_proto_rawDescGZIP(), []int{23}
}

type StopAutomatchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode *int64 `protobuf:"varint,1,opt,name=error_code,json=errorCode" json:"error_code,omitempty"`
}

func (x *StopAutomatchResponse) Reset() {
	*x = StopAutomatchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_play_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopAutomatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopAutomatchResponse) ProtoMessage() {}

func (x *StopAutomatchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_play_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopAutomatchResponse.ProtoReflect.Descriptor instead.
func (*StopAutomatchResponse) Descriptor() ([]byte, []int) {
	return file_proto_play_proto_rawDescGZIP(), []int{24}
}

func (x *StopAutomatchResponse) GetErrorCode() int64 {
	if x != nil && x.ErrorCode != nil {
		return *x.ErrorCode
	}
	return 0
}

type AutomatchFoundEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode      *int64                                 `protobuf:"varint,1,opt,name=error_code,json=errorCode" json:"error_code,omitempty"`
	RoomId_1       *int64                                 `protobuf:"varint,2,opt,name=room_id_1,json=roomId1" json:"room_id_1,omitempty"`
	RoomId_2       *int64                                 `protobuf:"varint,3,opt,name=room_id_2,json=roomId2" json:"room_id_2,omitempty"`
	RoomId_3       *int64                                 `protobuf:"varint,4,opt,name=room_id_3,json=roomId3" json:"room_id_3,omitempty"`
	Participants   []*AutomatchFoundEvent_RoomParticipant `protobuf:"bytes,5,rep,name=participants" json:"participants,omitempty"`
	UnknownField_6 *int64                                 `protobuf:"varint,6,opt,name=unknown_field_6,json=unknownField6" json:"unknown_field_6,omitempty"`
}

func (x *AutomatchFoundEvent) Reset() {
	*x = AutomatchFoundEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_play_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AutomatchFoundEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutomatchFoundEvent) ProtoMessage() {}

func (x *AutomatchFoundEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_play_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutomatchFoundEvent.ProtoReflect.Descriptor instead.
func (*AutomatchFoundEvent) Descriptor() ([]byte, []int) {
	return file_proto_play_proto_rawDescGZIP(), []int{25}
}

func (x *AutomatchFoundEvent) GetErrorCode() int64 {
	if x != nil && x.ErrorCode != nil {
		return *x.ErrorCode
	}
	return 0
}

func (x *AutomatchFoundEvent) GetRoomId_1() int64 {
	if x != nil && x.RoomId_1 != nil {
		return *x.RoomId_1
	}
	return 0
}

func (x *AutomatchFoundEvent) GetRoomId_2() int64 {
	if x != nil && x.RoomId_2 != nil {
		return *x.RoomId_2
	}
	return 0
}

func (x *AutomatchFoundEvent) GetRoomId_3() int64 {
	if x != nil && x.RoomId_3 != nil {
		return *x.RoomId_3
	}
	return 0
}

func (x *AutomatchFoundEvent) GetParticipants() []*AutomatchFoundEvent_RoomParticipant {
	if x != nil {
		return x.Participants
	}
	return nil
}

func (x *AutomatchFoundEvent) GetUnknownField_6() int64 {
	if x != nil && x.UnknownField_6 != nil {
		return *x.UnknownField_6
	}
	return 0
}

type AcceptMatchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AcceptMatchRequest) Reset() {
	*x = AcceptMatchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_play_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcceptMatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptMatchRequest) ProtoMessage() {}

func (x *AcceptMatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_play_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptMatchRequest.ProtoReflect.Descriptor instead.
func (*AcceptMatchRequest) Descriptor() ([]byte, []int) {
	return file_proto_play_proto_rawDescGZIP(), []int{26}
}

type AcceptMatchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode *int64 `protobuf:"varint,1,opt,name=error_code,json=errorCode" json:"error_code,omitempty"`
}

func (x *AcceptMatchResponse) Reset() {
	*x = AcceptMatchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_play_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcceptMatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptMatchResponse) ProtoMessage() {}

func (x *AcceptMatchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_play_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptMatchResponse.ProtoReflect.Descriptor instead.
func (*AcceptMatchResponse) Descriptor() ([]byte, []int) {
	return file_proto_play_proto_rawDescGZIP(), []int{27}
}

func (x *AcceptMatchResponse) GetErrorCode() int64 {
	if x != nil && x.ErrorCode != nil {
		return *x.ErrorCode
	}
	return 0
}

type MatchStartEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomSettings      *RoomSettings                      `protobuf:"bytes,1,opt,name=room_settings,json=roomSettings" json:"room_settings,omitempty"`
	UnknownField_2    *int64                             `protobuf:"varint,2,opt,name=unknown_field_2,json=unknownField2" json:"unknown_field_2,omitempty"`
	UnixTsNanos       *int64                             `protobuf:"varint,3,opt,name=unix_ts_nanos,json=unixTsNanos" json:"unix_ts_nanos,omitempty"`
	UnknownField_4    *int64                             `protobuf:"varint,4,opt,name=unknown_field_4,json=unknownField4" json:"unknown_field_4,omitempty"`
	UnknownField_6    *int64                             `protobuf:"varint,6,opt,name=unknown_field_6,json=unknownField6" json:"unknown_field_6,omitempty"`
	UnixTs            *int64                             `protobuf:"varint,7,opt,name=unix_ts,json=unixTs" json:"unix_ts,omitempty"`
	UnixTsNanosStr    *string                            `protobuf:"bytes,8,opt,name=unix_ts_nanos_str,json=unixTsNanosStr" json:"unix_ts_nanos_str,omitempty"`
	Players           []*MatchStartEvent_MatchPlayerInfo `protobuf:"bytes,9,rep,name=players" json:"players,omitempty"`
	RoomId_1          *int64                             `protobuf:"varint,11,opt,name=room_id_1,json=roomId1" json:"room_id_1,omitempty"`
	RoomId_2          *int64                             `protobuf:"varint,12,opt,name=room_id_2,json=roomId2" json:"room_id_2,omitempty"`
	RoomId_3          *int64                             `protobuf:"varint,14,opt,name=room_id_3,json=roomId3" json:"room_id_3,omitempty"`
	RoomId_4          *int64                             `protobuf:"varint,13,opt,name=room_id_4,json=roomId4" json:"room_id_4,omitempty"`
	AutomatchPresetId *int64                             `protobuf:"varint,15,opt,name=automatch_preset_id,json=automatchPresetId" json:"automatch_preset_id,omitempty"`
	AutomatchPreset   *MatchStartEvent_AutomatchPreset   `protobuf:"bytes,17,opt,name=automatch_preset,json=automatchPreset" json:"automatch_preset,omitempty"`
}

func (x *MatchStartEvent) Reset() {
	*x = MatchStartEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_play_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchStartEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchStartEvent) ProtoMessage() {}

func (x *MatchStartEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_play_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchStartEvent.ProtoReflect.Descriptor instead.
func (*MatchStartEvent) Descriptor() ([]byte, []int) {
	return file_proto_play_proto_rawDescGZIP(), []int{28}
}

func (x *MatchStartEvent) GetRoomSettings() *RoomSettings {
	if x != nil {
		return x.RoomSettings
	}
	return nil
}

func (x *MatchStartEvent) GetUnknownField_2() int64 {
	if x != nil && x.UnknownField_2 != nil {
		return *x.UnknownField_2
	}
	return 0
}

func (x *MatchStartEvent) GetUnixTsNanos() int64 {
	if x != nil && x.UnixTsNanos != nil {
		return *x.UnixTsNanos
	}
	return 0
}

func (x *MatchStartEvent) GetUnknownField_4() int64 {
	if x != nil && x.UnknownField_4 != nil {
		return *x.UnknownField_4
	}
	return 0
}

func (x *MatchStartEvent) GetUnknownField_6() int64 {
	if x != nil && x.UnknownField_6 != nil {
		return *x.UnknownField_6
	}
	return 0
}

func (x *MatchStartEvent) GetUnixTs() int64 {
	if x != nil && x.UnixTs != nil {
		return *x.UnixTs
	}
	return 0
}

func (x *MatchStartEvent) GetUnixTsNanosStr() string {
	if x != nil && x.UnixTsNanosStr != nil {
		return *x.UnixTsNanosStr
	}
	return ""
}

func (x *MatchStartEvent) GetPlayers() []*MatchStartEvent_MatchPlayerInfo {
	if x != nil {
		return x.Players
	}
	return nil
}

func (x *MatchStartEvent) GetRoomId_1() int64 {
	if x != nil && x.RoomId_1 != nil {
		return *x.RoomId_1
	}
	return 0
}

func (x *MatchStartEvent) GetRoomId_2() int64 {
	if x != nil && x.RoomId_2 != nil {
		return *x.RoomId_2
	}
	return 0
}

func (x *MatchStartEvent) GetRoomId_3() int64 {
	if x != nil && x.RoomId_3 != nil {
		return *x.RoomId_3
	}
	return 0
}

func (x *MatchStartEvent) GetRoomId_4() int64 {
	if x != nil && x.RoomId_4 != nil {
		return *x.RoomId_4
	}
	return 0
}

func (x *MatchStartEvent) GetAutomatchPresetId() int64 {
	if x != nil && x.AutomatchPresetId != nil {
		return *x.AutomatchPresetId
	}
	return 0
}

func (x *MatchStartEvent) GetAutomatchPreset() *MatchStartEvent_AutomatchPreset {
	if x != nil {
		return x.AutomatchPreset
	}
	return nil
}

type HeartbeatInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnknownField_1 *int64 `protobuf:"varint,1,opt,name=unknown_field_1,json=unknownField1" json:"unknown_field_1,omitempty"` // goes into header.tag2
	UnknownField_2 *int64 `protobuf:"varint,2,opt,name=unknown_field_2,json=unknownField2" json:"unknown_field_2,omitempty"` // goes into header.8
}

func (x *HeartbeatInfo) Reset() {
	*x = HeartbeatInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_play_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeartbeatInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatInfo) ProtoMessage() {}

func (x *HeartbeatInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_play_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatInfo.ProtoReflect.Descriptor instead.
func (*HeartbeatInfo) Descriptor() ([]byte, []int) {
	return file_proto_play_proto_rawDescGZIP(), []int{29}
}

func (x *HeartbeatInfo) GetUnknownField_1() int64 {
	if x != nil && x.UnknownField_1 != nil {
		return *x.UnknownField_1
	}
	return 0
}

func (x *HeartbeatInfo) GetUnknownField_2() int64 {
	if x != nil && x.UnknownField_2 != nil {
		return *x.UnknownField_2
	}
	return 0
}

type EnterRoomRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id *RoomId `protobuf:"bytes,1,req,name=id" json:"id,omitempty"`
}

func (x *EnterRoomRequest) Reset() {
	*x = EnterRoomRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_play_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnterRoomRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnterRoomRequest) ProtoMessage() {}

func (x *EnterRoomRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_play_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnterRoomRequest.ProtoReflect.Descriptor instead.
func (*EnterRoomRequest) Descriptor() ([]byte, []int) {
	return file_proto_play_proto_rawDescGZIP(), []int{30}
}

func (x *EnterRoomRequest) GetId() *RoomId {
	if x != nil {
		return x.Id
	}
	return nil
}

type EnterRoomResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode     *int64         `protobuf:"varint,1,opt,name=error_code,json=errorCode" json:"error_code,omitempty"`
	RoomId        *RoomId        `protobuf:"bytes,2,opt,name=room_id,json=roomId" json:"room_id,omitempty"`
	HeartbeatInfo *HeartbeatInfo `protobuf:"bytes,3,opt,name=heartbeat_info,json=heartbeatInfo" json:"heartbeat_info,omitempty"`
}

func (x *EnterRoomResponse) Reset() {
	*x = EnterRoomResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_play_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnterRoomResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnterRoomResponse) ProtoMessage() {}

func (x *EnterRoomResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_play_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnterRoomResponse.ProtoReflect.Descriptor instead.
func (*EnterRoomResponse) Descriptor() ([]byte, []int) {
	return file_proto_play_proto_rawDescGZIP(), []int{31}
}

func (x *EnterRoomResponse) GetErrorCode() int64 {
	if x != nil && x.ErrorCode != nil {
		return *x.ErrorCode
	}
	return 0
}

func (x *EnterRoomResponse) GetRoomId() *RoomId {
	if x != nil {
		return x.RoomId
	}
	return nil
}

func (x *EnterRoomResponse) GetHeartbeatInfo() *HeartbeatInfo {
	if x != nil {
		return x.HeartbeatInfo
	}
	return nil
}

type LeaveRoomRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id *RoomId `protobuf:"bytes,1,req,name=id" json:"id,omitempty"`
}

func (x *LeaveRoomRequest) Reset() {
	*x = LeaveRoomRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_play_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaveRoomRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveRoomRequest) ProtoMessage() {}

func (x *LeaveRoomRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_play_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveRoomRequest.ProtoReflect.Descriptor instead.
func (*LeaveRoomRequest) Descriptor() ([]byte, []int) {
	return file_proto_play_proto_rawDescGZIP(), []int{32}
}

func (x *LeaveRoomRequest) GetId() *RoomId {
	if x != nil {
		return x.Id
	}
	return nil
}

type LeaveRoomResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode *int64  `protobuf:"varint,1,opt,name=error_code,json=errorCode" json:"error_code,omitempty"`
	RoomId    *RoomId `protobuf:"bytes,2,opt,name=room_id,json=roomId" json:"room_id,omitempty"`
}

func (x *LeaveRoomResponse) Reset() {
	*x = LeaveRoomResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_play_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaveRoomResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveRoomResponse) ProtoMessage() {}

func (x *LeaveRoomResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_play_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveRoomResponse.ProtoReflect.Descriptor instead.
func (*LeaveRoomResponse) Descriptor() ([]byte, []int) {
	return file_proto_play_proto_rawDescGZIP(), []int{33}
}

func (x *LeaveRoomResponse) GetErrorCode() int64 {
	if x != nil && x.ErrorCode != nil {
		return *x.ErrorCode
	}
	return 0
}

func (x *LeaveRoomResponse) GetRoomId() *RoomId {
	if x != nil {
		return x.RoomId
	}
	return nil
}

type ListRoomParticipantsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         *RoomId `protobuf:"bytes,1,req,name=id" json:"id,omitempty"`
	PlayerId_1 *int64  `protobuf:"varint,2,req,name=player_id_1,json=playerId1" json:"player_id_1,omitempty"`
	PlayerId_2 *int64  `protobuf:"varint,3,req,name=player_id_2,json=playerId2" json:"player_id_2,omitempty"`
}

func (x *ListRoomParticipantsRequest) Reset() {
	*x = ListRoomParticipantsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_play_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRoomParticipantsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRoomParticipantsRequest) ProtoMessage() {}

func (x *ListRoomParticipantsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_play_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRoomParticipantsRequest.ProtoReflect.Descriptor instead.
func (*ListRoomParticipantsRequest) Descriptor() ([]byte, []int) {
	return file_proto_play_proto_rawDescGZIP(), []int{34}
}

func (x *ListRoomParticipantsRequest) GetId() *RoomId {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *ListRoomParticipantsRequest) GetPlayerId_1() int64 {
	if x != nil && x.PlayerId_1 != nil {
		return *x.PlayerId_1
	}
	return 0
}

func (x *ListRoomParticipantsRequest) GetPlayerId_2() int64 {
	if x != nil && x.PlayerId_2 != nil {
		return *x.PlayerId_2
	}
	return 0
}

type ListRoomParticipantsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode        *int64                                              `protobuf:"varint,1,opt,name=error_code,json=errorCode" json:"error_code,omitempty"`
	Id               *RoomId                                             `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	Participants     []*ListRoomParticipantsResponse_RoomParticipantInfo `protobuf:"bytes,3,rep,name=participants" json:"participants,omitempty"`
	ParticipantCount *int64                                              `protobuf:"varint,5,opt,name=participant_count,json=participantCount" json:"participant_count,omitempty"`
}

func (x *ListRoomParticipantsResponse) Reset() {
	*x = ListRoomParticipantsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_play_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRoomParticipantsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRoomParticipantsResponse) ProtoMessage() {}

func (x *ListRoomParticipantsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_play_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRoomParticipantsResponse.ProtoReflect.Descriptor instead.
func (*ListRoomParticipantsResponse) Descriptor() ([]byte, []int) {
	return file_proto_play_proto_rawDescGZIP(), []int{35}
}

func (x *ListRoomParticipantsResponse) GetErrorCode() int64 {
	if x != nil && x.ErrorCode != nil {
		return *x.ErrorCode
	}
	return 0
}

func (x *ListRoomParticipantsResponse) GetId() *RoomId {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *ListRoomParticipantsResponse) GetParticipants() []*ListRoomParticipantsResponse_RoomParticipantInfo {
	if x != nil {
		return x.Participants
	}
	return nil
}

func (x *ListRoomParticipantsResponse) GetParticipantCount() int64 {
	if x != nil && x.ParticipantCount != nil {
		return *x.ParticipantCount
	}
	return 0
}

type LastTurnInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MoveCount *int64 `protobuf:"varint,1,opt,name=move_count,json=moveCount" json:"move_count,omitempty"`
}

func (x *LastTurnInfo) Reset() {
	*x = LastTurnInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_play_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LastTurnInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LastTurnInfo) ProtoMessage() {}

func (x *LastTurnInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_play_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LastTurnInfo.ProtoReflect.Descriptor instead.
func (*LastTurnInfo) Descriptor() ([]byte, []int) {
	return file_proto_play_proto_rawDescGZIP(), []int{36}
}

func (x *LastTurnInfo) GetMoveCount() int64 {
	if x != nil && x.MoveCount != nil {
		return *x.MoveCount
	}
	return 0
}

type MoveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X        *int64        `protobuf:"varint,1,req,name=x" json:"x,omitempty"`
	Y        *int64        `protobuf:"varint,2,req,name=y" json:"y,omitempty"`
	Col      *Color        `protobuf:"varint,3,req,name=col,enum=openfoxwq.Color" json:"col,omitempty"`
	LastTurn *LastTurnInfo `protobuf:"bytes,4,req,name=last_turn,json=lastTurn" json:"last_turn,omitempty"`
}

func (x *MoveRequest) Reset() {
	*x = MoveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_play_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MoveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveRequest) ProtoMessage() {}

func (x *MoveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_play_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveRequest.ProtoReflect.Descriptor instead.
func (*MoveRequest) Descriptor() ([]byte, []int) {
	return file_proto_play_proto_rawDescGZIP(), []int{37}
}

func (x *MoveRequest) GetX() int64 {
	if x != nil && x.X != nil {
		return *x.X
	}
	return 0
}

func (x *MoveRequest) GetY() int64 {
	if x != nil && x.Y != nil {
		return *x.Y
	}
	return 0
}

func (x *MoveRequest) GetCol() Color {
	if x != nil && x.Col != nil {
		return *x.Col
	}
	return Color_COL_NONE
}

func (x *MoveRequest) GetLastTurn() *LastTurnInfo {
	if x != nil {
		return x.LastTurn
	}
	return nil
}

type MoveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode *int64 `protobuf:"varint,1,opt,name=error_code,json=errorCode" json:"error_code,omitempty"`
}

func (x *MoveResponse) Reset() {
	*x = MoveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_play_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MoveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveResponse) ProtoMessage() {}

func (x *MoveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_play_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveResponse.ProtoReflect.Descriptor instead.
func (*MoveResponse) Descriptor() ([]byte, []int) {
	return file_proto_play_proto_rawDescGZIP(), []int{38}
}

func (x *MoveResponse) GetErrorCode() int64 {
	if x != nil && x.ErrorCode != nil {
		return *x.ErrorCode
	}
	return 0
}

type PassRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LastTurn *LastTurnInfo `protobuf:"bytes,1,req,name=last_turn,json=lastTurn" json:"last_turn,omitempty"`
}

func (x *PassRequest) Reset() {
	*x = PassRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_play_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PassRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PassRequest) ProtoMessage() {}

func (x *PassRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_play_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PassRequest.ProtoReflect.Descriptor instead.
func (*PassRequest) Descriptor() ([]byte, []int) {
	return file_proto_play_proto_rawDescGZIP(), []int{39}
}

func (x *PassRequest) GetLastTurn() *LastTurnInfo {
	if x != nil {
		return x.LastTurn
	}
	return nil
}

type PassResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode *int64 `protobuf:"varint,1,opt,name=error_code,json=errorCode" json:"error_code,omitempty"`
}

func (x *PassResponse) Reset() {
	*x = PassResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_play_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PassResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PassResponse) ProtoMessage() {}

func (x *PassResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_play_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PassResponse.ProtoReflect.Descriptor instead.
func (*PassResponse) Descriptor() ([]byte, []int) {
	return file_proto_play_proto_rawDescGZIP(), []int{40}
}

func (x *PassResponse) GetErrorCode() int64 {
	if x != nil && x.ErrorCode != nil {
		return *x.ErrorCode
	}
	return 0
}

type SyncMatchTimeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ts *int64 `protobuf:"varint,1,req,name=ts" json:"ts,omitempty"`
}

func (x *SyncMatchTimeRequest) Reset() {
	*x = SyncMatchTimeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_play_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncMatchTimeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncMatchTimeRequest) ProtoMessage() {}

func (x *SyncMatchTimeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_play_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncMatchTimeRequest.ProtoReflect.Descriptor instead.
func (*SyncMatchTimeRequest) Descriptor() ([]byte, []int) {
	return file_proto_play_proto_rawDescGZIP(), []int{41}
}

func (x *SyncMatchTimeRequest) GetTs() int64 {
	if x != nil && x.Ts != nil {
		return *x.Ts
	}
	return 0
}

type SyncMatchTimeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ts          *int64                             `protobuf:"varint,1,req,name=ts" json:"ts,omitempty"`
	ServerTs    *int64                             `protobuf:"varint,2,opt,name=server_ts,json=serverTs" json:"server_ts,omitempty"`
	ElapsedInfo *SyncMatchTimeResponse_ElapsedInfo `protobuf:"bytes,3,opt,name=elapsed_info,json=elapsedInfo" json:"elapsed_info,omitempty"`
	RoomId      *RoomId                            `protobuf:"bytes,4,opt,name=room_id,json=roomId" json:"room_id,omitempty"`
}

func (x *SyncMatchTimeResponse) Reset() {
	*x = SyncMatchTimeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_play_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncMatchTimeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncMatchTimeResponse) ProtoMessage() {}

func (x *SyncMatchTimeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_play_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncMatchTimeResponse.ProtoReflect.Descriptor instead.
func (*SyncMatchTimeResponse) Descriptor() ([]byte, []int) {
	return file_proto_play_proto_rawDescGZIP(), []int{42}
}

func (x *SyncMatchTimeResponse) GetTs() int64 {
	if x != nil && x.Ts != nil {
		return *x.Ts
	}
	return 0
}

func (x *SyncMatchTimeResponse) GetServerTs() int64 {
	if x != nil && x.ServerTs != nil {
		return *x.ServerTs
	}
	return 0
}

func (x *SyncMatchTimeResponse) GetElapsedInfo() *SyncMatchTimeResponse_ElapsedInfo {
	if x != nil {
		return x.ElapsedInfo
	}
	return nil
}

func (x *SyncMatchTimeResponse) GetRoomId() *RoomId {
	if x != nil {
		return x.RoomId
	}
	return nil
}

type MatchPlayerTimeState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnknownField_1          *int64 `protobuf:"varint,1,opt,name=unknown_field_1,json=unknownField1" json:"unknown_field_1,omitempty"`
	MainTimeLeftSec         *int64 `protobuf:"varint,2,req,name=main_time_left_sec,json=mainTimeLeftSec" json:"main_time_left_sec,omitempty"`
	ByoyomiPeriodsLeft      *int64 `protobuf:"varint,3,req,name=byoyomi_periods_left,json=byoyomiPeriodsLeft" json:"byoyomi_periods_left,omitempty"`
	ByoyomiDurationSec      *int64 `protobuf:"varint,4,opt,name=byoyomi_duration_sec,json=byoyomiDurationSec" json:"byoyomi_duration_sec,omitempty"`
	PlayerId                *int64 `protobuf:"varint,5,req,name=player_id,json=playerId" json:"player_id,omitempty"`
	DisconnectedTimeLeftSec *int64 `protobuf:"varint,6,opt,name=disconnected_time_left_sec,json=disconnectedTimeLeftSec" json:"disconnected_time_left_sec,omitempty"`
}

func (x *MatchPlayerTimeState) Reset() {
	*x = MatchPlayerTimeState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_play_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchPlayerTimeState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchPlayerTimeState) ProtoMessage() {}

func (x *MatchPlayerTimeState) ProtoReflect() protoreflect.Message {
	mi := &file_proto_play_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchPlayerTimeState.ProtoReflect.Descriptor instead.
func (*MatchPlayerTimeState) Descriptor() ([]byte, []int) {
	return file_proto_play_proto_rawDescGZIP(), []int{43}
}

func (x *MatchPlayerTimeState) GetUnknownField_1() int64 {
	if x != nil && x.UnknownField_1 != nil {
		return *x.UnknownField_1
	}
	return 0
}

func (x *MatchPlayerTimeState) GetMainTimeLeftSec() int64 {
	if x != nil && x.MainTimeLeftSec != nil {
		return *x.MainTimeLeftSec
	}
	return 0
}

func (x *MatchPlayerTimeState) GetByoyomiPeriodsLeft() int64 {
	if x != nil && x.ByoyomiPeriodsLeft != nil {
		return *x.ByoyomiPeriodsLeft
	}
	return 0
}

func (x *MatchPlayerTimeState) GetByoyomiDurationSec() int64 {
	if x != nil && x.ByoyomiDurationSec != nil {
		return *x.ByoyomiDurationSec
	}
	return 0
}

func (x *MatchPlayerTimeState) GetPlayerId() int64 {
	if x != nil && x.PlayerId != nil {
		return *x.PlayerId
	}
	return 0
}

func (x *MatchPlayerTimeState) GetDisconnectedTimeLeftSec() int64 {
	if x != nil && x.DisconnectedTimeLeftSec != nil {
		return *x.DisconnectedTimeLeftSec
	}
	return 0
}

type NextMoveEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X         *int64                `protobuf:"varint,1,opt,name=x" json:"x,omitempty"`
	Y         *int64                `protobuf:"varint,2,opt,name=y" json:"y,omitempty"`
	Col       *Color                `protobuf:"varint,3,opt,name=col,enum=openfoxwq.Color" json:"col,omitempty"`
	TimeState *MatchPlayerTimeState `protobuf:"bytes,4,opt,name=time_state,json=timeState" json:"time_state,omitempty"`
	LastTurn  *LastTurnInfo         `protobuf:"bytes,5,opt,name=last_turn,json=lastTurn" json:"last_turn,omitempty"`
	PlayerId  *int64                `protobuf:"varint,6,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	Ts        *int64                `protobuf:"varint,7,opt,name=ts" json:"ts,omitempty"`
}

func (x *NextMoveEvent) Reset() {
	*x = NextMoveEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_play_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NextMoveEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NextMoveEvent) ProtoMessage() {}

func (x *NextMoveEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_play_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NextMoveEvent.ProtoReflect.Descriptor instead.
func (*NextMoveEvent) Descriptor() ([]byte, []int) {
	return file_proto_play_proto_rawDescGZIP(), []int{44}
}

func (x *NextMoveEvent) GetX() int64 {
	if x != nil && x.X != nil {
		return *x.X
	}
	return 0
}

func (x *NextMoveEvent) GetY() int64 {
	if x != nil && x.Y != nil {
		return *x.Y
	}
	return 0
}

func (x *NextMoveEvent) GetCol() Color {
	if x != nil && x.Col != nil {
		return *x.Col
	}
	return Color_COL_NONE
}

func (x *NextMoveEvent) GetTimeState() *MatchPlayerTimeState {
	if x != nil {
		return x.TimeState
	}
	return nil
}

func (x *NextMoveEvent) GetLastTurn() *LastTurnInfo {
	if x != nil {
		return x.LastTurn
	}
	return nil
}

func (x *NextMoveEvent) GetPlayerId() int64 {
	if x != nil && x.PlayerId != nil {
		return *x.PlayerId
	}
	return 0
}

func (x *NextMoveEvent) GetTs() int64 {
	if x != nil && x.Ts != nil {
		return *x.Ts
	}
	return 0
}

type PassEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimeState      *MatchPlayerTimeState `protobuf:"bytes,1,opt,name=time_state,json=timeState" json:"time_state,omitempty"`
	LastTurn       *LastTurnInfo         `protobuf:"bytes,2,opt,name=last_turn,json=lastTurn" json:"last_turn,omitempty"`
	PlayerId       *int64                `protobuf:"varint,3,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	UnknownField_4 *int64                `protobuf:"varint,4,opt,name=unknown_field_4,json=unknownField4" json:"unknown_field_4,omitempty"`
}

func (x *PassEvent) Reset() {
	*x = PassEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_play_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PassEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PassEvent) ProtoMessage() {}

func (x *PassEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_play_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PassEvent.ProtoReflect.Descriptor instead.
func (*PassEvent) Descriptor() ([]byte, []int) {
	return file_proto_play_proto_rawDescGZIP(), []int{45}
}

func (x *PassEvent) GetTimeState() *MatchPlayerTimeState {
	if x != nil {
		return x.TimeState
	}
	return nil
}

func (x *PassEvent) GetLastTurn() *LastTurnInfo {
	if x != nil {
		return x.LastTurn
	}
	return nil
}

func (x *PassEvent) GetPlayerId() int64 {
	if x != nil && x.PlayerId != nil {
		return *x.PlayerId
	}
	return 0
}

func (x *PassEvent) GetUnknownField_4() int64 {
	if x != nil && x.UnknownField_4 != nil {
		return *x.UnknownField_4
	}
	return 0
}

type CountdownEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnknownField_1     *int64 `protobuf:"varint,1,opt,name=unknown_field_1,json=unknownField1" json:"unknown_field_1,omitempty"`
	MainTimeLeftSec    *int64 `protobuf:"varint,2,req,name=main_time_left_sec,json=mainTimeLeftSec" json:"main_time_left_sec,omitempty"`
	ByoyomiPeriodsLeft *int64 `protobuf:"varint,3,req,name=byoyomi_periods_left,json=byoyomiPeriodsLeft" json:"byoyomi_periods_left,omitempty"`
	ByoyomiTimeLeftSec *int64 `protobuf:"varint,4,opt,name=byoyomi_time_left_sec,json=byoyomiTimeLeftSec" json:"byoyomi_time_left_sec,omitempty"`
	PlayerId           *int64 `protobuf:"varint,5,req,name=player_id,json=playerId" json:"player_id,omitempty"`
	UnknownField_6     *int64 `protobuf:"varint,6,opt,name=unknown_field_6,json=unknownField6" json:"unknown_field_6,omitempty"`
}

func (x *CountdownEvent) Reset() {
	*x = CountdownEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_play_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountdownEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountdownEvent) ProtoMessage() {}

func (x *CountdownEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_play_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountdownEvent.ProtoReflect.Descriptor instead.
func (*CountdownEvent) Descriptor() ([]byte, []int) {
	return file_proto_play_proto_rawDescGZIP(), []int{46}
}

func (x *CountdownEvent) GetUnknownField_1() int64 {
	if x != nil && x.UnknownField_1 != nil {
		return *x.UnknownField_1
	}
	return 0
}

func (x *CountdownEvent) GetMainTimeLeftSec() int64 {
	if x != nil && x.MainTimeLeftSec != nil {
		return *x.MainTimeLeftSec
	}
	return 0
}

func (x *CountdownEvent) GetByoyomiPeriodsLeft() int64 {
	if x != nil && x.ByoyomiPeriodsLeft != nil {
		return *x.ByoyomiPeriodsLeft
	}
	return 0
}

func (x *CountdownEvent) GetByoyomiTimeLeftSec() int64 {
	if x != nil && x.ByoyomiTimeLeftSec != nil {
		return *x.ByoyomiTimeLeftSec
	}
	return 0
}

func (x *CountdownEvent) GetPlayerId() int64 {
	if x != nil && x.PlayerId != nil {
		return *x.PlayerId
	}
	return 0
}

func (x *CountdownEvent) GetUnknownField_6() int64 {
	if x != nil && x.UnknownField_6 != nil {
		return *x.UnknownField_6
	}
	return 0
}

type ResumeCountdownEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnknownField_1 *int64          `protobuf:"varint,1,opt,name=unknown_field_1,json=unknownField1" json:"unknown_field_1,omitempty"`
	Countdown      *CountdownEvent `protobuf:"bytes,2,req,name=countdown" json:"countdown,omitempty"`
}

func (x *ResumeCountdownEvent) Reset() {
	*x = ResumeCountdownEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_play_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResumeCountdownEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResumeCountdownEvent) ProtoMessage() {}

func (x *ResumeCountdownEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_play_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResumeCountdownEvent.ProtoReflect.Descriptor instead.
func (*ResumeCountdownEvent) Descriptor() ([]byte, []int) {
	return file_proto_play_proto_rawDescGZIP(), []int{47}
}

func (x *ResumeCountdownEvent) GetUnknownField_1() int64 {
	if x != nil && x.UnknownField_1 != nil {
		return *x.UnknownField_1
	}
	return 0
}

func (x *ResumeCountdownEvent) GetCountdown() *CountdownEvent {
	if x != nil {
		return x.Countdown
	}
	return nil
}

type RequestCountingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnknownField_1 *int64 `protobuf:"varint,1,opt,name=unknown_field_1,json=unknownField1" json:"unknown_field_1,omitempty"`
}

func (x *RequestCountingRequest) Reset() {
	*x = RequestCountingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_play_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestCountingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestCountingRequest) ProtoMessage() {}

func (x *RequestCountingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_play_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestCountingRequest.ProtoReflect.Descriptor instead.
func (*RequestCountingRequest) Descriptor() ([]byte, []int) {
	return file_proto_play_proto_rawDescGZIP(), []int{48}
}

func (x *RequestCountingRequest) GetUnknownField_1() int64 {
	if x != nil && x.UnknownField_1 != nil {
		return *x.UnknownField_1
	}
	return 0
}

type RequestCountingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode *int64 `protobuf:"varint,1,opt,name=error_code,json=errorCode" json:"error_code,omitempty"`
}

func (x *RequestCountingResponse) Reset() {
	*x = RequestCountingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_play_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestCountingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestCountingResponse) ProtoMessage() {}

func (x *RequestCountingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_play_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestCountingResponse.ProtoReflect.Descriptor instead.
func (*RequestCountingResponse) Descriptor() ([]byte, []int) {
	return file_proto_play_proto_rawDescGZIP(), []int{49}
}

func (x *RequestCountingResponse) GetErrorCode() int64 {
	if x != nil && x.ErrorCode != nil {
		return *x.ErrorCode
	}
	return 0
}

type SendCountingDecisionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode *int64 `protobuf:"varint,1,opt,name=error_code,json=errorCode" json:"error_code,omitempty"`
}

func (x *SendCountingDecisionResponse) Reset() {
	*x = SendCountingDecisionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_play_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendCountingDecisionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendCountingDecisionResponse) ProtoMessage() {}

func (x *SendCountingDecisionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_play_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendCountingDecisionResponse.ProtoReflect.Descriptor instead.
func (*SendCountingDecisionResponse) Descriptor() ([]byte, []int) {
	return file_proto_play_proto_rawDescGZIP(), []int{50}
}

func (x *SendCountingDecisionResponse) GetErrorCode() int64 {
	if x != nil && x.ErrorCode != nil {
		return *x.ErrorCode
	}
	return 0
}

type CountingDecision struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Agree *bool          `protobuf:"varint,1,req,name=agree" json:"agree,omitempty"`
	Stage *CountingStage `protobuf:"varint,2,req,name=stage,enum=openfoxwq.CountingStage" json:"stage,omitempty"`
}

func (x *CountingDecision) Reset() {
	*x = CountingDecision{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_play_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountingDecision) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountingDecision) ProtoMessage() {}

func (x *CountingDecision) ProtoReflect() protoreflect.Message {
	mi := &file_proto_play_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountingDecision.ProtoReflect.Descriptor instead.
func (*CountingDecision) Descriptor() ([]byte, []int) {
	return file_proto_play_proto_rawDescGZIP(), []int{51}
}

func (x *CountingDecision) GetAgree() bool {
	if x != nil && x.Agree != nil {
		return *x.Agree
	}
	return false
}

func (x *CountingDecision) GetStage() CountingStage {
	if x != nil && x.Stage != nil {
		return *x.Stage
	}
	return CountingStage_STAGE_UNKNOWN
}

type CountingEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnknownField_1 *int64         `protobuf:"varint,1,opt,name=unknown_field_1,json=unknownField1" json:"unknown_field_1,omitempty"`
	Stage          *CountingStage `protobuf:"varint,2,req,name=stage,enum=openfoxwq.CountingStage" json:"stage,omitempty"`
	UnknownField_4 []byte         `protobuf:"bytes,4,opt,name=unknown_field_4,json=unknownField4" json:"unknown_field_4,omitempty"`
	Ownership      *string        `protobuf:"bytes,5,opt,name=ownership" json:"ownership,omitempty"`
	UnknownField_6 *float32       `protobuf:"fixed32,6,opt,name=unknown_field_6,json=unknownField6" json:"unknown_field_6,omitempty"`
	Winner         *Color         `protobuf:"varint,8,opt,name=winner,enum=openfoxwq.Color" json:"winner,omitempty"`
	ScoreLead      *float32       `protobuf:"fixed32,9,opt,name=score_lead,json=scoreLead" json:"score_lead,omitempty"`
	TimeLeft       *int64         `protobuf:"varint,7,req,name=time_left,json=timeLeft" json:"time_left,omitempty"` // TODO decode
}

func (x *CountingEvent) Reset() {
	*x = CountingEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_play_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountingEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountingEvent) ProtoMessage() {}

func (x *CountingEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_play_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountingEvent.ProtoReflect.Descriptor instead.
func (*CountingEvent) Descriptor() ([]byte, []int) {
	return file_proto_play_proto_rawDescGZIP(), []int{52}
}

func (x *CountingEvent) GetUnknownField_1() int64 {
	if x != nil && x.UnknownField_1 != nil {
		return *x.UnknownField_1
	}
	return 0
}

func (x *CountingEvent) GetStage() CountingStage {
	if x != nil && x.Stage != nil {
		return *x.Stage
	}
	return CountingStage_STAGE_UNKNOWN
}

func (x *CountingEvent) GetUnknownField_4() []byte {
	if x != nil {
		return x.UnknownField_4
	}
	return nil
}

func (x *CountingEvent) GetOwnership() string {
	if x != nil && x.Ownership != nil {
		return *x.Ownership
	}
	return ""
}

func (x *CountingEvent) GetUnknownField_6() float32 {
	if x != nil && x.UnknownField_6 != nil {
		return *x.UnknownField_6
	}
	return 0
}

func (x *CountingEvent) GetWinner() Color {
	if x != nil && x.Winner != nil {
		return *x.Winner
	}
	return Color_COL_NONE
}

func (x *CountingEvent) GetScoreLead() float32 {
	if x != nil && x.ScoreLead != nil {
		return *x.ScoreLead
	}
	return 0
}

func (x *CountingEvent) GetTimeLeft() int64 {
	if x != nil && x.TimeLeft != nil {
		return *x.TimeLeft
	}
	return 0
}

type ResignRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnknownField_1 *int64 `protobuf:"varint,1,opt,name=unknown_field_1,json=unknownField1" json:"unknown_field_1,omitempty"`
}

func (x *ResignRequest) Reset() {
	*x = ResignRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_play_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResignRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResignRequest) ProtoMessage() {}

func (x *ResignRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_play_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResignRequest.ProtoReflect.Descriptor instead.
func (*ResignRequest) Descriptor() ([]byte, []int) {
	return file_proto_play_proto_rawDescGZIP(), []int{53}
}

func (x *ResignRequest) GetUnknownField_1() int64 {
	if x != nil && x.UnknownField_1 != nil {
		return *x.UnknownField_1
	}
	return 0
}

type ResignResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnknownField_1 *int64 `protobuf:"varint,1,opt,name=unknown_field_1,json=unknownField1" json:"unknown_field_1,omitempty"`
}

func (x *ResignResponse) Reset() {
	*x = ResignResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_play_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResignResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResignResponse) ProtoMessage() {}

func (x *ResignResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_play_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResignResponse.ProtoReflect.Descriptor instead.
func (*ResignResponse) Descriptor() ([]byte, []int) {
	return file_proto_play_proto_rawDescGZIP(), []int{54}
}

func (x *ResignResponse) GetUnknownField_1() int64 {
	if x != nil && x.UnknownField_1 != nil {
		return *x.UnknownField_1
	}
	return 0
}

type GameResultEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnknownField_1 *int64  `protobuf:"varint,1,opt,name=unknown_field_1,json=unknownField1" json:"unknown_field_1,omitempty"`
	Winner         *Color  `protobuf:"varint,2,req,name=winner,enum=openfoxwq.Color" json:"winner,omitempty"`
	ScoreLead      *int64  `protobuf:"varint,3,req,name=score_lead,json=scoreLead" json:"score_lead,omitempty"`
	UnknownField_4 *int64  `protobuf:"varint,4,opt,name=unknown_field_4,json=unknownField4" json:"unknown_field_4,omitempty"`
	Message        *string `protobuf:"bytes,5,opt,name=message" json:"message,omitempty"`
	Ts_10          *int64  `protobuf:"varint,10,opt,name=ts_10,json=ts10" json:"ts_10,omitempty"`
	Ts_12          *int64  `protobuf:"varint,12,opt,name=ts_12,json=ts12" json:"ts_12,omitempty"`
	Ts_13          *int64  `protobuf:"varint,13,opt,name=ts_13,json=ts13" json:"ts_13,omitempty"`
}

func (x *GameResultEvent) Reset() {
	*x = GameResultEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_play_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameResultEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameResultEvent) ProtoMessage() {}

func (x *GameResultEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_play_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameResultEvent.ProtoReflect.Descriptor instead.
func (*GameResultEvent) Descriptor() ([]byte, []int) {
	return file_proto_play_proto_rawDescGZIP(), []int{55}
}

func (x *GameResultEvent) GetUnknownField_1() int64 {
	if x != nil && x.UnknownField_1 != nil {
		return *x.UnknownField_1
	}
	return 0
}

func (x *GameResultEvent) GetWinner() Color {
	if x != nil && x.Winner != nil {
		return *x.Winner
	}
	return Color_COL_NONE
}

func (x *GameResultEvent) GetScoreLead() int64 {
	if x != nil && x.ScoreLead != nil {
		return *x.ScoreLead
	}
	return 0
}

func (x *GameResultEvent) GetUnknownField_4() int64 {
	if x != nil && x.UnknownField_4 != nil {
		return *x.UnknownField_4
	}
	return 0
}

func (x *GameResultEvent) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

func (x *GameResultEvent) GetTs_10() int64 {
	if x != nil && x.Ts_10 != nil {
		return *x.Ts_10
	}
	return 0
}

func (x *GameResultEvent) GetTs_12() int64 {
	if x != nil && x.Ts_12 != nil {
		return *x.Ts_12
	}
	return 0
}

func (x *GameResultEvent) GetTs_13() int64 {
	if x != nil && x.Ts_13 != nil {
		return *x.Ts_13
	}
	return 0
}

type GetPlayerInfoResponse_RegisterInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId          *int64   `protobuf:"varint,1,req,name=player_id,json=playerId" json:"player_id,omitempty"`
	NameNative        *string  `protobuf:"bytes,4,req,name=name_native,json=nameNative" json:"name_native,omitempty"`
	Name              *string  `protobuf:"bytes,5,req,name=name" json:"name,omitempty"`
	Country           *Country `protobuf:"varint,7,req,name=country,enum=openfoxwq.Country" json:"country,omitempty"`
	MemberSinceUnixTs *int64   `protobuf:"varint,8,req,name=member_since_unix_ts,json=memberSinceUnixTs" json:"member_since_unix_ts,omitempty"`
	Sex               *Sex     `protobuf:"varint,9,req,name=sex,enum=openfoxwq.Sex" json:"sex,omitempty"`
}

func (x *GetPlayerInfoResponse_RegisterInfo) Reset() {
	*x = GetPlayerInfoResponse_RegisterInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_play_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlayerInfoResponse_RegisterInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlayerInfoResponse_RegisterInfo) ProtoMessage() {}

func (x *GetPlayerInfoResponse_RegisterInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_play_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlayerInfoResponse_RegisterInfo.ProtoReflect.Descriptor instead.
func (*GetPlayerInfoResponse_RegisterInfo) Descriptor() ([]byte, []int) {
	return file_proto_play_proto_rawDescGZIP(), []int{5, 0}
}

func (x *GetPlayerInfoResponse_RegisterInfo) GetPlayerId() int64 {
	if x != nil && x.PlayerId != nil {
		return *x.PlayerId
	}
	return 0
}

func (x *GetPlayerInfoResponse_RegisterInfo) GetNameNative() string {
	if x != nil && x.NameNative != nil {
		return *x.NameNative
	}
	return ""
}

func (x *GetPlayerInfoResponse_RegisterInfo) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GetPlayerInfoResponse_RegisterInfo) GetCountry() Country {
	if x != nil && x.Country != nil {
		return *x.Country
	}
	return Country_UNKNOWN
}

func (x *GetPlayerInfoResponse_RegisterInfo) GetMemberSinceUnixTs() int64 {
	if x != nil && x.MemberSinceUnixTs != nil {
		return *x.MemberSinceUnixTs
	}
	return 0
}

func (x *GetPlayerInfoResponse_RegisterInfo) GetSex() Sex {
	if x != nil && x.Sex != nil {
		return *x.Sex
	}
	return Sex_SEX_MALE
}

type GetPlayerInfoResponse_RecentRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RankRequirements *GetPlayerInfoResponse_RecentRecord_RankRequirements `protobuf:"bytes,1,opt,name=rank_requirements,json=rankRequirements" json:"rank_requirements,omitempty"`
	Streak           *string                                              `protobuf:"bytes,2,opt,name=streak" json:"streak,omitempty"`
	UnknownField_3   *string                                              `protobuf:"bytes,3,opt,name=unknown_field_3,json=unknownField3" json:"unknown_field_3,omitempty"`
}

func (x *GetPlayerInfoResponse_RecentRecord) Reset() {
	*x = GetPlayerInfoResponse_RecentRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_play_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlayerInfoResponse_RecentRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlayerInfoResponse_RecentRecord) ProtoMessage() {}

func (x *GetPlayerInfoResponse_RecentRecord) ProtoReflect() protoreflect.Message {
	mi := &file_proto_play_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlayerInfoResponse_RecentRecord.ProtoReflect.Descriptor instead.
func (*GetPlayerInfoResponse_RecentRecord) Descriptor() ([]byte, []int) {
	return file_proto_play_proto_rawDescGZIP(), []int{5, 1}
}

func (x *GetPlayerInfoResponse_RecentRecord) GetRankRequirements() *GetPlayerInfoResponse_RecentRecord_RankRequirements {
	if x != nil {
		return x.RankRequirements
	}
	return nil
}

func (x *GetPlayerInfoResponse_RecentRecord) GetStreak() string {
	if x != nil && x.Streak != nil {
		return *x.Streak
	}
	return ""
}

func (x *GetPlayerInfoResponse_RecentRecord) GetUnknownField_3() string {
	if x != nil && x.UnknownField_3 != nil {
		return *x.UnknownField_3
	}
	return ""
}

type GetPlayerInfoResponse_OverallResults struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rating  *int64 `protobuf:"varint,1,opt,name=rating" json:"rating,omitempty"`
	Wr      *int64 `protobuf:"varint,2,opt,name=wr" json:"wr,omitempty"`
	Stamina *int64 `protobuf:"varint,3,opt,name=stamina" json:"stamina,omitempty"`
}

func (x *GetPlayerInfoResponse_OverallResults) Reset() {
	*x = GetPlayerInfoResponse_OverallResults{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_play_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlayerInfoResponse_OverallResults) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlayerInfoResponse_OverallResults) ProtoMessage() {}

func (x *GetPlayerInfoResponse_OverallResults) ProtoReflect() protoreflect.Message {
	mi := &file_proto_play_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlayerInfoResponse_OverallResults.ProtoReflect.Descriptor instead.
func (*GetPlayerInfoResponse_OverallResults) Descriptor() ([]byte, []int) {
	return file_proto_play_proto_rawDescGZIP(), []int{5, 2}
}

func (x *GetPlayerInfoResponse_OverallResults) GetRating() int64 {
	if x != nil && x.Rating != nil {
		return *x.Rating
	}
	return 0
}

func (x *GetPlayerInfoResponse_OverallResults) GetWr() int64 {
	if x != nil && x.Wr != nil {
		return *x.Wr
	}
	return 0
}

func (x *GetPlayerInfoResponse_OverallResults) GetStamina() int64 {
	if x != nil && x.Stamina != nil {
		return *x.Stamina
	}
	return 0
}

type GetPlayerInfoResponse_ProInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnknownField_1 *int64  `protobuf:"varint,1,opt,name=unknown_field_1,json=unknownField1" json:"unknown_field_1,omitempty"`
	UnknownField_2 *int64  `protobuf:"varint,2,opt,name=unknown_field_2,json=unknownField2" json:"unknown_field_2,omitempty"`
	Name1          *string `protobuf:"bytes,3,opt,name=name1" json:"name1,omitempty"`
	Name2          *string `protobuf:"bytes,4,opt,name=name2" json:"name2,omitempty"`
	Rank           *Rank   `protobuf:"varint,5,opt,name=rank,enum=openfoxwq.Rank" json:"rank,omitempty"`
	Association    *int64  `protobuf:"varint,6,opt,name=association" json:"association,omitempty"` // some of them match country, e.g. 86
}

func (x *GetPlayerInfoResponse_ProInfo) Reset() {
	*x = GetPlayerInfoResponse_ProInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_play_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlayerInfoResponse_ProInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlayerInfoResponse_ProInfo) ProtoMessage() {}

func (x *GetPlayerInfoResponse_ProInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_play_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlayerInfoResponse_ProInfo.ProtoReflect.Descriptor instead.
func (*GetPlayerInfoResponse_ProInfo) Descriptor() ([]byte, []int) {
	return file_proto_play_proto_rawDescGZIP(), []int{5, 3}
}

func (x *GetPlayerInfoResponse_ProInfo) GetUnknownField_1() int64 {
	if x != nil && x.UnknownField_1 != nil {
		return *x.UnknownField_1
	}
	return 0
}

func (x *GetPlayerInfoResponse_ProInfo) GetUnknownField_2() int64 {
	if x != nil && x.UnknownField_2 != nil {
		return *x.UnknownField_2
	}
	return 0
}

func (x *GetPlayerInfoResponse_ProInfo) GetName1() string {
	if x != nil && x.Name1 != nil {
		return *x.Name1
	}
	return ""
}

func (x *GetPlayerInfoResponse_ProInfo) GetName2() string {
	if x != nil && x.Name2 != nil {
		return *x.Name2
	}
	return ""
}

func (x *GetPlayerInfoResponse_ProInfo) GetRank() Rank {
	if x != nil && x.Rank != nil {
		return *x.Rank
	}
	return Rank_RANK_18K
}

func (x *GetPlayerInfoResponse_ProInfo) GetAssociation() int64 {
	if x != nil && x.Association != nil {
		return *x.Association
	}
	return 0
}

type GetPlayerInfoResponse_PerformanceRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rank    *Rank  `protobuf:"varint,1,opt,name=rank,enum=openfoxwq.Rank" json:"rank,omitempty"`
	Wr      *int64 `protobuf:"varint,2,opt,name=wr" json:"wr,omitempty"`
	Stamina *int64 `protobuf:"varint,3,opt,name=stamina" json:"stamina,omitempty"`
	Foxcoin *int64 `protobuf:"varint,5,opt,name=foxcoin" json:"foxcoin,omitempty"`
}

func (x *GetPlayerInfoResponse_PerformanceRecord) Reset() {
	*x = GetPlayerInfoResponse_PerformanceRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_play_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlayerInfoResponse_PerformanceRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlayerInfoResponse_PerformanceRecord) ProtoMessage() {}

func (x *GetPlayerInfoResponse_PerformanceRecord) ProtoReflect() protoreflect.Message {
	mi := &file_proto_play_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlayerInfoResponse_PerformanceRecord.ProtoReflect.Descriptor instead.
func (*GetPlayerInfoResponse_PerformanceRecord) Descriptor() ([]byte, []int) {
	return file_proto_play_proto_rawDescGZIP(), []int{5, 4}
}

func (x *GetPlayerInfoResponse_PerformanceRecord) GetRank() Rank {
	if x != nil && x.Rank != nil {
		return *x.Rank
	}
	return Rank_RANK_18K
}

func (x *GetPlayerInfoResponse_PerformanceRecord) GetWr() int64 {
	if x != nil && x.Wr != nil {
		return *x.Wr
	}
	return 0
}

func (x *GetPlayerInfoResponse_PerformanceRecord) GetStamina() int64 {
	if x != nil && x.Stamina != nil {
		return *x.Stamina
	}
	return 0
}

func (x *GetPlayerInfoResponse_PerformanceRecord) GetFoxcoin() int64 {
	if x != nil && x.Foxcoin != nil {
		return *x.Foxcoin
	}
	return 0
}

type GetPlayerInfoResponse_Results struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type   *GetPlayerInfoResponse_ResultsType `protobuf:"varint,1,req,name=type,enum=openfoxwq.GetPlayerInfoResponse_ResultsType" json:"type,omitempty"`
	Wins   *int64                             `protobuf:"varint,2,req,name=wins" json:"wins,omitempty"`
	Losses *int64                             `protobuf:"varint,3,req,name=losses" json:"losses,omitempty"`
	Draws  *int64                             `protobuf:"varint,4,req,name=draws" json:"draws,omitempty"`
}

func (x *GetPlayerInfoResponse_Results) Reset() {
	*x = GetPlayerInfoResponse_Results{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_play_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlayerInfoResponse_Results) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlayerInfoResponse_Results) ProtoMessage() {}

func (x *GetPlayerInfoResponse_Results) ProtoReflect() protoreflect.Message {
	mi := &file_proto_play_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlayerInfoResponse_Results.ProtoReflect.Descriptor instead.
func (*GetPlayerInfoResponse_Results) Descriptor() ([]byte, []int) {
	return file_proto_play_proto_rawDescGZIP(), []int{5, 5}
}

func (x *GetPlayerInfoResponse_Results) GetType() GetPlayerInfoResponse_ResultsType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return GetPlayerInfoResponse_OVERALL
}

func (x *GetPlayerInfoResponse_Results) GetWins() int64 {
	if x != nil && x.Wins != nil {
		return *x.Wins
	}
	return 0
}

func (x *GetPlayerInfoResponse_Results) GetLosses() int64 {
	if x != nil && x.Losses != nil {
		return *x.Losses
	}
	return 0
}

func (x *GetPlayerInfoResponse_Results) GetDraws() int64 {
	if x != nil && x.Draws != nil {
		return *x.Draws
	}
	return 0
}

type GetPlayerInfoResponse_Rooms struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rooms          []*GetPlayerInfoResponse_Rooms_Room `protobuf:"bytes,1,rep,name=rooms" json:"rooms,omitempty"`
	UnknownField_2 *int64                              `protobuf:"varint,2,opt,name=unknown_field_2,json=unknownField2" json:"unknown_field_2,omitempty"`
	UnknownField_3 *int64                              `protobuf:"varint,3,opt,name=unknown_field_3,json=unknownField3" json:"unknown_field_3,omitempty"`
	UnknownField_4 *int64                              `protobuf:"varint,4,opt,name=unknown_field_4,json=unknownField4" json:"unknown_field_4,omitempty"`
}

func (x *GetPlayerInfoResponse_Rooms) Reset() {
	*x = GetPlayerInfoResponse_Rooms{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_play_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlayerInfoResponse_Rooms) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlayerInfoResponse_Rooms) ProtoMessage() {}

func (x *GetPlayerInfoResponse_Rooms) ProtoReflect() protoreflect.Message {
	mi := &file_proto_play_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlayerInfoResponse_Rooms.ProtoReflect.Descriptor instead.
func (*GetPlayerInfoResponse_Rooms) Descriptor() ([]byte, []int) {
	return file_proto_play_proto_rawDescGZIP(), []int{5, 6}
}

func (x *GetPlayerInfoResponse_Rooms) GetRooms() []*GetPlayerInfoResponse_Rooms_Room {
	if x != nil {
		return x.Rooms
	}
	return nil
}

func (x *GetPlayerInfoResponse_Rooms) GetUnknownField_2() int64 {
	if x != nil && x.UnknownField_2 != nil {
		return *x.UnknownField_2
	}
	return 0
}

func (x *GetPlayerInfoResponse_Rooms) GetUnknownField_3() int64 {
	if x != nil && x.UnknownField_3 != nil {
		return *x.UnknownField_3
	}
	return 0
}

func (x *GetPlayerInfoResponse_Rooms) GetUnknownField_4() int64 {
	if x != nil && x.UnknownField_4 != nil {
		return *x.UnknownField_4
	}
	return 0
}

type GetPlayerInfoResponse_MembershipInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type       *MembershipType `protobuf:"varint,1,opt,name=type,enum=openfoxwq.MembershipType" json:"type,omitempty"`
	ValidUntil *int64          `protobuf:"varint,2,opt,name=valid_until,json=validUntil" json:"valid_until,omitempty"`
}

func (x *GetPlayerInfoResponse_MembershipInfo) Reset() {
	*x = GetPlayerInfoResponse_MembershipInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_play_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlayerInfoResponse_MembershipInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlayerInfoResponse_MembershipInfo) ProtoMessage() {}

func (x *GetPlayerInfoResponse_MembershipInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_play_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlayerInfoResponse_MembershipInfo.ProtoReflect.Descriptor instead.
func (*GetPlayerInfoResponse_MembershipInfo) Descriptor() ([]byte, []int) {
	return file_proto_play_proto_rawDescGZIP(), []int{5, 7}
}

func (x *GetPlayerInfoResponse_MembershipInfo) GetType() MembershipType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return MembershipType_MEMBERSHIP_NONE
}

func (x *GetPlayerInfoResponse_MembershipInfo) GetValidUntil() int64 {
	if x != nil && x.ValidUntil != nil {
		return *x.ValidUntil
	}
	return 0
}

type GetPlayerInfoResponse_PlayerFlair struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Flair *Flair `protobuf:"varint,1,opt,name=flair,enum=openfoxwq.Flair" json:"flair,omitempty"`
	Ai    *bool  `protobuf:"varint,2,opt,name=ai" json:"ai,omitempty"`
}

func (x *GetPlayerInfoResponse_PlayerFlair) Reset() {
	*x = GetPlayerInfoResponse_PlayerFlair{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_play_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlayerInfoResponse_PlayerFlair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlayerInfoResponse_PlayerFlair) ProtoMessage() {}

func (x *GetPlayerInfoResponse_PlayerFlair) ProtoReflect() protoreflect.Message {
	mi := &file_proto_play_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlayerInfoResponse_PlayerFlair.ProtoReflect.Descriptor instead.
func (*GetPlayerInfoResponse_PlayerFlair) Descriptor() ([]byte, []int) {
	return file_proto_play_proto_rawDescGZIP(), []int{5, 8}
}

func (x *GetPlayerInfoResponse_PlayerFlair) GetFlair() Flair {
	if x != nil && x.Flair != nil {
		return *x.Flair
	}
	return Flair_FLAIR_NONE
}

func (x *GetPlayerInfoResponse_PlayerFlair) GetAi() bool {
	if x != nil && x.Ai != nil {
		return *x.Ai
	}
	return false
}

type GetPlayerInfoResponse_Unknown10 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetPlayerInfoResponse_Unknown10) Reset() {
	*x = GetPlayerInfoResponse_Unknown10{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_play_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlayerInfoResponse_Unknown10) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlayerInfoResponse_Unknown10) ProtoMessage() {}

func (x *GetPlayerInfoResponse_Unknown10) ProtoReflect() protoreflect.Message {
	mi := &file_proto_play_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlayerInfoResponse_Unknown10.ProtoReflect.Descriptor instead.
func (*GetPlayerInfoResponse_Unknown10) Descriptor() ([]byte, []int) {
	return file_proto_play_proto_rawDescGZIP(), []int{5, 9}
}

type GetPlayerInfoResponse_Unknown11 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetPlayerInfoResponse_Unknown11) Reset() {
	*x = GetPlayerInfoResponse_Unknown11{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_play_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlayerInfoResponse_Unknown11) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlayerInfoResponse_Unknown11) ProtoMessage() {}

func (x *GetPlayerInfoResponse_Unknown11) ProtoReflect() protoreflect.Message {
	mi := &file_proto_play_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlayerInfoResponse_Unknown11.ProtoReflect.Descriptor instead.
func (*GetPlayerInfoResponse_Unknown11) Descriptor() ([]byte, []int) {
	return file_proto_play_proto_rawDescGZIP(), []int{5, 10}
}

type GetPlayerInfoResponse_Unknown19 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetPlayerInfoResponse_Unknown19) Reset() {
	*x = GetPlayerInfoResponse_Unknown19{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_play_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlayerInfoResponse_Unknown19) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlayerInfoResponse_Unknown19) ProtoMessage() {}

func (x *GetPlayerInfoResponse_Unknown19) ProtoReflect() protoreflect.Message {
	mi := &file_proto_play_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlayerInfoResponse_Unknown19.ProtoReflect.Descriptor instead.
func (*GetPlayerInfoResponse_Unknown19) Descriptor() ([]byte, []int) {
	return file_proto_play_proto_rawDescGZIP(), []int{5, 11}
}

type GetPlayerInfoResponse_Unknown22 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnknownField_1 *int64  `protobuf:"varint,1,opt,name=unknown_field_1,json=unknownField1" json:"unknown_field_1,omitempty"`
	UnknownField_2 *int64  `protobuf:"varint,2,opt,name=unknown_field_2,json=unknownField2" json:"unknown_field_2,omitempty"`
	UnknownField_3 *string `protobuf:"bytes,3,opt,name=unknown_field_3,json=unknownField3" json:"unknown_field_3,omitempty"`
	UnknownField_4 *string `protobuf:"bytes,4,opt,name=unknown_field_4,json=unknownField4" json:"unknown_field_4,omitempty"`
}

func (x *GetPlayerInfoResponse_Unknown22) Reset() {
	*x = GetPlayerInfoResponse_Unknown22{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_play_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlayerInfoResponse_Unknown22) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlayerInfoResponse_Unknown22) ProtoMessage() {}

func (x *GetPlayerInfoResponse_Unknown22) ProtoReflect() protoreflect.Message {
	mi := &file_proto_play_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlayerInfoResponse_Unknown22.ProtoReflect.Descriptor instead.
func (*GetPlayerInfoResponse_Unknown22) Descriptor() ([]byte, []int) {
	return file_proto_play_proto_rawDescGZIP(), []int{5, 12}
}

func (x *GetPlayerInfoResponse_Unknown22) GetUnknownField_1() int64 {
	if x != nil && x.UnknownField_1 != nil {
		return *x.UnknownField_1
	}
	return 0
}

func (x *GetPlayerInfoResponse_Unknown22) GetUnknownField_2() int64 {
	if x != nil && x.UnknownField_2 != nil {
		return *x.UnknownField_2
	}
	return 0
}

func (x *GetPlayerInfoResponse_Unknown22) GetUnknownField_3() string {
	if x != nil && x.UnknownField_3 != nil {
		return *x.UnknownField_3
	}
	return ""
}

func (x *GetPlayerInfoResponse_Unknown22) GetUnknownField_4() string {
	if x != nil && x.UnknownField_4 != nil {
		return *x.UnknownField_4
	}
	return ""
}

type GetPlayerInfoResponse_Unknown23 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetPlayerInfoResponse_Unknown23) Reset() {
	*x = GetPlayerInfoResponse_Unknown23{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_play_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlayerInfoResponse_Unknown23) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlayerInfoResponse_Unknown23) ProtoMessage() {}

func (x *GetPlayerInfoResponse_Unknown23) ProtoReflect() protoreflect.Message {
	mi := &file_proto_play_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlayerInfoResponse_Unknown23.ProtoReflect.Descriptor instead.
func (*GetPlayerInfoResponse_Unknown23) Descriptor() ([]byte, []int) {
	return file_proto_play_proto_rawDescGZIP(), []int{5, 13}
}

type GetPlayerInfoResponse_RecentRecord_RankRequirements struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Up1   *int64 `protobuf:"varint,1,opt,name=up1" json:"up1,omitempty"`
	Up2   *int64 `protobuf:"varint,2,opt,name=up2" json:"up2,omitempty"`
	Down1 *int64 `protobuf:"varint,3,opt,name=down1" json:"down1,omitempty"`
	Down2 *int64 `protobuf:"varint,4,opt,name=down2" json:"down2,omitempty"`
}

func (x *GetPlayerInfoResponse_RecentRecord_RankRequirements) Reset() {
	*x = GetPlayerInfoResponse_RecentRecord_RankRequirements{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_play_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlayerInfoResponse_RecentRecord_RankRequirements) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlayerInfoResponse_RecentRecord_RankRequirements) ProtoMessage() {}

func (x *GetPlayerInfoResponse_RecentRecord_RankRequirements) ProtoReflect() protoreflect.Message {
	mi := &file_proto_play_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlayerInfoResponse_RecentRecord_RankRequirements.ProtoReflect.Descriptor instead.
func (*GetPlayerInfoResponse_RecentRecord_RankRequirements) Descriptor() ([]byte, []int) {
	return file_proto_play_proto_rawDescGZIP(), []int{5, 1, 0}
}

func (x *GetPlayerInfoResponse_RecentRecord_RankRequirements) GetUp1() int64 {
	if x != nil && x.Up1 != nil {
		return *x.Up1
	}
	return 0
}

func (x *GetPlayerInfoResponse_RecentRecord_RankRequirements) GetUp2() int64 {
	if x != nil && x.Up2 != nil {
		return *x.Up2
	}
	return 0
}

func (x *GetPlayerInfoResponse_RecentRecord_RankRequirements) GetDown1() int64 {
	if x != nil && x.Down1 != nil {
		return *x.Down1
	}
	return 0
}

func (x *GetPlayerInfoResponse_RecentRecord_RankRequirements) GetDown2() int64 {
	if x != nil && x.Down2 != nil {
		return *x.Down2
	}
	return 0
}

type GetPlayerInfoResponse_Rooms_Room struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             *RoomId                                           `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	UnknownField_2 *int64                                            `protobuf:"varint,2,opt,name=unknown_field_2,json=unknownField2" json:"unknown_field_2,omitempty"` // 1 == watch, 2 == match ?
	Player1        *GetPlayerInfoResponse_Rooms_Room_ShortPlayerInfo `protobuf:"bytes,3,opt,name=player1" json:"player1,omitempty"`
	Player2        *GetPlayerInfoResponse_Rooms_Room_ShortPlayerInfo `protobuf:"bytes,4,opt,name=player2" json:"player2,omitempty"`
}

func (x *GetPlayerInfoResponse_Rooms_Room) Reset() {
	*x = GetPlayerInfoResponse_Rooms_Room{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_play_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlayerInfoResponse_Rooms_Room) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlayerInfoResponse_Rooms_Room) ProtoMessage() {}

func (x *GetPlayerInfoResponse_Rooms_Room) ProtoReflect() protoreflect.Message {
	mi := &file_proto_play_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlayerInfoResponse_Rooms_Room.ProtoReflect.Descriptor instead.
func (*GetPlayerInfoResponse_Rooms_Room) Descriptor() ([]byte, []int) {
	return file_proto_play_proto_rawDescGZIP(), []int{5, 6, 0}
}

func (x *GetPlayerInfoResponse_Rooms_Room) GetId() *RoomId {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *GetPlayerInfoResponse_Rooms_Room) GetUnknownField_2() int64 {
	if x != nil && x.UnknownField_2 != nil {
		return *x.UnknownField_2
	}
	return 0
}

func (x *GetPlayerInfoResponse_Rooms_Room) GetPlayer1() *GetPlayerInfoResponse_Rooms_Room_ShortPlayerInfo {
	if x != nil {
		return x.Player1
	}
	return nil
}

func (x *GetPlayerInfoResponse_Rooms_Room) GetPlayer2() *GetPlayerInfoResponse_Rooms_Room_ShortPlayerInfo {
	if x != nil {
		return x.Player2
	}
	return nil
}

type GetPlayerInfoResponse_Rooms_Room_ShortPlayerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId *int64   `protobuf:"varint,1,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	Rank     *Rank    `protobuf:"varint,2,opt,name=rank,enum=openfoxwq.Rank" json:"rank,omitempty"`
	Country  *Country `protobuf:"varint,3,opt,name=country,enum=openfoxwq.Country" json:"country,omitempty"`
	Name4    *string  `protobuf:"bytes,4,opt,name=name4" json:"name4,omitempty"`
	Name5    *string  `protobuf:"bytes,5,opt,name=name5" json:"name5,omitempty"`
}

func (x *GetPlayerInfoResponse_Rooms_Room_ShortPlayerInfo) Reset() {
	*x = GetPlayerInfoResponse_Rooms_Room_ShortPlayerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_play_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlayerInfoResponse_Rooms_Room_ShortPlayerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlayerInfoResponse_Rooms_Room_ShortPlayerInfo) ProtoMessage() {}

func (x *GetPlayerInfoResponse_Rooms_Room_ShortPlayerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_play_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlayerInfoResponse_Rooms_Room_ShortPlayerInfo.ProtoReflect.Descriptor instead.
func (*GetPlayerInfoResponse_Rooms_Room_ShortPlayerInfo) Descriptor() ([]byte, []int) {
	return file_proto_play_proto_rawDescGZIP(), []int{5, 6, 0, 0}
}

func (x *GetPlayerInfoResponse_Rooms_Room_ShortPlayerInfo) GetPlayerId() int64 {
	if x != nil && x.PlayerId != nil {
		return *x.PlayerId
	}
	return 0
}

func (x *GetPlayerInfoResponse_Rooms_Room_ShortPlayerInfo) GetRank() Rank {
	if x != nil && x.Rank != nil {
		return *x.Rank
	}
	return Rank_RANK_18K
}

func (x *GetPlayerInfoResponse_Rooms_Room_ShortPlayerInfo) GetCountry() Country {
	if x != nil && x.Country != nil {
		return *x.Country
	}
	return Country_UNKNOWN
}

func (x *GetPlayerInfoResponse_Rooms_Room_ShortPlayerInfo) GetName4() string {
	if x != nil && x.Name4 != nil {
		return *x.Name4
	}
	return ""
}

func (x *GetPlayerInfoResponse_Rooms_Room_ShortPlayerInfo) GetName5() string {
	if x != nil && x.Name5 != nil {
		return *x.Name5
	}
	return ""
}

type UnknownPlayRequest1_UnknownPlayRequest1Nested1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MacAddress *string `protobuf:"bytes,1,req,name=mac_address,json=macAddress" json:"mac_address,omitempty"`
}

func (x *UnknownPlayRequest1_UnknownPlayRequest1Nested1) Reset() {
	*x = UnknownPlayRequest1_UnknownPlayRequest1Nested1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_play_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnknownPlayRequest1_UnknownPlayRequest1Nested1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnknownPlayRequest1_UnknownPlayRequest1Nested1) ProtoMessage() {}

func (x *UnknownPlayRequest1_UnknownPlayRequest1Nested1) ProtoReflect() protoreflect.Message {
	mi := &file_proto_play_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnknownPlayRequest1_UnknownPlayRequest1Nested1.ProtoReflect.Descriptor instead.
func (*UnknownPlayRequest1_UnknownPlayRequest1Nested1) Descriptor() ([]byte, []int) {
	return file_proto_play_proto_rawDescGZIP(), []int{15, 0}
}

func (x *UnknownPlayRequest1_UnknownPlayRequest1Nested1) GetMacAddress() string {
	if x != nil && x.MacAddress != nil {
		return *x.MacAddress
	}
	return ""
}

type GetRoomInfoResponse_Unknown2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnknownField_1 *int64 `protobuf:"varint,1,opt,name=unknown_field_1,json=unknownField1" json:"unknown_field_1,omitempty"` // sample values: 30017
	UnknownField_2 *int64 `protobuf:"varint,2,opt,name=unknown_field_2,json=unknownField2" json:"unknown_field_2,omitempty"` // sample values: 1, 3, 4, 5
}

func (x *GetRoomInfoResponse_Unknown2) Reset() {
	*x = GetRoomInfoResponse_Unknown2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_play_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoomInfoResponse_Unknown2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoomInfoResponse_Unknown2) ProtoMessage() {}

func (x *GetRoomInfoResponse_Unknown2) ProtoReflect() protoreflect.Message {
	mi := &file_proto_play_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoomInfoResponse_Unknown2.ProtoReflect.Descriptor instead.
func (*GetRoomInfoResponse_Unknown2) Descriptor() ([]byte, []int) {
	return file_proto_play_proto_rawDescGZIP(), []int{18, 0}
}

func (x *GetRoomInfoResponse_Unknown2) GetUnknownField_1() int64 {
	if x != nil && x.UnknownField_1 != nil {
		return *x.UnknownField_1
	}
	return 0
}

func (x *GetRoomInfoResponse_Unknown2) GetUnknownField_2() int64 {
	if x != nil && x.UnknownField_2 != nil {
		return *x.UnknownField_2
	}
	return 0
}

type GetRoomInfoResponse_PlayerEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             *int64   `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Name           *string  `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Rank           *Rank    `protobuf:"varint,3,opt,name=rank,enum=openfoxwq.Rank" json:"rank,omitempty"`
	MainTime       *int64   `protobuf:"varint,9,opt,name=main_time,json=mainTime" json:"main_time,omitempty"`
	ByoyomiPeriods *int64   `protobuf:"varint,10,opt,name=byoyomi_periods,json=byoyomiPeriods" json:"byoyomi_periods,omitempty"`
	ByoyomiTime    *int64   `protobuf:"varint,11,opt,name=byoyomi_time,json=byoyomiTime" json:"byoyomi_time,omitempty"`
	AvatarUrl      *string  `protobuf:"bytes,13,opt,name=avatar_url,json=avatarUrl" json:"avatar_url,omitempty"`
	Country        *Country `protobuf:"varint,15,opt,name=country,enum=openfoxwq.Country" json:"country,omitempty"`
	NameAlt        *string  `protobuf:"bytes,16,opt,name=name_alt,json=nameAlt" json:"name_alt,omitempty"`
}

func (x *GetRoomInfoResponse_PlayerEntry) Reset() {
	*x = GetRoomInfoResponse_PlayerEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_play_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoomInfoResponse_PlayerEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoomInfoResponse_PlayerEntry) ProtoMessage() {}

func (x *GetRoomInfoResponse_PlayerEntry) ProtoReflect() protoreflect.Message {
	mi := &file_proto_play_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoomInfoResponse_PlayerEntry.ProtoReflect.Descriptor instead.
func (*GetRoomInfoResponse_PlayerEntry) Descriptor() ([]byte, []int) {
	return file_proto_play_proto_rawDescGZIP(), []int{18, 1}
}

func (x *GetRoomInfoResponse_PlayerEntry) GetId() int64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *GetRoomInfoResponse_PlayerEntry) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GetRoomInfoResponse_PlayerEntry) GetRank() Rank {
	if x != nil && x.Rank != nil {
		return *x.Rank
	}
	return Rank_RANK_18K
}

func (x *GetRoomInfoResponse_PlayerEntry) GetMainTime() int64 {
	if x != nil && x.MainTime != nil {
		return *x.MainTime
	}
	return 0
}

func (x *GetRoomInfoResponse_PlayerEntry) GetByoyomiPeriods() int64 {
	if x != nil && x.ByoyomiPeriods != nil {
		return *x.ByoyomiPeriods
	}
	return 0
}

func (x *GetRoomInfoResponse_PlayerEntry) GetByoyomiTime() int64 {
	if x != nil && x.ByoyomiTime != nil {
		return *x.ByoyomiTime
	}
	return 0
}

func (x *GetRoomInfoResponse_PlayerEntry) GetAvatarUrl() string {
	if x != nil && x.AvatarUrl != nil {
		return *x.AvatarUrl
	}
	return ""
}

func (x *GetRoomInfoResponse_PlayerEntry) GetCountry() Country {
	if x != nil && x.Country != nil {
		return *x.Country
	}
	return Country_UNKNOWN
}

func (x *GetRoomInfoResponse_PlayerEntry) GetNameAlt() string {
	if x != nil && x.NameAlt != nil {
		return *x.NameAlt
	}
	return ""
}

type GetRoomInfoResponse_Unknown5 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetRoomInfoResponse_Unknown5) Reset() {
	*x = GetRoomInfoResponse_Unknown5{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_play_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoomInfoResponse_Unknown5) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoomInfoResponse_Unknown5) ProtoMessage() {}

func (x *GetRoomInfoResponse_Unknown5) ProtoReflect() protoreflect.Message {
	mi := &file_proto_play_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoomInfoResponse_Unknown5.ProtoReflect.Descriptor instead.
func (*GetRoomInfoResponse_Unknown5) Descriptor() ([]byte, []int) {
	return file_proto_play_proto_rawDescGZIP(), []int{18, 2}
}

type GetRoomInfoResponse_RoomInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             *RoomId                            `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Players        []*GetRoomInfoResponse_PlayerEntry `protobuf:"bytes,2,rep,name=players" json:"players,omitempty"`
	Settings       *RoomSettings                      `protobuf:"bytes,3,opt,name=settings" json:"settings,omitempty"`
	UnknownField_4 *int64                             `protobuf:"varint,4,opt,name=unknown_field_4,json=unknownField4" json:"unknown_field_4,omitempty"`
	UnknownField_5 *GetRoomInfoResponse_Unknown5      `protobuf:"bytes,5,opt,name=unknown_field_5,json=unknownField5" json:"unknown_field_5,omitempty"`
	TsUnix         *int64                             `protobuf:"varint,6,opt,name=ts_unix,json=tsUnix" json:"ts_unix,omitempty"`
	TsUnixNs       *int64                             `protobuf:"varint,12,opt,name=ts_unix_ns,json=tsUnixNs" json:"ts_unix_ns,omitempty"`
}

func (x *GetRoomInfoResponse_RoomInfo) Reset() {
	*x = GetRoomInfoResponse_RoomInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_play_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoomInfoResponse_RoomInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoomInfoResponse_RoomInfo) ProtoMessage() {}

func (x *GetRoomInfoResponse_RoomInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_play_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoomInfoResponse_RoomInfo.ProtoReflect.Descriptor instead.
func (*GetRoomInfoResponse_RoomInfo) Descriptor() ([]byte, []int) {
	return file_proto_play_proto_rawDescGZIP(), []int{18, 3}
}

func (x *GetRoomInfoResponse_RoomInfo) GetId() *RoomId {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *GetRoomInfoResponse_RoomInfo) GetPlayers() []*GetRoomInfoResponse_PlayerEntry {
	if x != nil {
		return x.Players
	}
	return nil
}

func (x *GetRoomInfoResponse_RoomInfo) GetSettings() *RoomSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

func (x *GetRoomInfoResponse_RoomInfo) GetUnknownField_4() int64 {
	if x != nil && x.UnknownField_4 != nil {
		return *x.UnknownField_4
	}
	return 0
}

func (x *GetRoomInfoResponse_RoomInfo) GetUnknownField_5() *GetRoomInfoResponse_Unknown5 {
	if x != nil {
		return x.UnknownField_5
	}
	return nil
}

func (x *GetRoomInfoResponse_RoomInfo) GetTsUnix() int64 {
	if x != nil && x.TsUnix != nil {
		return *x.TsUnix
	}
	return 0
}

func (x *GetRoomInfoResponse_RoomInfo) GetTsUnixNs() int64 {
	if x != nil && x.TsUnixNs != nil {
		return *x.TsUnixNs
	}
	return 0
}

type AutomatchFoundEvent_RoomParticipant struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId  *int64  `protobuf:"varint,1,req,name=player_id,json=playerId" json:"player_id,omitempty"`
	Name      *string `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Rank      *Rank   `protobuf:"varint,4,opt,name=rank,enum=openfoxwq.Rank" json:"rank,omitempty"`
	AvatarUrl *string `protobuf:"bytes,18,opt,name=avatar_url,json=avatarUrl" json:"avatar_url,omitempty"`
}

func (x *AutomatchFoundEvent_RoomParticipant) Reset() {
	*x = AutomatchFoundEvent_RoomParticipant{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_play_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AutomatchFoundEvent_RoomParticipant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutomatchFoundEvent_RoomParticipant) ProtoMessage() {}

func (x *AutomatchFoundEvent_RoomParticipant) ProtoReflect() protoreflect.Message {
	mi := &file_proto_play_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutomatchFoundEvent_RoomParticipant.ProtoReflect.Descriptor instead.
func (*AutomatchFoundEvent_RoomParticipant) Descriptor() ([]byte, []int) {
	return file_proto_play_proto_rawDescGZIP(), []int{25, 0}
}

func (x *AutomatchFoundEvent_RoomParticipant) GetPlayerId() int64 {
	if x != nil && x.PlayerId != nil {
		return *x.PlayerId
	}
	return 0
}

func (x *AutomatchFoundEvent_RoomParticipant) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *AutomatchFoundEvent_RoomParticipant) GetRank() Rank {
	if x != nil && x.Rank != nil {
		return *x.Rank
	}
	return Rank_RANK_18K
}

func (x *AutomatchFoundEvent_RoomParticipant) GetAvatarUrl() string {
	if x != nil && x.AvatarUrl != nil {
		return *x.AvatarUrl
	}
	return ""
}

type MatchStartEvent_MatchPlayerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId  *int64   `protobuf:"varint,1,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	Name      *string  `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Rank      *Rank    `protobuf:"varint,4,opt,name=rank,enum=openfoxwq.Rank" json:"rank,omitempty"`
	AvatarUrl *string  `protobuf:"bytes,18,opt,name=avatar_url,json=avatarUrl" json:"avatar_url,omitempty"`
	Country   *Country `protobuf:"varint,20,opt,name=country,enum=openfoxwq.Country" json:"country,omitempty"`
}

func (x *MatchStartEvent_MatchPlayerInfo) Reset() {
	*x = MatchStartEvent_MatchPlayerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_play_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchStartEvent_MatchPlayerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchStartEvent_MatchPlayerInfo) ProtoMessage() {}

func (x *MatchStartEvent_MatchPlayerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_play_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchStartEvent_MatchPlayerInfo.ProtoReflect.Descriptor instead.
func (*MatchStartEvent_MatchPlayerInfo) Descriptor() ([]byte, []int) {
	return file_proto_play_proto_rawDescGZIP(), []int{28, 0}
}

func (x *MatchStartEvent_MatchPlayerInfo) GetPlayerId() int64 {
	if x != nil && x.PlayerId != nil {
		return *x.PlayerId
	}
	return 0
}

func (x *MatchStartEvent_MatchPlayerInfo) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *MatchStartEvent_MatchPlayerInfo) GetRank() Rank {
	if x != nil && x.Rank != nil {
		return *x.Rank
	}
	return Rank_RANK_18K
}

func (x *MatchStartEvent_MatchPlayerInfo) GetAvatarUrl() string {
	if x != nil && x.AvatarUrl != nil {
		return *x.AvatarUrl
	}
	return ""
}

func (x *MatchStartEvent_MatchPlayerInfo) GetCountry() Country {
	if x != nil && x.Country != nil {
		return *x.Country
	}
	return Country_UNKNOWN
}

type MatchStartEvent_AutomatchPreset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             *int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	BoardSize      *int64 `protobuf:"varint,2,opt,name=board_size,json=boardSize" json:"board_size,omitempty"`
	MainTimeSec    *int64 `protobuf:"varint,3,opt,name=main_time_sec,json=mainTimeSec" json:"main_time_sec,omitempty"`
	ByoyomiPeriods *int64 `protobuf:"varint,4,opt,name=byoyomi_periods,json=byoyomiPeriods" json:"byoyomi_periods,omitempty"`
	ByoyomiTimeSec *int64 `protobuf:"varint,5,opt,name=byoyomi_time_sec,json=byoyomiTimeSec" json:"byoyomi_time_sec,omitempty"`
	ChineseRules   *bool  `protobuf:"varint,6,opt,name=chinese_rules,json=chineseRules" json:"chinese_rules,omitempty"`
	MinDuan        *int64 `protobuf:"varint,7,opt,name=min_duan,json=minDuan" json:"min_duan,omitempty"`
	MaxDuan        *int64 `protobuf:"varint,8,opt,name=max_duan,json=maxDuan" json:"max_duan,omitempty"`
}

func (x *MatchStartEvent_AutomatchPreset) Reset() {
	*x = MatchStartEvent_AutomatchPreset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_play_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchStartEvent_AutomatchPreset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchStartEvent_AutomatchPreset) ProtoMessage() {}

func (x *MatchStartEvent_AutomatchPreset) ProtoReflect() protoreflect.Message {
	mi := &file_proto_play_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchStartEvent_AutomatchPreset.ProtoReflect.Descriptor instead.
func (*MatchStartEvent_AutomatchPreset) Descriptor() ([]byte, []int) {
	return file_proto_play_proto_rawDescGZIP(), []int{28, 1}
}

func (x *MatchStartEvent_AutomatchPreset) GetId() int64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *MatchStartEvent_AutomatchPreset) GetBoardSize() int64 {
	if x != nil && x.BoardSize != nil {
		return *x.BoardSize
	}
	return 0
}

func (x *MatchStartEvent_AutomatchPreset) GetMainTimeSec() int64 {
	if x != nil && x.MainTimeSec != nil {
		return *x.MainTimeSec
	}
	return 0
}

func (x *MatchStartEvent_AutomatchPreset) GetByoyomiPeriods() int64 {
	if x != nil && x.ByoyomiPeriods != nil {
		return *x.ByoyomiPeriods
	}
	return 0
}

func (x *MatchStartEvent_AutomatchPreset) GetByoyomiTimeSec() int64 {
	if x != nil && x.ByoyomiTimeSec != nil {
		return *x.ByoyomiTimeSec
	}
	return 0
}

func (x *MatchStartEvent_AutomatchPreset) GetChineseRules() bool {
	if x != nil && x.ChineseRules != nil {
		return *x.ChineseRules
	}
	return false
}

func (x *MatchStartEvent_AutomatchPreset) GetMinDuan() int64 {
	if x != nil && x.MinDuan != nil {
		return *x.MinDuan
	}
	return 0
}

func (x *MatchStartEvent_AutomatchPreset) GetMaxDuan() int64 {
	if x != nil && x.MaxDuan != nil {
		return *x.MaxDuan
	}
	return 0
}

type ListRoomParticipantsResponse_RoomParticipantInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId *int64   `protobuf:"varint,1,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	Name     *string  `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	NameAlt  *string  `protobuf:"bytes,3,opt,name=name_alt,json=nameAlt" json:"name_alt,omitempty"`
	Rank     *Rank    `protobuf:"varint,4,opt,name=rank,enum=openfoxwq.Rank" json:"rank,omitempty"`
	Wins     *int64   `protobuf:"varint,5,opt,name=wins" json:"wins,omitempty"`
	Losses   *int64   `protobuf:"varint,6,opt,name=losses" json:"losses,omitempty"`
	Country  *Country `protobuf:"varint,9,opt,name=country,enum=openfoxwq.Country" json:"country,omitempty"`
}

func (x *ListRoomParticipantsResponse_RoomParticipantInfo) Reset() {
	*x = ListRoomParticipantsResponse_RoomParticipantInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_play_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRoomParticipantsResponse_RoomParticipantInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRoomParticipantsResponse_RoomParticipantInfo) ProtoMessage() {}

func (x *ListRoomParticipantsResponse_RoomParticipantInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_play_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRoomParticipantsResponse_RoomParticipantInfo.ProtoReflect.Descriptor instead.
func (*ListRoomParticipantsResponse_RoomParticipantInfo) Descriptor() ([]byte, []int) {
	return file_proto_play_proto_rawDescGZIP(), []int{35, 0}
}

func (x *ListRoomParticipantsResponse_RoomParticipantInfo) GetPlayerId() int64 {
	if x != nil && x.PlayerId != nil {
		return *x.PlayerId
	}
	return 0
}

func (x *ListRoomParticipantsResponse_RoomParticipantInfo) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *ListRoomParticipantsResponse_RoomParticipantInfo) GetNameAlt() string {
	if x != nil && x.NameAlt != nil {
		return *x.NameAlt
	}
	return ""
}

func (x *ListRoomParticipantsResponse_RoomParticipantInfo) GetRank() Rank {
	if x != nil && x.Rank != nil {
		return *x.Rank
	}
	return Rank_RANK_18K
}

func (x *ListRoomParticipantsResponse_RoomParticipantInfo) GetWins() int64 {
	if x != nil && x.Wins != nil {
		return *x.Wins
	}
	return 0
}

func (x *ListRoomParticipantsResponse_RoomParticipantInfo) GetLosses() int64 {
	if x != nil && x.Losses != nil {
		return *x.Losses
	}
	return 0
}

func (x *ListRoomParticipantsResponse_RoomParticipantInfo) GetCountry() Country {
	if x != nil && x.Country != nil {
		return *x.Country
	}
	return Country_UNKNOWN
}

type SyncMatchTimeResponse_ElapsedInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimeElapsedSec *int64 `protobuf:"varint,1,opt,name=time_elapsed_sec,json=timeElapsedSec" json:"time_elapsed_sec,omitempty"` // monotonic inc.
}

func (x *SyncMatchTimeResponse_ElapsedInfo) Reset() {
	*x = SyncMatchTimeResponse_ElapsedInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_play_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncMatchTimeResponse_ElapsedInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncMatchTimeResponse_ElapsedInfo) ProtoMessage() {}

func (x *SyncMatchTimeResponse_ElapsedInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_play_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncMatchTimeResponse_ElapsedInfo.ProtoReflect.Descriptor instead.
func (*SyncMatchTimeResponse_ElapsedInfo) Descriptor() ([]byte, []int) {
	return file_proto_play_proto_rawDescGZIP(), []int{42, 0}
}

func (x *SyncMatchTimeResponse_ElapsedInfo) GetTimeElapsedSec() int64 {
	if x != nil && x.TimeElapsedSec != nil {
		return *x.TimeElapsedSec
	}
	return 0
}

var File_proto_play_proto protoreflect.FileDescriptor

var file_proto_play_proto_rawDesc = []byte{
	0x0a, 0x10, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x6c, 0x61, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x09, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71, 0x1a, 0x1b, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65,
	0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x72, 0x65, 0x71, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x12, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2e, 0x0a, 0x16, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x6c,
	0x61, 0x79, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xb9, 0x01, 0x0a, 0x17, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50,
	0x6c, 0x61, 0x79, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x26, 0x0a, 0x0f, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x5f, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x75, 0x6e, 0x6b, 0x6e,
	0x6f, 0x77, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x12, 0x26, 0x0a, 0x0f, 0x75, 0x6e, 0x6b,
	0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x32, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0d, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x32, 0x12, 0x26, 0x0a, 0x0f, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x5f, 0x33, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x75, 0x6e, 0x6b, 0x6e,
	0x6f, 0x77, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x33, 0x12, 0x26, 0x0a, 0x0f, 0x75, 0x6e, 0x6b,
	0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x34, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0d, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x34, 0x22, 0x3c, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x75, 0x6e, 0x6b, 0x6e, 0x6f,
	0x77, 0x6e, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x31, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03,
	0x52, 0x0d, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x22,
	0xf7, 0x01, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66,
	0x6f, 0x78, 0x77, 0x71, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x02, 0x28, 0x03, 0x52, 0x09, 0x70, 0x61,
	0x67, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x02, 0x28, 0x03, 0x52, 0x09, 0x70, 0x61, 0x67,
	0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6f, 0x6e,
	0x6c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x75, 0x6e, 0x6b,
	0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x31, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0d, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x31, 0x12, 0x26, 0x0a, 0x0f, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x5f, 0x36, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x75, 0x6e, 0x6b, 0x6e,
	0x6f, 0x77, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x36, 0x22, 0x8f, 0x01, 0x0a, 0x14, 0x47, 0x65,
	0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x39, 0x0a, 0x0c, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x03, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x78,
	0x77, 0x71, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0b,
	0x69, 0x6e, 0x66, 0x6f, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x9a, 0x1c, 0x0a, 0x15,
	0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x39, 0x0a, 0x0c, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x0b, 0x69, 0x6e, 0x66, 0x6f, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x2a, 0x0a, 0x11, 0x73, 0x65, 0x61, 0x63, 0x68, 0x65, 0x64, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x73, 0x65, 0x61, 0x63,
	0x68, 0x65, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x65, 0x64, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x65, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x6f,
	0x78, 0x63, 0x6f, 0x69, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x66, 0x6f, 0x78,
	0x63, 0x6f, 0x69, 0x6e, 0x12, 0x23, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71, 0x2e, 0x52,
	0x61, 0x6e, 0x6b, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x12, 0x52, 0x0a, 0x0d, 0x72, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71, 0x2e, 0x47, 0x65, 0x74,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x0c, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x52, 0x0a,
	0x0d, 0x72, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71,
	0x2e, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x52, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x12, 0x54, 0x0a, 0x10, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x5f, 0x31, 0x30, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x55, 0x6e,
	0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x31, 0x30, 0x52, 0x0e, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x30, 0x12, 0x54, 0x0a, 0x10, 0x75, 0x6e, 0x6b, 0x6e, 0x6f,
	0x77, 0x6e, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x31, 0x31, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2a, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71, 0x2e, 0x47, 0x65,
	0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x31, 0x31, 0x52, 0x0e, 0x75,
	0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x31, 0x12, 0x58, 0x0a,
	0x0f, 0x6f, 0x76, 0x65, 0x72, 0x61, 0x6c, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x78,
	0x77, 0x71, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4f, 0x76, 0x65, 0x72, 0x61, 0x6c, 0x6c,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x52, 0x0e, 0x6f, 0x76, 0x65, 0x72, 0x61, 0x6c, 0x6c,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x58, 0x0a, 0x0f, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x73, 0x68, 0x69, 0x70, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2f, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71, 0x2e, 0x47, 0x65, 0x74,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x0e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x42, 0x0a, 0x05, 0x66, 0x6c, 0x61, 0x69, 0x72, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2c, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71, 0x2e, 0x47, 0x65, 0x74,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x46, 0x6c, 0x61, 0x69, 0x72, 0x52, 0x05,
	0x66, 0x6c, 0x61, 0x69, 0x72, 0x12, 0x43, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f,
	0x78, 0x77, 0x71, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x53, 0x0a, 0x0b, 0x70, 0x65,
	0x72, 0x66, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x32, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71, 0x2e, 0x47, 0x65, 0x74, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x66, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12,
	0x54, 0x0a, 0x10, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x5f, 0x31, 0x39, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x66, 0x6f, 0x78, 0x77, 0x71, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x55, 0x6e, 0x6b, 0x6e,
	0x6f, 0x77, 0x6e, 0x31, 0x39, 0x52, 0x0e, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x31, 0x39, 0x12, 0x42, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73,
	0x18, 0x10, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x78,
	0x77, 0x71, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73,
	0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x3c, 0x0a, 0x05, 0x72, 0x6f, 0x6f,
	0x6d, 0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66,
	0x6f, 0x78, 0x77, 0x71, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x73,
	0x52, 0x05, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x12, 0x54, 0x0a, 0x10, 0x75, 0x6e, 0x6b, 0x6e, 0x6f,
	0x77, 0x6e, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x32, 0x32, 0x18, 0x16, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2a, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71, 0x2e, 0x47, 0x65,
	0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x32, 0x32, 0x52, 0x0e, 0x75,
	0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x32, 0x32, 0x12, 0x54, 0x0a,
	0x10, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x32,
	0x33, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f,
	0x78, 0x77, 0x71, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77,
	0x6e, 0x32, 0x33, 0x52, 0x0e, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x32, 0x33, 0x1a, 0xe1, 0x01, 0x0a, 0x0c, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65,
	0x18, 0x04, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x61, 0x6d, 0x65, 0x4e, 0x61, 0x74, 0x69,
	0x76, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x02, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x79, 0x18, 0x07, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f,
	0x78, 0x77, 0x71, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x2f, 0x0a, 0x14, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x73,
	0x69, 0x6e, 0x63, 0x65, 0x5f, 0x75, 0x6e, 0x69, 0x78, 0x5f, 0x74, 0x73, 0x18, 0x08, 0x20, 0x02,
	0x28, 0x03, 0x52, 0x11, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x69, 0x6e, 0x63, 0x65, 0x55,
	0x6e, 0x69, 0x78, 0x54, 0x73, 0x12, 0x20, 0x0a, 0x03, 0x73, 0x65, 0x78, 0x18, 0x09, 0x20, 0x02,
	0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71, 0x2e, 0x53,
	0x65, 0x78, 0x52, 0x03, 0x73, 0x65, 0x78, 0x1a, 0x9f, 0x02, 0x0a, 0x0c, 0x52, 0x65, 0x63, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x6b, 0x0a, 0x11, 0x72, 0x61, 0x6e, 0x6b,
	0x5f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71, 0x2e,
	0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x2e, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x52, 0x10, 0x72, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6b, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6b, 0x12, 0x26, 0x0a,
	0x0f, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x33,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x33, 0x1a, 0x62, 0x0a, 0x10, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x70, 0x31,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x70, 0x31, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x70, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x70, 0x32, 0x12, 0x14, 0x0a,
	0x05, 0x64, 0x6f, 0x77, 0x6e, 0x31, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x64, 0x6f,
	0x77, 0x6e, 0x31, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x6f, 0x77, 0x6e, 0x32, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x64, 0x6f, 0x77, 0x6e, 0x32, 0x1a, 0x52, 0x0a, 0x0e, 0x4f, 0x76, 0x65,
	0x72, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x61, 0x74,
	0x69, 0x6e, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x77, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x77, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x6d, 0x69, 0x6e, 0x61, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x74, 0x61, 0x6d, 0x69, 0x6e, 0x61, 0x1a, 0xcc, 0x01,
	0x0a, 0x07, 0x50, 0x72, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x26, 0x0a, 0x0f, 0x75, 0x6e, 0x6b,
	0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x31, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0d, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x31, 0x12, 0x26, 0x0a, 0x0f, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x5f, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x75, 0x6e, 0x6b, 0x6e,
	0x6f, 0x77, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x32, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x61, 0x6d,
	0x65, 0x31, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x61, 0x6d, 0x65, 0x31, 0x12,
	0x14, 0x0a, 0x05, 0x6e, 0x61, 0x6d, 0x65, 0x32, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x6e, 0x61, 0x6d, 0x65, 0x32, 0x12, 0x23, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71, 0x2e,
	0x52, 0x61, 0x6e, 0x6b, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x73,
	0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x7c, 0x0a, 0x11,
	0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x12, 0x23, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0f, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71, 0x2e, 0x52, 0x61, 0x6e, 0x6b,
	0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x77, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x77, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x6d, 0x69, 0x6e,
	0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x74, 0x61, 0x6d, 0x69, 0x6e, 0x61,
	0x12, 0x18, 0x0a, 0x07, 0x66, 0x6f, 0x78, 0x63, 0x6f, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x66, 0x6f, 0x78, 0x63, 0x6f, 0x69, 0x6e, 0x1a, 0x8d, 0x01, 0x0a, 0x07, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x40, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71,
	0x2e, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x77, 0x69, 0x6e, 0x73,
	0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x04, 0x77, 0x69, 0x6e, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x6c, 0x6f, 0x73, 0x73, 0x65, 0x73, 0x18, 0x03, 0x20, 0x02, 0x28, 0x03, 0x52, 0x06, 0x6c, 0x6f,
	0x73, 0x73, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x72, 0x61, 0x77, 0x73, 0x18, 0x04, 0x20,
	0x02, 0x28, 0x03, 0x52, 0x05, 0x64, 0x72, 0x61, 0x77, 0x73, 0x1a, 0xf4, 0x04, 0x0a, 0x05, 0x52,
	0x6f, 0x6f, 0x6d, 0x73, 0x12, 0x41, 0x0a, 0x05, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71, 0x2e,
	0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x73, 0x2e, 0x52, 0x6f, 0x6f, 0x6d,
	0x52, 0x05, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x75, 0x6e, 0x6b, 0x6e, 0x6f,
	0x77, 0x6e, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0d, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x32, 0x12,
	0x26, 0x0a, 0x0f, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x5f, 0x33, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77,
	0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x33, 0x12, 0x26, 0x0a, 0x0f, 0x75, 0x6e, 0x6b, 0x6e, 0x6f,
	0x77, 0x6e, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x34, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0d, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x34, 0x1a,
	0xaf, 0x03, 0x0a, 0x04, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x21, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71,
	0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x52, 0x02, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x75,
	0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x32, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x32, 0x12, 0x55, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x31, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71,
	0x2e, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x73, 0x2e, 0x52, 0x6f, 0x6f,
	0x6d, 0x2e, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x31, 0x12, 0x55, 0x0a, 0x07, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x32, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x6f,
	0x6f, 0x6d, 0x73, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x2e, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x32, 0x1a, 0xad, 0x01, 0x0a, 0x0f, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x23, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0f, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71, 0x2e, 0x52, 0x61, 0x6e,
	0x6b, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x12, 0x2c, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66,
	0x6f, 0x78, 0x77, 0x71, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x61, 0x6d, 0x65, 0x34, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x61, 0x6d, 0x65, 0x34, 0x12, 0x14, 0x0a, 0x05, 0x6e,
	0x61, 0x6d, 0x65, 0x35, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x61, 0x6d, 0x65,
	0x35, 0x1a, 0x60, 0x0a, 0x0e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x2d, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x19, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71, 0x2e, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x75, 0x6e, 0x74, 0x69,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x55, 0x6e,
	0x74, 0x69, 0x6c, 0x1a, 0x45, 0x0a, 0x0b, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x46, 0x6c, 0x61,
	0x69, 0x72, 0x12, 0x26, 0x0a, 0x05, 0x66, 0x6c, 0x61, 0x69, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x10, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71, 0x2e, 0x46, 0x6c,
	0x61, 0x69, 0x72, 0x52, 0x05, 0x66, 0x6c, 0x61, 0x69, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x61, 0x69,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x61, 0x69, 0x1a, 0x0b, 0x0a, 0x09, 0x55, 0x6e,
	0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x31, 0x30, 0x1a, 0x0b, 0x0a, 0x09, 0x55, 0x6e, 0x6b, 0x6e, 0x6f,
	0x77, 0x6e, 0x31, 0x31, 0x1a, 0x0b, 0x0a, 0x09, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x31,
	0x39, 0x1a, 0xab, 0x01, 0x0a, 0x09, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x32, 0x32, 0x12,
	0x26, 0x0a, 0x0f, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x5f, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77,
	0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x12, 0x26, 0x0a, 0x0f, 0x75, 0x6e, 0x6b, 0x6e, 0x6f,
	0x77, 0x6e, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0d, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x32, 0x12,
	0x26, 0x0a, 0x0f, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x5f, 0x33, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77,
	0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x33, 0x12, 0x26, 0x0a, 0x0f, 0x75, 0x6e, 0x6b, 0x6e, 0x6f,
	0x77, 0x6e, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x34, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x34, 0x1a,
	0x0b, 0x0a, 0x09, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x32, 0x33, 0x22, 0x4a, 0x0a, 0x0b,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x4f,
	0x56, 0x45, 0x52, 0x41, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x46, 0x52, 0x45, 0x45,
	0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x52, 0x41, 0x4e, 0x4b, 0x45, 0x44, 0x10, 0x02, 0x12, 0x0b,
	0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x04, 0x12, 0x0b, 0x0a, 0x07, 0x43,
	0x55, 0x52, 0x52, 0x45, 0x4e, 0x54, 0x10, 0x05, 0x22, 0x5d, 0x0a, 0x0b, 0x49, 0x6e, 0x66, 0x6f,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x75, 0x6e, 0x6b, 0x6e, 0x6f,
	0x77, 0x6e, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x31, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03,
	0x52, 0x0d, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x12,
	0x26, 0x0a, 0x0f, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x5f, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77,
	0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x32, 0x22, 0x2a, 0x0a, 0x0f, 0x53, 0x79, 0x6e, 0x63, 0x54,
	0x69, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x6e,
	0x69, 0x78, 0x5f, 0x74, 0x73, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x52, 0x06, 0x75, 0x6e, 0x69,
	0x78, 0x54, 0x73, 0x22, 0x49, 0x0a, 0x10, 0x53, 0x79, 0x6e, 0x63, 0x54, 0x69, 0x6d, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x6e, 0x69, 0x78, 0x5f,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x52, 0x06, 0x75, 0x6e, 0x69, 0x78, 0x54, 0x73,
	0x12, 0x1c, 0x0a, 0x0a, 0x75, 0x6e, 0x69, 0x78, 0x5f, 0x74, 0x73, 0x5f, 0x75, 0x73, 0x18, 0x02,
	0x20, 0x02, 0x28, 0x03, 0x52, 0x08, 0x75, 0x6e, 0x69, 0x78, 0x54, 0x73, 0x55, 0x73, 0x22, 0x3c,
	0x0a, 0x12, 0x53, 0x79, 0x6e, 0x63, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x31, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x52, 0x0d, 0x75,
	0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x22, 0x65, 0x0a, 0x13,
	0x53, 0x79, 0x6e, 0x63, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x5f, 0x31, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x52, 0x0d, 0x75, 0x6e,
	0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x12, 0x26, 0x0a, 0x0f, 0x75,
	0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x32, 0x18, 0x02,
	0x20, 0x02, 0x28, 0x03, 0x52, 0x0d, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x32, 0x22, 0x95, 0x01, 0x0a, 0x10, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x36, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x0b, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x5f, 0x33, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x75, 0x6e,
	0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x33, 0x22, 0x63, 0x0a, 0x16, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e,
	0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d,
	0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x12, 0x21, 0x0a,
	0x0c, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x02, 0x28, 0x03, 0x52, 0x0b, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0x96, 0x01, 0x0a, 0x11, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4f, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x36, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x21,
	0x0a, 0x0c, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x02, 0x28, 0x03, 0x52, 0x0b, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x26, 0x0a, 0x0f, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x5f, 0x33, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x75, 0x6e, 0x6b, 0x6e,
	0x6f, 0x77, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x33, 0x22, 0x7c, 0x0a, 0x12, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x03, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c,
	0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x02,
	0x28, 0x03, 0x52, 0x0b, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x26, 0x0a, 0x0f, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x5f, 0x33, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77,
	0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x33, 0x22, 0xdf, 0x01, 0x0a, 0x13, 0x55, 0x6e, 0x6b, 0x6e,
	0x6f, 0x77, 0x6e, 0x50, 0x6c, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x31, 0x12,
	0x61, 0x0a, 0x0f, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x5f, 0x31, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66,
	0x6f, 0x78, 0x77, 0x71, 0x2e, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x50, 0x6c, 0x61, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x31, 0x2e, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e,
	0x50, 0x6c, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x31, 0x4e, 0x65, 0x73, 0x74,
	0x65, 0x64, 0x31, 0x52, 0x0d, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x31, 0x12, 0x26, 0x0a, 0x0f, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x5f, 0x32, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x0d, 0x75, 0x6e, 0x6b,
	0x6e, 0x6f, 0x77, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x32, 0x1a, 0x3d, 0x0a, 0x1a, 0x55, 0x6e,
	0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x50, 0x6c, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x31, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x31, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x63, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0a, 0x6d,
	0x61, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x3e, 0x0a, 0x14, 0x55, 0x6e, 0x6b,
	0x6e, 0x6f, 0x77, 0x6e, 0x50, 0x6c, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x31, 0x12, 0x26, 0x0a, 0x0f, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x5f, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x75, 0x6e, 0x6b, 0x6e,
	0x6f, 0x77, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x22, 0x37, 0x0a, 0x12, 0x47, 0x65, 0x74,
	0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x21, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x52, 0x02,
	0x69, 0x64, 0x22, 0xb8, 0x07, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x4f, 0x0a, 0x0f, 0x75, 0x6e, 0x6b,
	0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x32, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71, 0x2e, 0x47,
	0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x32, 0x52, 0x0d, 0x75, 0x6e, 0x6b,
	0x6e, 0x6f, 0x77, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x32, 0x12, 0x44, 0x0a, 0x09, 0x72, 0x6f,
	0x6f, 0x6d, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f,
	0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x6f,
	0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f,
	0x1a, 0x5a, 0x0a, 0x08, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x32, 0x12, 0x26, 0x0a, 0x0f,
	0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x31, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x31, 0x12, 0x26, 0x0a, 0x0f, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x75,
	0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x32, 0x1a, 0xa7, 0x02, 0x0a,
	0x0b, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x23, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71, 0x2e, 0x52, 0x61, 0x6e, 0x6b, 0x52,
	0x04, 0x72, 0x61, 0x6e, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x61, 0x69, 0x6e, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x62, 0x79, 0x6f, 0x79, 0x6f, 0x6d, 0x69, 0x5f, 0x70, 0x65,
	0x72, 0x69, 0x6f, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x62, 0x79, 0x6f,
	0x79, 0x6f, 0x6d, 0x69, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x62,
	0x79, 0x6f, 0x79, 0x6f, 0x6d, 0x69, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x62, 0x79, 0x6f, 0x79, 0x6f, 0x6d, 0x69, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x2c, 0x0a,
	0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x6e,
	0x61, 0x6d, 0x65, 0x5f, 0x61, 0x6c, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e,
	0x61, 0x6d, 0x65, 0x41, 0x6c, 0x74, 0x1a, 0x0a, 0x0a, 0x08, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77,
	0x6e, 0x35, 0x1a, 0xd8, 0x02, 0x0a, 0x08, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x21, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x44, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71, 0x2e,
	0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x12, 0x33, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x52, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x26, 0x0a,
	0x0f, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x34,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x34, 0x12, 0x4f, 0x0a, 0x0f, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e,
	0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x35, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f,
	0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x55,
	0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x35, 0x52, 0x0d, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x35, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x73, 0x5f, 0x75, 0x6e, 0x69,
	0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x73, 0x55, 0x6e, 0x69, 0x78, 0x12,
	0x1c, 0x0a, 0x0a, 0x74, 0x73, 0x5f, 0x75, 0x6e, 0x69, 0x78, 0x5f, 0x6e, 0x73, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x73, 0x55, 0x6e, 0x69, 0x78, 0x4e, 0x73, 0x22, 0x1a, 0x0a,
	0x18, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xcf, 0x01, 0x0a, 0x19, 0x47, 0x65,
	0x74, 0x41, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x54, 0x0a, 0x0a, 0x70, 0x6f, 0x70, 0x75, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x50, 0x6f, 0x70, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x0a, 0x70, 0x6f, 0x70, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x3d, 0x0a, 0x0f,
	0x50, 0x6f, 0x70, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x5c, 0x0a, 0x15, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x52, 0x08, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x49,
	0x64, 0x12, 0x26, 0x0a, 0x0f, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x5f, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x75, 0x6e, 0x6b, 0x6e,
	0x6f, 0x77, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x32, 0x22, 0x87, 0x01, 0x0a, 0x16, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x5f, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x75, 0x6e,
	0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x32, 0x12, 0x26, 0x0a, 0x0f, 0x75,
	0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x33, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x33, 0x22, 0x16, 0x0a, 0x14, 0x53, 0x74, 0x6f, 0x70, 0x41, 0x75, 0x74, 0x6f, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x36, 0x0a, 0x15, 0x53,
	0x74, 0x6f, 0x70, 0x41, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43,
	0x6f, 0x64, 0x65, 0x22, 0x8d, 0x03, 0x0a, 0x13, 0x41, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x09, 0x72, 0x6f,
	0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x5f, 0x31, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x72,
	0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x31, 0x12, 0x1a, 0x0a, 0x09, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69,
	0x64, 0x5f, 0x32, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x49,
	0x64, 0x32, 0x12, 0x1a, 0x0a, 0x09, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x5f, 0x33, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x33, 0x12, 0x52,
	0x0a, 0x0c, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71,
	0x2e, 0x41, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69,
	0x70, 0x61, 0x6e, 0x74, 0x52, 0x0c, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e,
	0x74, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x5f, 0x36, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x75, 0x6e, 0x6b,
	0x6e, 0x6f, 0x77, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x36, 0x1a, 0x86, 0x01, 0x0a, 0x0f, 0x52,
	0x6f, 0x6f, 0x6d, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x03, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x23, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71, 0x2e, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x04,
	0x72, 0x61, 0x6e, 0x6b, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x55, 0x72, 0x6c, 0x22, 0x14, 0x0a, 0x12, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x34, 0x0a, 0x13, 0x41, 0x63, 0x63,
	0x65, 0x70, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22,
	0xb8, 0x08, 0x0a, 0x0f, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x53, 0x74, 0x61, 0x72, 0x74, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x12, 0x3c, 0x0a, 0x0d, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x52, 0x0c, 0x72, 0x6f, 0x6f, 0x6d, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x12, 0x26, 0x0a, 0x0f, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x5f, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x75, 0x6e, 0x6b, 0x6e,
	0x6f, 0x77, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x32, 0x12, 0x22, 0x0a, 0x0d, 0x75, 0x6e, 0x69,
	0x78, 0x5f, 0x74, 0x73, 0x5f, 0x6e, 0x61, 0x6e, 0x6f, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x75, 0x6e, 0x69, 0x78, 0x54, 0x73, 0x4e, 0x61, 0x6e, 0x6f, 0x73, 0x12, 0x26, 0x0a,
	0x0f, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x34,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x34, 0x12, 0x26, 0x0a, 0x0f, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e,
	0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x36, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d,
	0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x36, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x6e, 0x69, 0x78, 0x5f, 0x74, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x75, 0x6e, 0x69, 0x78, 0x54, 0x73, 0x12, 0x29, 0x0a, 0x11, 0x75, 0x6e, 0x69, 0x78, 0x5f, 0x74,
	0x73, 0x5f, 0x6e, 0x61, 0x6e, 0x6f, 0x73, 0x5f, 0x73, 0x74, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x75, 0x6e, 0x69, 0x78, 0x54, 0x73, 0x4e, 0x61, 0x6e, 0x6f, 0x73, 0x53, 0x74,
	0x72, 0x12, 0x44, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x09, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71, 0x2e, 0x4d,
	0x61, 0x74, 0x63, 0x68, 0x53, 0x74, 0x61, 0x72, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x4d,
	0x61, 0x74, 0x63, 0x68, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x12, 0x1a, 0x0a, 0x09, 0x72, 0x6f, 0x6f, 0x6d, 0x5f,
	0x69, 0x64, 0x5f, 0x31, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x72, 0x6f, 0x6f, 0x6d,
	0x49, 0x64, 0x31, 0x12, 0x1a, 0x0a, 0x09, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x5f, 0x32,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x32, 0x12,
	0x1a, 0x0a, 0x09, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x5f, 0x33, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x33, 0x12, 0x1a, 0x0a, 0x09, 0x72,
	0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x5f, 0x34, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x34, 0x12, 0x2e, 0x0a, 0x13, 0x61, 0x75, 0x74, 0x6f, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x5f, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x50,
	0x72, 0x65, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x55, 0x0a, 0x10, 0x61, 0x75, 0x74, 0x6f, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x5f, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2a, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71, 0x2e, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x53, 0x74, 0x61, 0x72, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x75,
	0x74, 0x6f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x52, 0x0f, 0x61,
	0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x1a, 0xb4,
	0x01, 0x0a, 0x0f, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0f, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71, 0x2e, 0x52, 0x61,
	0x6e, 0x6b, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x2c, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66,
	0x6f, 0x78, 0x77, 0x71, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x79, 0x1a, 0x92, 0x02, 0x0a, 0x0f, 0x41, 0x75, 0x74, 0x6f, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x6d, 0x61, 0x69, 0x6e,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x65, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x6d, 0x61, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x63, 0x12, 0x27, 0x0a, 0x0f,
	0x62, 0x79, 0x6f, 0x79, 0x6f, 0x6d, 0x69, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x62, 0x79, 0x6f, 0x79, 0x6f, 0x6d, 0x69, 0x50, 0x65,
	0x72, 0x69, 0x6f, 0x64, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x62, 0x79, 0x6f, 0x79, 0x6f, 0x6d, 0x69,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x65, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0e, 0x62, 0x79, 0x6f, 0x79, 0x6f, 0x6d, 0x69, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x63, 0x12,
	0x23, 0x0a, 0x0d, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x65, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x65, 0x52,
	0x75, 0x6c, 0x65, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x69, 0x6e, 0x5f, 0x64, 0x75, 0x61, 0x6e,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6d, 0x69, 0x6e, 0x44, 0x75, 0x61, 0x6e, 0x12,
	0x19, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x5f, 0x64, 0x75, 0x61, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x6d, 0x61, 0x78, 0x44, 0x75, 0x61, 0x6e, 0x22, 0x5f, 0x0a, 0x0d, 0x48, 0x65,
	0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x26, 0x0a, 0x0f, 0x75,
	0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x31, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x31, 0x12, 0x26, 0x0a, 0x0f, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x5f, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x75, 0x6e,
	0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x32, 0x22, 0x35, 0x0a, 0x10, 0x45,
	0x6e, 0x74, 0x65, 0x72, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x21, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x9f, 0x01, 0x0a, 0x11, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x6f, 0x6f, 0x6d,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x2a, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66,
	0x6f, 0x78, 0x77, 0x71, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x52, 0x06, 0x72, 0x6f, 0x6f,
	0x6d, 0x49, 0x64, 0x12, 0x3f, 0x0a, 0x0e, 0x68, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71, 0x2e, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d, 0x68, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0x35, 0x0a, 0x10, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x52, 0x6f, 0x6f,
	0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71,
	0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x52, 0x02, 0x69, 0x64, 0x22, 0x5e, 0x0a, 0x11, 0x4c,
	0x65, 0x61, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x2a, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71, 0x2e, 0x52, 0x6f, 0x6f,
	0x6d, 0x49, 0x64, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x22, 0x80, 0x01, 0x0a, 0x1b,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70,
	0x61, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f,
	0x78, 0x77, 0x71, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e,
	0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x5f, 0x31, 0x18, 0x02, 0x20,
	0x02, 0x28, 0x03, 0x52, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x31, 0x12, 0x1e,
	0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x5f, 0x32, 0x18, 0x03, 0x20,
	0x02, 0x28, 0x03, 0x52, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x32, 0x22, 0xd1,
	0x03, 0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x50, 0x61, 0x72, 0x74, 0x69,
	0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x21,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x5f, 0x0a, 0x0c, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f,
	0x78, 0x77, 0x71, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x50, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e,
	0x74, 0x73, 0x12, 0x2b, 0x0a, 0x11, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e,
	0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x70,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x1a,
	0xe0, 0x01, 0x0a, 0x13, 0x52, 0x6f, 0x6f, 0x6d, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70,
	0x61, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x61, 0x6d, 0x65,
	0x5f, 0x61, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x61, 0x6d, 0x65,
	0x41, 0x6c, 0x74, 0x12, 0x23, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0f, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71, 0x2e, 0x52, 0x61,
	0x6e, 0x6b, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x77, 0x69, 0x6e, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x77, 0x69, 0x6e, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x6c, 0x6f, 0x73, 0x73, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6c, 0x6f,
	0x73, 0x73, 0x65, 0x73, 0x12, 0x2c, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x78, 0x77,
	0x71, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x22, 0x2d, 0x0a, 0x0c, 0x4c, 0x61, 0x73, 0x74, 0x54, 0x75, 0x72, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0x83, 0x01, 0x0a, 0x0b, 0x4d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x52, 0x01, 0x78, 0x12,
	0x0c, 0x0a, 0x01, 0x79, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x01, 0x79, 0x12, 0x22, 0x0a,
	0x03, 0x63, 0x6f, 0x6c, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71, 0x2e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x03, 0x63, 0x6f,
	0x6c, 0x12, 0x34, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x74, 0x75, 0x72, 0x6e, 0x18, 0x04,
	0x20, 0x02, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71,
	0x2e, 0x4c, 0x61, 0x73, 0x74, 0x54, 0x75, 0x72, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x6c,
	0x61, 0x73, 0x74, 0x54, 0x75, 0x72, 0x6e, 0x22, 0x2d, 0x0a, 0x0c, 0x4d, 0x6f, 0x76, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x43, 0x0a, 0x0b, 0x50, 0x61, 0x73, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x74, 0x75,
	0x72, 0x6e, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66,
	0x6f, 0x78, 0x77, 0x71, 0x2e, 0x4c, 0x61, 0x73, 0x74, 0x54, 0x75, 0x72, 0x6e, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x54, 0x75, 0x72, 0x6e, 0x22, 0x2d, 0x0a, 0x0c, 0x50,
	0x61, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x26, 0x0a, 0x14, 0x53, 0x79,
	0x6e, 0x63, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x73, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x52, 0x02,
	0x74, 0x73, 0x22, 0xfa, 0x01, 0x0a, 0x15, 0x53, 0x79, 0x6e, 0x63, 0x4d, 0x61, 0x74, 0x63, 0x68,
	0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x52, 0x02, 0x74, 0x73, 0x12, 0x1b, 0x0a, 0x09,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x73, 0x12, 0x4f, 0x0a, 0x0c, 0x65, 0x6c, 0x61,
	0x70, 0x73, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2c, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71, 0x2e, 0x53, 0x79, 0x6e, 0x63,
	0x4d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x45, 0x6c, 0x61, 0x70, 0x73, 0x65, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x65,
	0x6c, 0x61, 0x70, 0x73, 0x65, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2a, 0x0a, 0x07, 0x72, 0x6f,
	0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x52, 0x06,
	0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x1a, 0x37, 0x0a, 0x0b, 0x45, 0x6c, 0x61, 0x70, 0x73, 0x65,
	0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x28, 0x0a, 0x10, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x65, 0x6c,
	0x61, 0x70, 0x73, 0x65, 0x64, 0x5f, 0x73, 0x65, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0e, 0x74, 0x69, 0x6d, 0x65, 0x45, 0x6c, 0x61, 0x70, 0x73, 0x65, 0x64, 0x53, 0x65, 0x63, 0x22,
	0xa9, 0x02, 0x0a, 0x14, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x54,
	0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x75, 0x6e, 0x6b, 0x6e,
	0x6f, 0x77, 0x6e, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0d, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x31,
	0x12, 0x2b, 0x0a, 0x12, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6c, 0x65,
	0x66, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x0f, 0x6d, 0x61,
	0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x4c, 0x65, 0x66, 0x74, 0x53, 0x65, 0x63, 0x12, 0x30, 0x0a,
	0x14, 0x62, 0x79, 0x6f, 0x79, 0x6f, 0x6d, 0x69, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x73,
	0x5f, 0x6c, 0x65, 0x66, 0x74, 0x18, 0x03, 0x20, 0x02, 0x28, 0x03, 0x52, 0x12, 0x62, 0x79, 0x6f,
	0x79, 0x6f, 0x6d, 0x69, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x73, 0x4c, 0x65, 0x66, 0x74, 0x12,
	0x30, 0x0a, 0x14, 0x62, 0x79, 0x6f, 0x79, 0x6f, 0x6d, 0x69, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x62,
	0x79, 0x6f, 0x79, 0x6f, 0x6d, 0x69, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65,
	0x63, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05,
	0x20, 0x02, 0x28, 0x03, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x3b,
	0x0a, 0x1a, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x5f, 0x6c, 0x65, 0x66, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x17, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x4c, 0x65, 0x66, 0x74, 0x53, 0x65, 0x63, 0x22, 0xf2, 0x01, 0x0a, 0x0d,
	0x4e, 0x65, 0x78, 0x74, 0x4d, 0x6f, 0x76, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x0c, 0x0a,
	0x01, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x01, 0x79, 0x12, 0x22, 0x0a, 0x03, 0x63, 0x6f, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x78,
	0x77, 0x71, 0x2e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x03, 0x63, 0x6f, 0x6c, 0x12, 0x3e, 0x0a,
	0x0a, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71, 0x2e, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x34, 0x0a,
	0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x74, 0x75, 0x72, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71, 0x2e, 0x4c, 0x61, 0x73,
	0x74, 0x54, 0x75, 0x72, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x54,
	0x75, 0x72, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x0e, 0x0a, 0x02, 0x74, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x74, 0x73,
	0x22, 0xc6, 0x01, 0x0a, 0x09, 0x50, 0x61, 0x73, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x3e,
	0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71, 0x2e, 0x4d,
	0x61, 0x74, 0x63, 0x68, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x34,
	0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x74, 0x75, 0x72, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71, 0x2e, 0x4c, 0x61,
	0x73, 0x74, 0x54, 0x75, 0x72, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74,
	0x54, 0x75, 0x72, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x26, 0x0a, 0x0f, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x5f, 0x34, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x75, 0x6e, 0x6b, 0x6e,
	0x6f, 0x77, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x34, 0x22, 0x8f, 0x02, 0x0a, 0x0e, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0f,
	0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x31, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x31, 0x12, 0x2b, 0x0a, 0x12, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x5f, 0x6c, 0x65, 0x66, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03,
	0x52, 0x0f, 0x6d, 0x61, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x4c, 0x65, 0x66, 0x74, 0x53, 0x65,
	0x63, 0x12, 0x30, 0x0a, 0x14, 0x62, 0x79, 0x6f, 0x79, 0x6f, 0x6d, 0x69, 0x5f, 0x70, 0x65, 0x72,
	0x69, 0x6f, 0x64, 0x73, 0x5f, 0x6c, 0x65, 0x66, 0x74, 0x18, 0x03, 0x20, 0x02, 0x28, 0x03, 0x52,
	0x12, 0x62, 0x79, 0x6f, 0x79, 0x6f, 0x6d, 0x69, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x73, 0x4c,
	0x65, 0x66, 0x74, 0x12, 0x31, 0x0a, 0x15, 0x62, 0x79, 0x6f, 0x79, 0x6f, 0x6d, 0x69, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x5f, 0x6c, 0x65, 0x66, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x12, 0x62, 0x79, 0x6f, 0x79, 0x6f, 0x6d, 0x69, 0x54, 0x69, 0x6d, 0x65, 0x4c,
	0x65, 0x66, 0x74, 0x53, 0x65, 0x63, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x02, 0x28, 0x03, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x5f, 0x36, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x75, 0x6e,
	0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x36, 0x22, 0x77, 0x0a, 0x14, 0x52,
	0x65, 0x73, 0x75, 0x6d, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x5f, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x75, 0x6e,
	0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x12, 0x37, 0x0a, 0x09, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x64, 0x6f, 0x77, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x09, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x64, 0x6f, 0x77, 0x6e, 0x22, 0x40, 0x0a, 0x16, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26,
	0x0a, 0x0f, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f,
	0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x22, 0x38, 0x0a, 0x17, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x22, 0x3d, 0x0a, 0x1c, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67,
	0x44, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22,
	0x58, 0x0a, 0x10, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x63, 0x69, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x67, 0x72, 0x65, 0x65, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x08, 0x52, 0x05, 0x61, 0x67, 0x72, 0x65, 0x65, 0x12, 0x2e, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66,
	0x6f, 0x78, 0x77, 0x71, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61,
	0x67, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x67, 0x65, 0x22, 0xbb, 0x02, 0x0a, 0x0d, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x75,
	0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x31, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x31, 0x12, 0x2e, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x02,
	0x28, 0x0e, 0x32, 0x18, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71, 0x2e, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x67, 0x65, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x67, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x5f, 0x34, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x75, 0x6e,
	0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x34, 0x12, 0x1c, 0x0a, 0x09, 0x6f,
	0x77, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x12, 0x26, 0x0a, 0x0f, 0x75, 0x6e, 0x6b,
	0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x36, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x0d, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x36, 0x12, 0x28, 0x0a, 0x06, 0x77, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x10, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71, 0x2e, 0x43, 0x6f,
	0x6c, 0x6f, 0x72, 0x52, 0x06, 0x77, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x63, 0x6f, 0x72, 0x65, 0x5f, 0x6c, 0x65, 0x61, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x09, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x4c, 0x65, 0x61, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x5f, 0x6c, 0x65, 0x66, 0x74, 0x18, 0x07, 0x20, 0x02, 0x28, 0x03, 0x52, 0x08, 0x74,
	0x69, 0x6d, 0x65, 0x4c, 0x65, 0x66, 0x74, 0x22, 0x37, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x69, 0x67,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x75, 0x6e, 0x6b, 0x6e,
	0x6f, 0x77, 0x6e, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0d, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x31,
	0x22, 0x38, 0x0a, 0x0e, 0x52, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x5f, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x75, 0x6e, 0x6b,
	0x6e, 0x6f, 0x77, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x22, 0x83, 0x02, 0x0a, 0x0f, 0x47,
	0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x26,
	0x0a, 0x0f, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f,
	0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x12, 0x28, 0x0a, 0x06, 0x77, 0x69, 0x6e, 0x6e, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x78,
	0x77, 0x71, 0x2e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x06, 0x77, 0x69, 0x6e, 0x6e, 0x65, 0x72,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x6c, 0x65, 0x61, 0x64, 0x18, 0x03,
	0x20, 0x02, 0x28, 0x03, 0x52, 0x09, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x4c, 0x65, 0x61, 0x64, 0x12,
	0x26, 0x0a, 0x0f, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x5f, 0x34, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77,
	0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x34, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x13, 0x0a, 0x05, 0x74, 0x73, 0x5f, 0x31, 0x30, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x74, 0x73, 0x31, 0x30, 0x12, 0x13, 0x0a, 0x05, 0x74, 0x73, 0x5f, 0x31, 0x32, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x73, 0x31, 0x32, 0x12, 0x13, 0x0a, 0x05, 0x74,
	0x73, 0x5f, 0x31, 0x33, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x73, 0x31, 0x33,
	0x2a, 0x5f, 0x0a, 0x0d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x67,
	0x65, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x54, 0x41, 0x47, 0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f,
	0x57, 0x4e, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x53, 0x54, 0x41, 0x47, 0x45, 0x5f, 0x41, 0x47,
	0x52, 0x45, 0x45, 0x5f, 0x54, 0x4f, 0x5f, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x10, 0x01, 0x12, 0x21,
	0x0a, 0x1d, 0x53, 0x54, 0x41, 0x47, 0x45, 0x5f, 0x41, 0x47, 0x52, 0x45, 0x45, 0x5f, 0x57, 0x49,
	0x54, 0x48, 0x5f, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x10,
	0x02, 0x32, 0xa8, 0x1b, 0x0a, 0x04, 0x50, 0x6c, 0x61, 0x79, 0x12, 0x68, 0x0a, 0x05, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x12, 0x21, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71, 0x2e,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x6c, 0x61, 0x79, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x78,
	0x77, 0x71, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x6c, 0x61, 0x79, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x18, 0x82, 0xb5, 0x18, 0x14,
	0x08, 0xd8, 0xcc, 0x01, 0x10, 0xd8, 0xcc, 0x01, 0x1a, 0x0a, 0x08, 0x01, 0x28, 0x20, 0x30, 0x06,
	0x38, 0xa1, 0x9c, 0x01, 0x12, 0x69, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x73, 0x12, 0x1d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x19, 0x82, 0xb5, 0x18, 0x15, 0x08, 0xd8, 0xcc, 0x01, 0x10, 0xd8, 0xcc, 0x01,
	0x1a, 0x0b, 0x08, 0xc9, 0x01, 0x28, 0x20, 0x30, 0x06, 0x38, 0xce, 0x9c, 0x01, 0x30, 0x01, 0x12,
	0x6d, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x1f, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71, 0x2e, 0x47, 0x65, 0x74,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x20, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71, 0x2e, 0x47, 0x65,
	0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x19, 0x82, 0xb5, 0x18, 0x15, 0x08, 0xd8, 0xcc, 0x01, 0x10, 0xd8, 0xcc,
	0x01, 0x1a, 0x0b, 0x08, 0xe9, 0x07, 0x28, 0x20, 0x30, 0x06, 0x38, 0xcb, 0x9c, 0x01, 0x12, 0x69,
	0x0a, 0x0b, 0x53, 0x79, 0x6e, 0x63, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x12, 0x1d, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x6f,
	0x70, 0x65, 0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1b, 0x82, 0xb5,
	0x18, 0x17, 0x08, 0xd8, 0xcc, 0x01, 0x10, 0xd8, 0xcc, 0x01, 0x1a, 0x0d, 0x08, 0xcb, 0x01, 0x28,
	0x20, 0x30, 0x06, 0x38, 0xce, 0x9c, 0x01, 0x40, 0x03, 0x12, 0x66, 0x0a, 0x0b, 0x47, 0x65, 0x74,
	0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66,
	0x6f, 0x78, 0x77, 0x71, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f,
	0x78, 0x77, 0x71, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x18, 0x82, 0xb5, 0x18, 0x14, 0x08, 0xd8, 0xcc,
	0x01, 0x10, 0xd8, 0xcc, 0x01, 0x1a, 0x0a, 0x08, 0x7a, 0x28, 0x20, 0x30, 0x06, 0x38, 0xc0, 0xea,
	0x01, 0x12, 0x60, 0x0a, 0x09, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x1b,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71, 0x2e, 0x45, 0x6e, 0x74, 0x65, 0x72,
	0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71, 0x2e, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x6f, 0x6f,
	0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x18, 0x82, 0xb5, 0x18, 0x14, 0x08,
	0xd8, 0xcc, 0x01, 0x10, 0xd8, 0xcc, 0x01, 0x1a, 0x0a, 0x08, 0x64, 0x28, 0x20, 0x30, 0x06, 0x38,
	0xc5, 0xea, 0x01, 0x12, 0x60, 0x0a, 0x09, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d,
	0x12, 0x1b, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71, 0x2e, 0x4c, 0x65, 0x61,
	0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71, 0x2e, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x52,
	0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x18, 0x82, 0xb5, 0x18,
	0x14, 0x08, 0xd8, 0xcc, 0x01, 0x10, 0xd8, 0xcc, 0x01, 0x1a, 0x0a, 0x08, 0x65, 0x28, 0x20, 0x30,
	0x06, 0x38, 0xc6, 0xea, 0x01, 0x12, 0x81, 0x01, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f,
	0x6f, 0x6d, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x12, 0x26,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x6f, 0x6f, 0x6d, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x78,
	0x77, 0x71, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x50, 0x61, 0x72, 0x74, 0x69,
	0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x18, 0x82, 0xb5, 0x18, 0x14, 0x08, 0xd8, 0xcc, 0x01, 0x10, 0xd8, 0xcc, 0x01, 0x1a, 0x0a, 0x08,
	0x64, 0x28, 0x20, 0x30, 0x06, 0x38, 0xda, 0xea, 0x01, 0x12, 0x73, 0x0a, 0x1d, 0x4c, 0x69, 0x73,
	0x74, 0x65, 0x6e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x1a, 0x21, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71, 0x2e, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x15, 0x82, 0xb5, 0x18, 0x11, 0x08, 0xd8, 0xcc, 0x01, 0x10,
	0xd8, 0xcc, 0x01, 0x1a, 0x07, 0x08, 0x91, 0x03, 0x38, 0xce, 0x9c, 0x01, 0x30, 0x01, 0x12, 0x69,
	0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4f, 0x6e,
	0x6c, 0x69, 0x6e, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x1a, 0x1c, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71, 0x2e, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x22, 0x15, 0x82, 0xb5, 0x18, 0x11, 0x08, 0xd8, 0xcc, 0x01, 0x10, 0xd8, 0xcc, 0x01, 0x1a, 0x07,
	0x08, 0x92, 0x03, 0x38, 0xce, 0x9c, 0x01, 0x30, 0x01, 0x12, 0x6b, 0x0a, 0x19, 0x4c, 0x69, 0x73,
	0x74, 0x65, 0x6e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1d,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x15, 0x82,
	0xb5, 0x18, 0x11, 0x08, 0xd8, 0xcc, 0x01, 0x10, 0xd8, 0xcc, 0x01, 0x1a, 0x07, 0x08, 0x93, 0x03,
	0x38, 0xce, 0x9c, 0x01, 0x30, 0x01, 0x12, 0x67, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1b, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x66, 0x6f, 0x78, 0x77, 0x71, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x15, 0x82, 0xb5, 0x18, 0x11, 0x08, 0xd8, 0xcc, 0x01,
	0x10, 0xd8, 0xcc, 0x01, 0x1a, 0x07, 0x08, 0x94, 0x03, 0x38, 0xce, 0x9c, 0x01, 0x30, 0x01, 0x12,
	0x7a, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x12, 0x23, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x66, 0x6f, 0x78, 0x77, 0x71, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74,
	0x63, 0x68, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x1a, 0x82, 0xb5, 0x18, 0x16, 0x08, 0xd8, 0xcc, 0x01, 0x10, 0xd8, 0xcc, 0x01, 0x1a, 0x0c, 0x08,
	0xb1, 0x8e, 0x06, 0x28, 0x20, 0x30, 0x06, 0x38, 0xb6, 0xea, 0x01, 0x12, 0x71, 0x0a, 0x0e, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x12, 0x20, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41,
	0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x21, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71, 0x2e, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x41, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x1a, 0x82, 0xb5, 0x18, 0x16, 0x08, 0xd8, 0xcc, 0x01, 0x10, 0xd8, 0xcc, 0x01,
	0x1a, 0x0c, 0x08, 0xa2, 0x8e, 0x06, 0x28, 0x20, 0x30, 0x06, 0x38, 0xb6, 0xea, 0x01, 0x12, 0x6e,
	0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x41, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1e, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71,
	0x2e, 0x41, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x22, 0x16, 0x82, 0xb5, 0x18, 0x12, 0x08, 0xd8, 0xcc, 0x01, 0x10, 0xd8,
	0xcc, 0x01, 0x1a, 0x08, 0x08, 0xac, 0x8e, 0x06, 0x38, 0xb6, 0xea, 0x01, 0x30, 0x01, 0x12, 0x6e,
	0x0a, 0x0d, 0x53, 0x74, 0x6f, 0x70, 0x41, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x12,
	0x1f, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71, 0x2e, 0x53, 0x74, 0x6f, 0x70,
	0x41, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x20, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71, 0x2e, 0x53, 0x74, 0x6f,
	0x70, 0x41, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x1a, 0x82, 0xb5, 0x18, 0x16, 0x08, 0xd8, 0xcc, 0x01, 0x10, 0xd8, 0xcc, 0x01,
	0x1a, 0x0c, 0x08, 0xab, 0x8e, 0x06, 0x28, 0x20, 0x30, 0x06, 0x38, 0xb6, 0xea, 0x01, 0x12, 0x66,
	0x0a, 0x0b, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x12, 0x1d, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74,
	0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x6f,
	0x70, 0x65, 0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x4d,
	0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x18, 0x82, 0xb5,
	0x18, 0x14, 0x08, 0xd8, 0xcc, 0x01, 0x10, 0xd8, 0xcc, 0x01, 0x1a, 0x0a, 0x08, 0x69, 0x28, 0x20,
	0x30, 0x06, 0x38, 0x98, 0xf2, 0x01, 0x12, 0x6d, 0x0a, 0x0d, 0x53, 0x79, 0x6e, 0x63, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f,
	0x78, 0x77, 0x71, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x69, 0x6d,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66,
	0x6f, 0x78, 0x77, 0x71, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x69,
	0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x19, 0x82, 0xb5, 0x18, 0x15,
	0x08, 0xd8, 0xcc, 0x01, 0x10, 0xd8, 0xcc, 0x01, 0x1a, 0x0b, 0x08, 0xc8, 0x01, 0x28, 0x20, 0x30,
	0x06, 0x38, 0x98, 0xf2, 0x01, 0x12, 0x52, 0x0a, 0x04, 0x4d, 0x6f, 0x76, 0x65, 0x12, 0x16, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71, 0x2e, 0x4d, 0x6f, 0x76, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x78, 0x77,
	0x71, 0x2e, 0x4d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x19,
	0x82, 0xb5, 0x18, 0x15, 0x08, 0xd8, 0xcc, 0x01, 0x10, 0xd8, 0xcc, 0x01, 0x1a, 0x0b, 0x08, 0xc9,
	0x01, 0x28, 0x20, 0x30, 0x06, 0x38, 0x98, 0xf2, 0x01, 0x12, 0x52, 0x0a, 0x04, 0x50, 0x61, 0x73,
	0x73, 0x12, 0x16, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71, 0x2e, 0x50, 0x61,
	0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x66, 0x6f, 0x78, 0x77, 0x71, 0x2e, 0x50, 0x61, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x19, 0x82, 0xb5, 0x18, 0x15, 0x08, 0xd8, 0xcc, 0x01, 0x10, 0xd8, 0xcc, 0x01,
	0x1a, 0x0b, 0x08, 0xcc, 0x01, 0x28, 0x20, 0x30, 0x06, 0x38, 0x98, 0xf2, 0x01, 0x12, 0x73, 0x0a,
	0x0f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67,
	0x12, 0x21, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71, 0x2e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71, 0x2e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x19, 0x82, 0xb5, 0x18, 0x15, 0x08, 0xd8, 0xcc,
	0x01, 0x10, 0xd8, 0xcc, 0x01, 0x1a, 0x0b, 0x08, 0xad, 0x02, 0x28, 0x20, 0x30, 0x06, 0x38, 0x98,
	0xf2, 0x01, 0x12, 0x77, 0x0a, 0x14, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x69,
	0x6e, 0x67, 0x44, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x44,
	0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x1a, 0x27, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f,
	0x78, 0x77, 0x71, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67,
	0x44, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x19, 0x82, 0xb5, 0x18, 0x15, 0x08, 0xd8, 0xcc, 0x01, 0x10, 0xd8, 0xcc, 0x01, 0x1a, 0x0b,
	0x08, 0xb0, 0x02, 0x28, 0x20, 0x30, 0x06, 0x38, 0x98, 0xf2, 0x01, 0x12, 0x58, 0x0a, 0x06, 0x52,
	0x65, 0x73, 0x69, 0x67, 0x6e, 0x12, 0x18, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x78, 0x77,
	0x71, 0x2e, 0x52, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x19, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x69,
	0x67, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x19, 0x82, 0xb5, 0x18, 0x15,
	0x08, 0xd8, 0xcc, 0x01, 0x10, 0xd8, 0xcc, 0x01, 0x1a, 0x0b, 0x08, 0xb7, 0x02, 0x28, 0x20, 0x30,
	0x06, 0x38, 0x98, 0xf2, 0x01, 0x12, 0x64, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x4d,
	0x61, 0x74, 0x63, 0x68, 0x53, 0x74, 0x61, 0x72, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1a, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f,
	0x78, 0x77, 0x71, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x53, 0x74, 0x61, 0x72, 0x74, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x22, 0x14, 0x82, 0xb5, 0x18, 0x10, 0x08, 0xd8, 0xcc, 0x01, 0x10, 0xd8, 0xcc,
	0x01, 0x1a, 0x06, 0x08, 0x6b, 0x38, 0x98, 0xf2, 0x01, 0x30, 0x01, 0x12, 0x61, 0x0a, 0x14, 0x4c,
	0x69, 0x73, 0x74, 0x65, 0x6e, 0x4e, 0x65, 0x78, 0x74, 0x4d, 0x6f, 0x76, 0x65, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x18, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71, 0x2e, 0x4e, 0x65, 0x78, 0x74, 0x4d, 0x6f, 0x76, 0x65,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x15, 0x82, 0xb5, 0x18, 0x11, 0x08, 0xd8, 0xcc, 0x01, 0x10,
	0xd8, 0xcc, 0x01, 0x1a, 0x07, 0x08, 0xcb, 0x01, 0x38, 0x98, 0xf2, 0x01, 0x30, 0x01, 0x12, 0x59,
	0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x50, 0x61, 0x73, 0x73, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x14, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71, 0x2e, 0x50, 0x61, 0x73, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x22, 0x15, 0x82, 0xb5, 0x18, 0x11, 0x08, 0xd8, 0xcc, 0x01, 0x10, 0xd8, 0xcc, 0x01, 0x1a, 0x07,
	0x08, 0xce, 0x01, 0x38, 0x98, 0xf2, 0x01, 0x30, 0x01, 0x12, 0x62, 0x0a, 0x15, 0x4c, 0x69, 0x73,
	0x74, 0x65, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x19, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x64, 0x6f, 0x77, 0x6e,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x14, 0x82, 0xb5, 0x18, 0x10, 0x08, 0xd8, 0xcc, 0x01, 0x10,
	0xd8, 0xcc, 0x01, 0x1a, 0x06, 0x08, 0x6c, 0x38, 0x98, 0xf2, 0x01, 0x30, 0x01, 0x12, 0x6e, 0x0a,
	0x1b, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1f, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71,
	0x2e, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x64, 0x6f, 0x77, 0x6e,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x14, 0x82, 0xb5, 0x18, 0x10, 0x08, 0xd8, 0xcc, 0x01, 0x10,
	0xd8, 0xcc, 0x01, 0x1a, 0x06, 0x08, 0x6d, 0x38, 0x98, 0xf2, 0x01, 0x30, 0x01, 0x12, 0x67, 0x0a,
	0x17, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x44,
	0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x1b, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71, 0x2e, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x15, 0x82,
	0xb5, 0x18, 0x11, 0x08, 0xd8, 0xcc, 0x01, 0x10, 0xd8, 0xcc, 0x01, 0x1a, 0x07, 0x08, 0xb2, 0x02,
	0x38, 0x98, 0xf2, 0x01, 0x30, 0x01, 0x12, 0x61, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x18, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x78,
	0x77, 0x71, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x22, 0x15, 0x82, 0xb5, 0x18, 0x11, 0x08, 0xd8, 0xcc, 0x01, 0x10, 0xd8, 0xcc, 0x01, 0x1a, 0x07,
	0x08, 0xaf, 0x02, 0x38, 0x98, 0xf2, 0x01, 0x30, 0x01, 0x12, 0x65, 0x0a, 0x16, 0x4c, 0x69, 0x73,
	0x74, 0x65, 0x6e, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1a, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x15, 0x82, 0xb5, 0x18, 0x11, 0x08, 0xd8, 0xcc,
	0x01, 0x10, 0xd8, 0xcc, 0x01, 0x1a, 0x07, 0x08, 0x95, 0x03, 0x38, 0x98, 0xf2, 0x01, 0x30, 0x01,
	0x12, 0x61, 0x0a, 0x08, 0x53, 0x79, 0x6e, 0x63, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x2e, 0x6f,
	0x70, 0x65, 0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x54, 0x69, 0x6d,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66,
	0x6f, 0x78, 0x77, 0x71, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c, 0x82, 0xb5, 0x18, 0x18, 0x08, 0xd8, 0xcc, 0x01, 0x10,
	0xd8, 0xcc, 0x01, 0x1a, 0x0e, 0x08, 0x05, 0x28, 0x20, 0x30, 0x06, 0x38, 0xa1, 0x9c, 0x01, 0x40,
	0x0b, 0x48, 0x01, 0x12, 0x67, 0x0a, 0x08, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x31, 0x12,
	0x1e, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71, 0x2e, 0x55, 0x6e, 0x6b, 0x6e,
	0x6f, 0x77, 0x6e, 0x50, 0x6c, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x31, 0x1a,
	0x1f, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71, 0x2e, 0x55, 0x6e, 0x6b, 0x6e,
	0x6f, 0x77, 0x6e, 0x50, 0x6c, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x31,
	0x22, 0x1a, 0x82, 0xb5, 0x18, 0x16, 0x08, 0xd8, 0xcc, 0x01, 0x10, 0xd8, 0xcc, 0x01, 0x1a, 0x0c,
	0x08, 0x02, 0x28, 0x20, 0x30, 0x06, 0x38, 0xe0, 0xea, 0x01, 0x40, 0x01, 0x42, 0x26, 0x5a, 0x24,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x66,
	0x6f, 0x78, 0x77, 0x71, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x78, 0x77, 0x71, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f,
}

var (
	file_proto_play_proto_rawDescOnce sync.Once
	file_proto_play_proto_rawDescData = file_proto_play_proto_rawDesc
)

func file_proto_play_proto_rawDescGZIP() []byte {
	file_proto_play_proto_rawDescOnce.Do(func() {
		file_proto_play_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_play_proto_rawDescData)
	})
	return file_proto_play_proto_rawDescData
}

var file_proto_play_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_proto_play_proto_msgTypes = make([]protoimpl.MessageInfo, 84)
var file_proto_play_proto_goTypes = []interface{}{
	(CountingStage)(0),                                          // 0: openfoxwq.CountingStage
	(GetPlayerInfoResponse_ResultsType)(0),                      // 1: openfoxwq.GetPlayerInfoResponse.ResultsType
	(*LoginPlayServerRequest)(nil),                              // 2: openfoxwq.LoginPlayServerRequest
	(*LoginPlayServerResponse)(nil),                             // 3: openfoxwq.LoginPlayServerResponse
	(*ListPlayersRequest)(nil),                                  // 4: openfoxwq.ListPlayersRequest
	(*ListPlayersResponse)(nil),                                 // 5: openfoxwq.ListPlayersResponse
	(*GetPlayerInfoRequest)(nil),                                // 6: openfoxwq.GetPlayerInfoRequest
	(*GetPlayerInfoResponse)(nil),                               // 7: openfoxwq.GetPlayerInfoResponse
	(*InfoOptions)(nil),                                         // 8: openfoxwq.InfoOptions
	(*SyncTimeRequest)(nil),                                     // 9: openfoxwq.SyncTimeRequest
	(*SyncTimeResponse)(nil),                                    // 10: openfoxwq.SyncTimeResponse
	(*SyncPlayersRequest)(nil),                                  // 11: openfoxwq.SyncPlayersRequest
	(*SyncPlayersResponse)(nil),                                 // 12: openfoxwq.SyncPlayersResponse
	(*PlayerStateEvent)(nil),                                    // 13: openfoxwq.PlayerStateEvent
	(*PlayerOnlineCountEvent)(nil),                              // 14: openfoxwq.PlayerOnlineCountEvent
	(*PlayerOnlineEvent)(nil),                                   // 15: openfoxwq.PlayerOnlineEvent
	(*PlayerOfflineEvent)(nil),                                  // 16: openfoxwq.PlayerOfflineEvent
	(*UnknownPlayRequest1)(nil),                                 // 17: openfoxwq.UnknownPlayRequest1
	(*UnknownPlayResponse1)(nil),                                // 18: openfoxwq.UnknownPlayResponse1
	(*GetRoomInfoRequest)(nil),                                  // 19: openfoxwq.GetRoomInfoRequest
	(*GetRoomInfoResponse)(nil),                                 // 20: openfoxwq.GetRoomInfoResponse
	(*GetAutomatchStatsRequest)(nil),                            // 21: openfoxwq.GetAutomatchStatsRequest
	(*GetAutomatchStatsResponse)(nil),                           // 22: openfoxwq.GetAutomatchStatsResponse
	(*StartAutomatchRequest)(nil),                               // 23: openfoxwq.StartAutomatchRequest
	(*StartAutomatchResponse)(nil),                              // 24: openfoxwq.StartAutomatchResponse
	(*StopAutomatchRequest)(nil),                                // 25: openfoxwq.StopAutomatchRequest
	(*StopAutomatchResponse)(nil),                               // 26: openfoxwq.StopAutomatchResponse
	(*AutomatchFoundEvent)(nil),                                 // 27: openfoxwq.AutomatchFoundEvent
	(*AcceptMatchRequest)(nil),                                  // 28: openfoxwq.AcceptMatchRequest
	(*AcceptMatchResponse)(nil),                                 // 29: openfoxwq.AcceptMatchResponse
	(*MatchStartEvent)(nil),                                     // 30: openfoxwq.MatchStartEvent
	(*HeartbeatInfo)(nil),                                       // 31: openfoxwq.HeartbeatInfo
	(*EnterRoomRequest)(nil),                                    // 32: openfoxwq.EnterRoomRequest
	(*EnterRoomResponse)(nil),                                   // 33: openfoxwq.EnterRoomResponse
	(*LeaveRoomRequest)(nil),                                    // 34: openfoxwq.LeaveRoomRequest
	(*LeaveRoomResponse)(nil),                                   // 35: openfoxwq.LeaveRoomResponse
	(*ListRoomParticipantsRequest)(nil),                         // 36: openfoxwq.ListRoomParticipantsRequest
	(*ListRoomParticipantsResponse)(nil),                        // 37: openfoxwq.ListRoomParticipantsResponse
	(*LastTurnInfo)(nil),                                        // 38: openfoxwq.LastTurnInfo
	(*MoveRequest)(nil),                                         // 39: openfoxwq.MoveRequest
	(*MoveResponse)(nil),                                        // 40: openfoxwq.MoveResponse
	(*PassRequest)(nil),                                         // 41: openfoxwq.PassRequest
	(*PassResponse)(nil),                                        // 42: openfoxwq.PassResponse
	(*SyncMatchTimeRequest)(nil),                                // 43: openfoxwq.SyncMatchTimeRequest
	(*SyncMatchTimeResponse)(nil),                               // 44: openfoxwq.SyncMatchTimeResponse
	(*MatchPlayerTimeState)(nil),                                // 45: openfoxwq.MatchPlayerTimeState
	(*NextMoveEvent)(nil),                                       // 46: openfoxwq.NextMoveEvent
	(*PassEvent)(nil),                                           // 47: openfoxwq.PassEvent
	(*CountdownEvent)(nil),                                      // 48: openfoxwq.CountdownEvent
	(*ResumeCountdownEvent)(nil),                                // 49: openfoxwq.ResumeCountdownEvent
	(*RequestCountingRequest)(nil),                              // 50: openfoxwq.RequestCountingRequest
	(*RequestCountingResponse)(nil),                             // 51: openfoxwq.RequestCountingResponse
	(*SendCountingDecisionResponse)(nil),                        // 52: openfoxwq.SendCountingDecisionResponse
	(*CountingDecision)(nil),                                    // 53: openfoxwq.CountingDecision
	(*CountingEvent)(nil),                                       // 54: openfoxwq.CountingEvent
	(*ResignRequest)(nil),                                       // 55: openfoxwq.ResignRequest
	(*ResignResponse)(nil),                                      // 56: openfoxwq.ResignResponse
	(*GameResultEvent)(nil),                                     // 57: openfoxwq.GameResultEvent
	(*GetPlayerInfoResponse_RegisterInfo)(nil),                  // 58: openfoxwq.GetPlayerInfoResponse.RegisterInfo
	(*GetPlayerInfoResponse_RecentRecord)(nil),                  // 59: openfoxwq.GetPlayerInfoResponse.RecentRecord
	(*GetPlayerInfoResponse_OverallResults)(nil),                // 60: openfoxwq.GetPlayerInfoResponse.OverallResults
	(*GetPlayerInfoResponse_ProInfo)(nil),                       // 61: openfoxwq.GetPlayerInfoResponse.ProInfo
	(*GetPlayerInfoResponse_PerformanceRecord)(nil),             // 62: openfoxwq.GetPlayerInfoResponse.PerformanceRecord
	(*GetPlayerInfoResponse_Results)(nil),                       // 63: openfoxwq.GetPlayerInfoResponse.Results
	(*GetPlayerInfoResponse_Rooms)(nil),                         // 64: openfoxwq.GetPlayerInfoResponse.Rooms
	(*GetPlayerInfoResponse_MembershipInfo)(nil),                // 65: openfoxwq.GetPlayerInfoResponse.MembershipInfo
	(*GetPlayerInfoResponse_PlayerFlair)(nil),                   // 66: openfoxwq.GetPlayerInfoResponse.PlayerFlair
	(*GetPlayerInfoResponse_Unknown10)(nil),                     // 67: openfoxwq.GetPlayerInfoResponse.Unknown10
	(*GetPlayerInfoResponse_Unknown11)(nil),                     // 68: openfoxwq.GetPlayerInfoResponse.Unknown11
	(*GetPlayerInfoResponse_Unknown19)(nil),                     // 69: openfoxwq.GetPlayerInfoResponse.Unknown19
	(*GetPlayerInfoResponse_Unknown22)(nil),                     // 70: openfoxwq.GetPlayerInfoResponse.Unknown22
	(*GetPlayerInfoResponse_Unknown23)(nil),                     // 71: openfoxwq.GetPlayerInfoResponse.Unknown23
	(*GetPlayerInfoResponse_RecentRecord_RankRequirements)(nil), // 72: openfoxwq.GetPlayerInfoResponse.RecentRecord.RankRequirements
	(*GetPlayerInfoResponse_Rooms_Room)(nil),                    // 73: openfoxwq.GetPlayerInfoResponse.Rooms.Room
	(*GetPlayerInfoResponse_Rooms_Room_ShortPlayerInfo)(nil),    // 74: openfoxwq.GetPlayerInfoResponse.Rooms.Room.ShortPlayerInfo
	(*UnknownPlayRequest1_UnknownPlayRequest1Nested1)(nil),      // 75: openfoxwq.UnknownPlayRequest1.UnknownPlayRequest1Nested1
	(*GetRoomInfoResponse_Unknown2)(nil),                        // 76: openfoxwq.GetRoomInfoResponse.Unknown2
	(*GetRoomInfoResponse_PlayerEntry)(nil),                     // 77: openfoxwq.GetRoomInfoResponse.PlayerEntry
	(*GetRoomInfoResponse_Unknown5)(nil),                        // 78: openfoxwq.GetRoomInfoResponse.Unknown5
	(*GetRoomInfoResponse_RoomInfo)(nil),                        // 79: openfoxwq.GetRoomInfoResponse.RoomInfo
	nil,                                                         // 80: openfoxwq.GetAutomatchStatsResponse.PopulationEntry
	(*AutomatchFoundEvent_RoomParticipant)(nil),                 // 81: openfoxwq.AutomatchFoundEvent.RoomParticipant
	(*MatchStartEvent_MatchPlayerInfo)(nil),                     // 82: openfoxwq.MatchStartEvent.MatchPlayerInfo
	(*MatchStartEvent_AutomatchPreset)(nil),                     // 83: openfoxwq.MatchStartEvent.AutomatchPreset
	(*ListRoomParticipantsResponse_RoomParticipantInfo)(nil),    // 84: openfoxwq.ListRoomParticipantsResponse.RoomParticipantInfo
	(*SyncMatchTimeResponse_ElapsedInfo)(nil),                   // 85: openfoxwq.SyncMatchTimeResponse.ElapsedInfo
	(*PlayerInfo)(nil),                                          // 86: openfoxwq.PlayerInfo
	(Rank)(0),                                                   // 87: openfoxwq.Rank
	(*RoomId)(nil),                                              // 88: openfoxwq.RoomId
	(*RoomSettings)(nil),                                        // 89: openfoxwq.RoomSettings
	(Color)(0),                                                  // 90: openfoxwq.Color
	(Country)(0),                                                // 91: openfoxwq.Country
	(Sex)(0),                                                    // 92: openfoxwq.Sex
	(MembershipType)(0),                                         // 93: openfoxwq.MembershipType
	(Flair)(0),                                                  // 94: openfoxwq.Flair
	(*emptypb.Empty)(nil),                                       // 95: google.protobuf.Empty
}
var file_proto_play_proto_depIdxs = []int32{
	86,  // 0: openfoxwq.ListPlayersResponse.players:type_name -> openfoxwq.PlayerInfo
	8,   // 1: openfoxwq.GetPlayerInfoRequest.info_options:type_name -> openfoxwq.InfoOptions
	8,   // 2: openfoxwq.GetPlayerInfoResponse.info_options:type_name -> openfoxwq.InfoOptions
	87,  // 3: openfoxwq.GetPlayerInfoResponse.rank:type_name -> openfoxwq.Rank
	58,  // 4: openfoxwq.GetPlayerInfoResponse.register_info:type_name -> openfoxwq.GetPlayerInfoResponse.RegisterInfo
	59,  // 5: openfoxwq.GetPlayerInfoResponse.recent_record:type_name -> openfoxwq.GetPlayerInfoResponse.RecentRecord
	67,  // 6: openfoxwq.GetPlayerInfoResponse.unknown_field_10:type_name -> openfoxwq.GetPlayerInfoResponse.Unknown10
	68,  // 7: openfoxwq.GetPlayerInfoResponse.unknown_field_11:type_name -> openfoxwq.GetPlayerInfoResponse.Unknown11
	60,  // 8: openfoxwq.GetPlayerInfoResponse.overall_results:type_name -> openfoxwq.GetPlayerInfoResponse.OverallResults
	65,  // 9: openfoxwq.GetPlayerInfoResponse.membership_info:type_name -> openfoxwq.GetPlayerInfoResponse.MembershipInfo
	66,  // 10: openfoxwq.GetPlayerInfoResponse.flair:type_name -> openfoxwq.GetPlayerInfoResponse.PlayerFlair
	61,  // 11: openfoxwq.GetPlayerInfoResponse.pro_info:type_name -> openfoxwq.GetPlayerInfoResponse.ProInfo
	62,  // 12: openfoxwq.GetPlayerInfoResponse.perf_record:type_name -> openfoxwq.GetPlayerInfoResponse.PerformanceRecord
	69,  // 13: openfoxwq.GetPlayerInfoResponse.unknown_field_19:type_name -> openfoxwq.GetPlayerInfoResponse.Unknown19
	63,  // 14: openfoxwq.GetPlayerInfoResponse.results:type_name -> openfoxwq.GetPlayerInfoResponse.Results
	64,  // 15: openfoxwq.GetPlayerInfoResponse.rooms:type_name -> openfoxwq.GetPlayerInfoResponse.Rooms
	70,  // 16: openfoxwq.GetPlayerInfoResponse.unknown_field_22:type_name -> openfoxwq.GetPlayerInfoResponse.Unknown22
	71,  // 17: openfoxwq.GetPlayerInfoResponse.unknown_field_23:type_name -> openfoxwq.GetPlayerInfoResponse.Unknown23
	86,  // 18: openfoxwq.PlayerStateEvent.player_info:type_name -> openfoxwq.PlayerInfo
	86,  // 19: openfoxwq.PlayerOnlineEvent.player_info:type_name -> openfoxwq.PlayerInfo
	75,  // 20: openfoxwq.UnknownPlayRequest1.unknown_field_1:type_name -> openfoxwq.UnknownPlayRequest1.UnknownPlayRequest1Nested1
	88,  // 21: openfoxwq.GetRoomInfoRequest.id:type_name -> openfoxwq.RoomId
	76,  // 22: openfoxwq.GetRoomInfoResponse.unknown_field_2:type_name -> openfoxwq.GetRoomInfoResponse.Unknown2
	79,  // 23: openfoxwq.GetRoomInfoResponse.room_info:type_name -> openfoxwq.GetRoomInfoResponse.RoomInfo
	80,  // 24: openfoxwq.GetAutomatchStatsResponse.population:type_name -> openfoxwq.GetAutomatchStatsResponse.PopulationEntry
	81,  // 25: openfoxwq.AutomatchFoundEvent.participants:type_name -> openfoxwq.AutomatchFoundEvent.RoomParticipant
	89,  // 26: openfoxwq.MatchStartEvent.room_settings:type_name -> openfoxwq.RoomSettings
	82,  // 27: openfoxwq.MatchStartEvent.players:type_name -> openfoxwq.MatchStartEvent.MatchPlayerInfo
	83,  // 28: openfoxwq.MatchStartEvent.automatch_preset:type_name -> openfoxwq.MatchStartEvent.AutomatchPreset
	88,  // 29: openfoxwq.EnterRoomRequest.id:type_name -> openfoxwq.RoomId
	88,  // 30: openfoxwq.EnterRoomResponse.room_id:type_name -> openfoxwq.RoomId
	31,  // 31: openfoxwq.EnterRoomResponse.heartbeat_info:type_name -> openfoxwq.HeartbeatInfo
	88,  // 32: openfoxwq.LeaveRoomRequest.id:type_name -> openfoxwq.RoomId
	88,  // 33: openfoxwq.LeaveRoomResponse.room_id:type_name -> openfoxwq.RoomId
	88,  // 34: openfoxwq.ListRoomParticipantsRequest.id:type_name -> openfoxwq.RoomId
	88,  // 35: openfoxwq.ListRoomParticipantsResponse.id:type_name -> openfoxwq.RoomId
	84,  // 36: openfoxwq.ListRoomParticipantsResponse.participants:type_name -> openfoxwq.ListRoomParticipantsResponse.RoomParticipantInfo
	90,  // 37: openfoxwq.MoveRequest.col:type_name -> openfoxwq.Color
	38,  // 38: openfoxwq.MoveRequest.last_turn:type_name -> openfoxwq.LastTurnInfo
	38,  // 39: openfoxwq.PassRequest.last_turn:type_name -> openfoxwq.LastTurnInfo
	85,  // 40: openfoxwq.SyncMatchTimeResponse.elapsed_info:type_name -> openfoxwq.SyncMatchTimeResponse.ElapsedInfo
	88,  // 41: openfoxwq.SyncMatchTimeResponse.room_id:type_name -> openfoxwq.RoomId
	90,  // 42: openfoxwq.NextMoveEvent.col:type_name -> openfoxwq.Color
	45,  // 43: openfoxwq.NextMoveEvent.time_state:type_name -> openfoxwq.MatchPlayerTimeState
	38,  // 44: openfoxwq.NextMoveEvent.last_turn:type_name -> openfoxwq.LastTurnInfo
	45,  // 45: openfoxwq.PassEvent.time_state:type_name -> openfoxwq.MatchPlayerTimeState
	38,  // 46: openfoxwq.PassEvent.last_turn:type_name -> openfoxwq.LastTurnInfo
	48,  // 47: openfoxwq.ResumeCountdownEvent.countdown:type_name -> openfoxwq.CountdownEvent
	0,   // 48: openfoxwq.CountingDecision.stage:type_name -> openfoxwq.CountingStage
	0,   // 49: openfoxwq.CountingEvent.stage:type_name -> openfoxwq.CountingStage
	90,  // 50: openfoxwq.CountingEvent.winner:type_name -> openfoxwq.Color
	90,  // 51: openfoxwq.GameResultEvent.winner:type_name -> openfoxwq.Color
	91,  // 52: openfoxwq.GetPlayerInfoResponse.RegisterInfo.country:type_name -> openfoxwq.Country
	92,  // 53: openfoxwq.GetPlayerInfoResponse.RegisterInfo.sex:type_name -> openfoxwq.Sex
	72,  // 54: openfoxwq.GetPlayerInfoResponse.RecentRecord.rank_requirements:type_name -> openfoxwq.GetPlayerInfoResponse.RecentRecord.RankRequirements
	87,  // 55: openfoxwq.GetPlayerInfoResponse.ProInfo.rank:type_name -> openfoxwq.Rank
	87,  // 56: openfoxwq.GetPlayerInfoResponse.PerformanceRecord.rank:type_name -> openfoxwq.Rank
	1,   // 57: openfoxwq.GetPlayerInfoResponse.Results.type:type_name -> openfoxwq.GetPlayerInfoResponse.ResultsType
	73,  // 58: openfoxwq.GetPlayerInfoResponse.Rooms.rooms:type_name -> openfoxwq.GetPlayerInfoResponse.Rooms.Room
	93,  // 59: openfoxwq.GetPlayerInfoResponse.MembershipInfo.type:type_name -> openfoxwq.MembershipType
	94,  // 60: openfoxwq.GetPlayerInfoResponse.PlayerFlair.flair:type_name -> openfoxwq.Flair
	88,  // 61: openfoxwq.GetPlayerInfoResponse.Rooms.Room.id:type_name -> openfoxwq.RoomId
	74,  // 62: openfoxwq.GetPlayerInfoResponse.Rooms.Room.player1:type_name -> openfoxwq.GetPlayerInfoResponse.Rooms.Room.ShortPlayerInfo
	74,  // 63: openfoxwq.GetPlayerInfoResponse.Rooms.Room.player2:type_name -> openfoxwq.GetPlayerInfoResponse.Rooms.Room.ShortPlayerInfo
	87,  // 64: openfoxwq.GetPlayerInfoResponse.Rooms.Room.ShortPlayerInfo.rank:type_name -> openfoxwq.Rank
	91,  // 65: openfoxwq.GetPlayerInfoResponse.Rooms.Room.ShortPlayerInfo.country:type_name -> openfoxwq.Country
	87,  // 66: openfoxwq.GetRoomInfoResponse.PlayerEntry.rank:type_name -> openfoxwq.Rank
	91,  // 67: openfoxwq.GetRoomInfoResponse.PlayerEntry.country:type_name -> openfoxwq.Country
	88,  // 68: openfoxwq.GetRoomInfoResponse.RoomInfo.id:type_name -> openfoxwq.RoomId
	77,  // 69: openfoxwq.GetRoomInfoResponse.RoomInfo.players:type_name -> openfoxwq.GetRoomInfoResponse.PlayerEntry
	89,  // 70: openfoxwq.GetRoomInfoResponse.RoomInfo.settings:type_name -> openfoxwq.RoomSettings
	78,  // 71: openfoxwq.GetRoomInfoResponse.RoomInfo.unknown_field_5:type_name -> openfoxwq.GetRoomInfoResponse.Unknown5
	87,  // 72: openfoxwq.AutomatchFoundEvent.RoomParticipant.rank:type_name -> openfoxwq.Rank
	87,  // 73: openfoxwq.MatchStartEvent.MatchPlayerInfo.rank:type_name -> openfoxwq.Rank
	91,  // 74: openfoxwq.MatchStartEvent.MatchPlayerInfo.country:type_name -> openfoxwq.Country
	87,  // 75: openfoxwq.ListRoomParticipantsResponse.RoomParticipantInfo.rank:type_name -> openfoxwq.Rank
	91,  // 76: openfoxwq.ListRoomParticipantsResponse.RoomParticipantInfo.country:type_name -> openfoxwq.Country
	2,   // 77: openfoxwq.Play.Login:input_type -> openfoxwq.LoginPlayServerRequest
	4,   // 78: openfoxwq.Play.ListPlayers:input_type -> openfoxwq.ListPlayersRequest
	6,   // 79: openfoxwq.Play.GetPlayerInfo:input_type -> openfoxwq.GetPlayerInfoRequest
	11,  // 80: openfoxwq.Play.SyncPlayers:input_type -> openfoxwq.SyncPlayersRequest
	19,  // 81: openfoxwq.Play.GetRoomInfo:input_type -> openfoxwq.GetRoomInfoRequest
	32,  // 82: openfoxwq.Play.EnterRoom:input_type -> openfoxwq.EnterRoomRequest
	34,  // 83: openfoxwq.Play.LeaveRoom:input_type -> openfoxwq.LeaveRoomRequest
	36,  // 84: openfoxwq.Play.ListRoomParticipants:input_type -> openfoxwq.ListRoomParticipantsRequest
	95,  // 85: openfoxwq.Play.ListenPlayerOnlineCountEvents:input_type -> google.protobuf.Empty
	95,  // 86: openfoxwq.Play.ListenPlayerOnlineEvents:input_type -> google.protobuf.Empty
	95,  // 87: openfoxwq.Play.ListenPlayerOfflineEvents:input_type -> google.protobuf.Empty
	95,  // 88: openfoxwq.Play.ListenPlayerStateEvents:input_type -> google.protobuf.Empty
	21,  // 89: openfoxwq.Play.GetAutomatchStats:input_type -> openfoxwq.GetAutomatchStatsRequest
	23,  // 90: openfoxwq.Play.StartAutomatch:input_type -> openfoxwq.StartAutomatchRequest
	95,  // 91: openfoxwq.Play.ListenAutomatchFoundEvents:input_type -> google.protobuf.Empty
	25,  // 92: openfoxwq.Play.StopAutomatch:input_type -> openfoxwq.StopAutomatchRequest
	28,  // 93: openfoxwq.Play.AcceptMatch:input_type -> openfoxwq.AcceptMatchRequest
	43,  // 94: openfoxwq.Play.SyncMatchTime:input_type -> openfoxwq.SyncMatchTimeRequest
	39,  // 95: openfoxwq.Play.Move:input_type -> openfoxwq.MoveRequest
	41,  // 96: openfoxwq.Play.Pass:input_type -> openfoxwq.PassRequest
	50,  // 97: openfoxwq.Play.RequestCounting:input_type -> openfoxwq.RequestCountingRequest
	53,  // 98: openfoxwq.Play.SendCountingDecision:input_type -> openfoxwq.CountingDecision
	55,  // 99: openfoxwq.Play.Resign:input_type -> openfoxwq.ResignRequest
	95,  // 100: openfoxwq.Play.ListenMatchStartEvents:input_type -> google.protobuf.Empty
	95,  // 101: openfoxwq.Play.ListenNextMoveEvents:input_type -> google.protobuf.Empty
	95,  // 102: openfoxwq.Play.ListenPassEvents:input_type -> google.protobuf.Empty
	95,  // 103: openfoxwq.Play.ListenCountdownEvents:input_type -> google.protobuf.Empty
	95,  // 104: openfoxwq.Play.ListenResumeCountdownEvents:input_type -> google.protobuf.Empty
	95,  // 105: openfoxwq.Play.ListenCountingDecisions:input_type -> google.protobuf.Empty
	95,  // 106: openfoxwq.Play.ListenCountingEvents:input_type -> google.protobuf.Empty
	95,  // 107: openfoxwq.Play.ListenGameResultEvents:input_type -> google.protobuf.Empty
	9,   // 108: openfoxwq.Play.SyncTime:input_type -> openfoxwq.SyncTimeRequest
	17,  // 109: openfoxwq.Play.Unknown1:input_type -> openfoxwq.UnknownPlayRequest1
	3,   // 110: openfoxwq.Play.Login:output_type -> openfoxwq.LoginPlayServerResponse
	5,   // 111: openfoxwq.Play.ListPlayers:output_type -> openfoxwq.ListPlayersResponse
	7,   // 112: openfoxwq.Play.GetPlayerInfo:output_type -> openfoxwq.GetPlayerInfoResponse
	12,  // 113: openfoxwq.Play.SyncPlayers:output_type -> openfoxwq.SyncPlayersResponse
	20,  // 114: openfoxwq.Play.GetRoomInfo:output_type -> openfoxwq.GetRoomInfoResponse
	33,  // 115: openfoxwq.Play.EnterRoom:output_type -> openfoxwq.EnterRoomResponse
	35,  // 116: openfoxwq.Play.LeaveRoom:output_type -> openfoxwq.LeaveRoomResponse
	37,  // 117: openfoxwq.Play.ListRoomParticipants:output_type -> openfoxwq.ListRoomParticipantsResponse
	14,  // 118: openfoxwq.Play.ListenPlayerOnlineCountEvents:output_type -> openfoxwq.PlayerOnlineCountEvent
	15,  // 119: openfoxwq.Play.ListenPlayerOnlineEvents:output_type -> openfoxwq.PlayerOnlineEvent
	16,  // 120: openfoxwq.Play.ListenPlayerOfflineEvents:output_type -> openfoxwq.PlayerOfflineEvent
	13,  // 121: openfoxwq.Play.ListenPlayerStateEvents:output_type -> openfoxwq.PlayerStateEvent
	22,  // 122: openfoxwq.Play.GetAutomatchStats:output_type -> openfoxwq.GetAutomatchStatsResponse
	24,  // 123: openfoxwq.Play.StartAutomatch:output_type -> openfoxwq.StartAutomatchResponse
	27,  // 124: openfoxwq.Play.ListenAutomatchFoundEvents:output_type -> openfoxwq.AutomatchFoundEvent
	26,  // 125: openfoxwq.Play.StopAutomatch:output_type -> openfoxwq.StopAutomatchResponse
	29,  // 126: openfoxwq.Play.AcceptMatch:output_type -> openfoxwq.AcceptMatchResponse
	44,  // 127: openfoxwq.Play.SyncMatchTime:output_type -> openfoxwq.SyncMatchTimeResponse
	40,  // 128: openfoxwq.Play.Move:output_type -> openfoxwq.MoveResponse
	42,  // 129: openfoxwq.Play.Pass:output_type -> openfoxwq.PassResponse
	51,  // 130: openfoxwq.Play.RequestCounting:output_type -> openfoxwq.RequestCountingResponse
	52,  // 131: openfoxwq.Play.SendCountingDecision:output_type -> openfoxwq.SendCountingDecisionResponse
	56,  // 132: openfoxwq.Play.Resign:output_type -> openfoxwq.ResignResponse
	30,  // 133: openfoxwq.Play.ListenMatchStartEvents:output_type -> openfoxwq.MatchStartEvent
	46,  // 134: openfoxwq.Play.ListenNextMoveEvents:output_type -> openfoxwq.NextMoveEvent
	47,  // 135: openfoxwq.Play.ListenPassEvents:output_type -> openfoxwq.PassEvent
	48,  // 136: openfoxwq.Play.ListenCountdownEvents:output_type -> openfoxwq.CountdownEvent
	49,  // 137: openfoxwq.Play.ListenResumeCountdownEvents:output_type -> openfoxwq.ResumeCountdownEvent
	53,  // 138: openfoxwq.Play.ListenCountingDecisions:output_type -> openfoxwq.CountingDecision
	54,  // 139: openfoxwq.Play.ListenCountingEvents:output_type -> openfoxwq.CountingEvent
	57,  // 140: openfoxwq.Play.ListenGameResultEvents:output_type -> openfoxwq.GameResultEvent
	10,  // 141: openfoxwq.Play.SyncTime:output_type -> openfoxwq.SyncTimeResponse
	18,  // 142: openfoxwq.Play.Unknown1:output_type -> openfoxwq.UnknownPlayResponse1
	110, // [110:143] is the sub-list for method output_type
	77,  // [77:110] is the sub-list for method input_type
	77,  // [77:77] is the sub-list for extension type_name
	77,  // [77:77] is the sub-list for extension extendee
	0,   // [0:77] is the sub-list for field type_name
}

func init() { file_proto_play_proto_init() }
func file_proto_play_proto_init() {
	if File_proto_play_proto != nil {
		return
	}
	file_proto_reqOption_proto_init()
	file_proto_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_proto_play_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginPlayServerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_play_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginPlayServerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_play_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPlayersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_play_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPlayersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_play_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlayerInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_play_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlayerInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_play_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InfoOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_play_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncTimeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_play_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncTimeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_play_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncPlayersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_play_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncPlayersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_play_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerStateEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_play_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerOnlineCountEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_play_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerOnlineEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_play_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerOfflineEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_play_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnknownPlayRequest1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_play_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnknownPlayResponse1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_play_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRoomInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_play_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRoomInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_play_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAutomatchStatsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_play_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAutomatchStatsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_play_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartAutomatchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_play_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartAutomatchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_play_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopAutomatchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_play_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopAutomatchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_play_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AutomatchFoundEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_play_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcceptMatchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_play_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcceptMatchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_play_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchStartEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_play_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeartbeatInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_play_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnterRoomRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_play_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnterRoomResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_play_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeaveRoomRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_play_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeaveRoomResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_play_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRoomParticipantsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_play_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRoomParticipantsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_play_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LastTurnInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_play_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MoveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_play_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MoveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_play_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PassRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_play_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PassResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_play_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncMatchTimeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_play_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncMatchTimeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_play_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchPlayerTimeState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_play_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NextMoveEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_play_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PassEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_play_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountdownEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_play_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResumeCountdownEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_play_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestCountingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_play_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestCountingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_play_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendCountingDecisionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_play_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountingDecision); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_play_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountingEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_play_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResignRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_play_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResignResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_play_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameResultEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_play_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlayerInfoResponse_RegisterInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_play_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlayerInfoResponse_RecentRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_play_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlayerInfoResponse_OverallResults); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_play_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlayerInfoResponse_ProInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_play_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlayerInfoResponse_PerformanceRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_play_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlayerInfoResponse_Results); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_play_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlayerInfoResponse_Rooms); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_play_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlayerInfoResponse_MembershipInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_play_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlayerInfoResponse_PlayerFlair); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_play_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlayerInfoResponse_Unknown10); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_play_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlayerInfoResponse_Unknown11); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_play_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlayerInfoResponse_Unknown19); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_play_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlayerInfoResponse_Unknown22); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_play_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlayerInfoResponse_Unknown23); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_play_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlayerInfoResponse_RecentRecord_RankRequirements); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_play_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlayerInfoResponse_Rooms_Room); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_play_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlayerInfoResponse_Rooms_Room_ShortPlayerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_play_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnknownPlayRequest1_UnknownPlayRequest1Nested1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_play_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRoomInfoResponse_Unknown2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_play_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRoomInfoResponse_PlayerEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_play_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRoomInfoResponse_Unknown5); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_play_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRoomInfoResponse_RoomInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_play_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AutomatchFoundEvent_RoomParticipant); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_play_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchStartEvent_MatchPlayerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_play_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchStartEvent_AutomatchPreset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_play_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRoomParticipantsResponse_RoomParticipantInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_play_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncMatchTimeResponse_ElapsedInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_play_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   84,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_play_proto_goTypes,
		DependencyIndexes: file_proto_play_proto_depIdxs,
		EnumInfos:         file_proto_play_proto_enumTypes,
		MessageInfos:      file_proto_play_proto_msgTypes,
	}.Build()
	File_proto_play_proto = out.File
	file_proto_play_proto_rawDesc = nil
	file_proto_play_proto_goTypes = nil
	file_proto_play_proto_depIdxs = nil
}
